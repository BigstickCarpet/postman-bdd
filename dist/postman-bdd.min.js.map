{
  "version": 3,
  "sources": [
    "../node_modules/simplifyify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "../lib/assertions.js",
    "../lib/bdd.js",
    "../lib/cookies.js",
    "../lib/hook.js",
    "../lib/index.js",
    "../lib/log.js",
    "../lib/options.js",
    "../lib/response.js",
    "../lib/runnable.js",
    "../lib/state.js",
    "../node_modules/chai/index.js",
    "../node_modules/chai/lib/chai.js",
    "../node_modules/chai/lib/chai/assertion.js",
    "../node_modules/chai/lib/chai/config.js",
    "../node_modules/chai/lib/chai/core/assertions.js",
    "../node_modules/chai/lib/chai/interface/assert.js",
    "../node_modules/chai/lib/chai/interface/expect.js",
    "../node_modules/chai/lib/chai/interface/should.js",
    "../node_modules/chai/lib/chai/utils/addChainableMethod.js",
    "../node_modules/chai/lib/chai/utils/addMethod.js",
    "../node_modules/chai/lib/chai/utils/addProperty.js",
    "../node_modules/chai/lib/chai/utils/expectTypes.js",
    "../node_modules/chai/lib/chai/utils/flag.js",
    "../node_modules/chai/lib/chai/utils/getActual.js",
    "../node_modules/chai/lib/chai/utils/getEnumerableProperties.js",
    "../node_modules/chai/lib/chai/utils/getMessage.js",
    "../node_modules/chai/lib/chai/utils/getName.js",
    "../node_modules/chai/lib/chai/utils/getPathInfo.js",
    "../node_modules/chai/lib/chai/utils/getPathValue.js",
    "../node_modules/chai/lib/chai/utils/getProperties.js",
    "../node_modules/chai/lib/chai/utils/hasProperty.js",
    "../node_modules/chai/lib/chai/utils/index.js",
    "../node_modules/chai/lib/chai/utils/inspect.js",
    "../node_modules/chai/lib/chai/utils/objDisplay.js",
    "../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js",
    "../node_modules/chai/lib/chai/utils/overwriteMethod.js",
    "../node_modules/chai/lib/chai/utils/overwriteProperty.js",
    "../node_modules/chai/lib/chai/utils/test.js",
    "../node_modules/chai/lib/chai/utils/transferFlags.js",
    "../node_modules/chai/node_modules/assertion-error/index.js",
    "../node_modules/chai/node_modules/deep-eql/index.js",
    "../node_modules/chai/node_modules/deep-eql/lib/eql.js",
    "../node_modules/chai/node_modules/deep-eql/node_modules/type-detect/index.js",
    "../node_modules/chai/node_modules/deep-eql/node_modules/type-detect/lib/type.js",
    "../node_modules/chai/node_modules/type-detect/lib/type.js",
    "../node_modules/cookiejar/cookiejar.js",
    "../node_modules/is-ip/index.js",
    "../node_modules/is-ip/node_modules/ip-regex/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/buffer/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/buffer/node_modules/base64-js/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/buffer/node_modules/ieee754/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/buffer/node_modules/isarray/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/punycode/punycode.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/querystring-es3/decode.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/querystring-es3/encode.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/querystring-es3/index.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/url/url.js",
    "../node_modules/simplifyify/node_modules/browserify/node_modules/url/util.js"
  ],
  "names": [
    "f",
    "exports",
    "module",
    "define",
    "amd",
    "g",
    "window",
    "global",
    "self",
    "this",
    "postmanBDD",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "Error",
    "code",
    "l",
    "call",
    "length",
    "1",
    "chaiHttp",
    "contentTypes",
    "addProperty",
    "getHeader",
    "_obj",
    "assert",
    "indexOf",
    "Assertion",
    "addMethod",
    "to",
    "have",
    "property",
    "status",
    "method",
    "Object",
    "keys",
    "headers",
    "arguments",
    "RegExp",
    "test",
    "isIP",
    "forEach",
    "wasRedirected",
    "redirects",
    "join",
    "url",
    "parse",
    "query",
    "getCookies",
    "getCookie",
    "value",
    "tv4",
    "validate",
    "flag",
    "error",
    "dataPath",
    "schemaPath",
    "message",
    "c",
    "substr",
    "split",
    "SyntaxError",
    "toLowerCase",
    "cookies",
    "parseRequestCookies",
    "json",
    "text",
    "html",
    "PostmanBDD",
    "state",
    "State",
    "hooks",
    "before",
    "Hook",
    "after",
    "beforeEach",
    "afterEach",
    "prototype",
    "bind",
    "describe",
    "it",
    "Runnable",
    "push",
    "oneTimeInitialization",
    "run",
    "isFinished",
    "results",
    "result",
    "isStarted",
    "CookieJar",
    "CookieAccessInfo",
    "find",
    "name",
    "map",
    "trim",
    "setCookies",
    "All",
    "parseResponseCookies",
    "type",
    "runnables",
    "inAHook",
    "isHook",
    "initPostmanBDD",
    "log",
    "info",
    "initBDD",
    "initSuperAgent",
    "initChai",
    "SuperAgent",
    "response",
    "chai",
    "expect",
    "should",
    "use",
    "assertions",
    "options",
    "reset",
    "levels",
    "isEnabled",
    "logLevel",
    "errorToPOJO",
    "concat",
    "reduce",
    "console",
    "apply",
    "defineProperties",
    "defineProperty",
    "configurable",
    "enumerable",
    "get",
    "parseResponeBody",
    "JSON",
    "xml2Json",
    "stringify",
    "postman",
    "getResponseHeader",
    "getResponseCookie",
    "responseCode",
    "statusType",
    "Math",
    "floor",
    "ok",
    "redirect",
    "clientError",
    "serverError",
    "accepted",
    "noContent",
    "badRequest",
    "unauthorized",
    "notAcceptable",
    "notFound",
    "forbidden",
    "responseBody",
    "body",
    "writable",
    "header",
    "responseHeaders",
    "time",
    "responseTime",
    "charset",
    "exec",
    "responseCookies",
    "title",
    "fn",
    "counters",
    "stack",
    "toString",
    "debug",
    "success",
    "failure",
    "pop",
    "resetTests",
    "tests",
    "some",
    "used",
    "version",
    "AssertionError",
    "util",
    "config",
    "assertion",
    "core",
    "callee",
    "warn",
    "includeStack",
    "set",
    "showDiff",
    "addChainableMethod",
    "overwriteProperty",
    "overwriteMethod",
    "overwriteChainableMethod",
    "getMessage",
    "d",
    "getActual",
    "actual",
    "expected",
    "truncateThreshold",
    "k",
    "charAt",
    "expectTypes",
    "eql",
    "C",
    "h",
    "inspect",
    "p",
    "getName",
    "b",
    "hasOwnProperty",
    "getOwnPropertyDescriptor",
    "x",
    "y",
    "Array",
    "slice",
    "filter",
    "every",
    "sort",
    "v",
    "is",
    "w",
    "m",
    "objDisplay",
    "negate",
    "j",
    "abs",
    "M",
    "P",
    "be",
    "an",
    "O",
    "E",
    "q",
    "isNaN",
    "isArray",
    "object",
    "getPathInfo",
    "exists",
    "hasProperty",
    "isExtensible",
    "TypeError",
    "isSealed",
    "isFrozen",
    "fail",
    "operator",
    "isOk",
    "isNotOk",
    "not",
    "equal",
    "notEqual",
    "strictEqual",
    "notStrictEqual",
    "deepEqual",
    "notDeepEqual",
    "isAbove",
    "above",
    "isAtLeast",
    "least",
    "isBelow",
    "below",
    "isAtMost",
    "most",
    "isTrue",
    "true",
    "isNotTrue",
    "isFalse",
    "false",
    "isNotFalse",
    "isNull",
    "isNotNull",
    "NaN",
    "isNotNaN",
    "isUndefined",
    "isDefined",
    "isFunction",
    "isNotFunction",
    "isObject",
    "isNotObject",
    "isNotArray",
    "isString",
    "isNotString",
    "isNumber",
    "isNotNumber",
    "isBoolean",
    "isNotBoolean",
    "typeOf",
    "notTypeOf",
    "instanceOf",
    "notInstanceOf",
    "include",
    "notInclude",
    "match",
    "notMatch",
    "notProperty",
    "deepProperty",
    "deep",
    "notDeepProperty",
    "propertyVal",
    "propertyNotVal",
    "deepPropertyVal",
    "deepPropertyNotVal",
    "lengthOf",
    "throws",
    "throw",
    "doesNotThrow",
    "Throw",
    "closeTo",
    "approximately",
    "sameMembers",
    "same",
    "members",
    "sameDeepMembers",
    "includeMembers",
    "includeDeepMembers",
    "oneOf",
    "changes",
    "change",
    "doesNotChange",
    "increases",
    "increase",
    "doesNotIncrease",
    "decreases",
    "decrease",
    "doesNotDecrease",
    "ifError",
    "extensible",
    "isNotExtensible",
    "sealed",
    "isNotSealed",
    "frozen",
    "isNotFrozen",
    "String",
    "Number",
    "Boolean",
    "valueOf",
    "exist",
    "Should",
    "transferFlags",
    "hasProtoSupport",
    "excludeNames",
    "Function",
    "chainingBehavior",
    "__methods",
    "__proto__",
    "create",
    "getOwnPropertyNames",
    "__flags",
    "replace",
    "parsePath",
    "parseFloat",
    "_getPathValue",
    "parent",
    "getPrototypeOf",
    "literals",
    "number",
    "string",
    "getPathValue",
    "showHidden",
    "seen",
    "stylize",
    "formatValue",
    "constructor",
    "formatPrimitive",
    "isDOMElement",
    "outerHTML",
    "document",
    "xmlVersion",
    "XMLSerializer",
    "serializeToString",
    "createElementNS",
    "appendChild",
    "cloneNode",
    "innerHTML",
    "getEnumerableProperties",
    "getProperties",
    "isError",
    "isRegExp",
    "isDate",
    "Date",
    "toUTCString",
    "formatError",
    "formatArray",
    "formatProperty",
    "reduceToSingleString",
    "__lookupGetter__",
    "__lookupSetter__",
    "objectToString",
    "HTMLElement",
    "nodeType",
    "nodeName",
    "splice",
    "_",
    "exclude",
    "captureStackTrace",
    "toJSON",
    "sameValue",
    "dateEqual",
    "regexpEqual",
    "Buffer",
    "isBuffer",
    "bufferEqual",
    "argumentsEqual",
    "typeEqual",
    "objectEqual",
    "getTime",
    "iterableEqual",
    "isValue",
    "getType",
    "natives",
    "Library",
    "[object Array]",
    "[object RegExp]",
    "[object Function]",
    "[object Arguments]",
    "[object Date]",
    "of",
    "ReferenceError",
    "objectTypeRegexp",
    "Promise",
    "domain",
    "path",
    "secure",
    "script",
    "expiration_date",
    "explicit_path",
    "explicit_domain",
    "noscript",
    "setCookie",
    "now",
    "collidesWith",
    "matches",
    "toValueString",
    "freeze",
    "Cookie",
    "toGMTString",
    "ipRegex",
    "ip",
    "exact",
    "v4",
    "v6",
    "typedArraySupport",
    "Uint8Array",
    "foo",
    "subarray",
    "byteLength",
    "kMaxLength",
    "TYPED_ARRAY_SUPPORT",
    "createBuffer",
    "RangeError",
    "allocUnsafe",
    "from",
    "ArrayBuffer",
    "fromArrayBuffer",
    "fromString",
    "fromObject",
    "assertSize",
    "alloc",
    "fill",
    "checked",
    "isEncoding",
    "write",
    "fromArrayLike",
    "copy",
    "buffer",
    "isnan",
    "data",
    "SlowBuffer",
    "isView",
    "utf8ToBytes",
    "base64ToBytes",
    "slowToString",
    "hexSlice",
    "utf8Slice",
    "asciiSlice",
    "latin1Slice",
    "base64Slice",
    "utf16leSlice",
    "swap",
    "bidirectionalIndexOf",
    "arrayIndexOf",
    "lastIndexOf",
    "readUInt16BE",
    "hexWrite",
    "parseInt",
    "utf8Write",
    "blitBuffer",
    "asciiWrite",
    "asciiToBytes",
    "latin1Write",
    "base64Write",
    "ucs2Write",
    "utf16leToBytes",
    "base64",
    "fromByteArray",
    "min",
    "decodeCodePointsArray",
    "MAX_ARGUMENTS_LENGTH",
    "fromCharCode",
    "toHex",
    "checkOffset",
    "checkInt",
    "objectWriteUInt16",
    "objectWriteUInt32",
    "checkIEEE754",
    "writeFloat",
    "ieee754",
    "writeDouble",
    "base64clean",
    "stringtrim",
    "INVALID_BASE64_RE",
    "charCodeAt",
    "toByteArray",
    "INSPECT_MAX_BYTES",
    "poolSize",
    "_augment",
    "Symbol",
    "species",
    "allocUnsafeSlow",
    "_isBuffer",
    "compare",
    "swap16",
    "swap32",
    "swap64",
    "equals",
    "includes",
    "isFinite",
    "_arr",
    "readUIntLE",
    "readUIntBE",
    "readUInt8",
    "readUInt16LE",
    "readUInt32LE",
    "readUInt32BE",
    "readIntLE",
    "pow",
    "readIntBE",
    "readInt8",
    "readInt16LE",
    "readInt16BE",
    "readInt32LE",
    "readInt32BE",
    "readFloatLE",
    "read",
    "readFloatBE",
    "readDoubleLE",
    "readDoubleBE",
    "writeUIntLE",
    "writeUIntBE",
    "writeUInt8",
    "writeUInt16LE",
    "writeUInt16BE",
    "writeUInt32LE",
    "writeUInt32BE",
    "writeIntLE",
    "writeIntBE",
    "writeInt8",
    "writeInt16LE",
    "writeInt16BE",
    "writeInt32LE",
    "writeInt32BE",
    "writeFloatLE",
    "writeFloatBE",
    "writeDoubleLE",
    "writeDoubleBE",
    "placeHoldersCount",
    "Arr",
    "revLookup",
    "tripletToBase64",
    "lookup",
    "encodeChunk",
    "len",
    "N",
    "LN2",
    "T",
    "S",
    "L",
    "I",
    "A",
    "F",
    "overflow",
    "not-basic",
    "invalid-input",
    "ucs2",
    "decode",
    "encode",
    "toASCII",
    "toUnicode",
    "punycode",
    "maxKeys",
    "decodeURIComponent",
    "stringifyPrimitive",
    "objectKeys",
    "encodeURIComponent",
    "Url",
    "protocol",
    "slashes",
    "auth",
    "host",
    "port",
    "hostname",
    "hash",
    "search",
    "pathname",
    "href",
    "urlParse",
    "urlFormat",
    "format",
    "urlResolve",
    "resolve",
    "urlResolveObject",
    "resolveObject",
    "protocolPattern",
    "portPattern",
    "simplePathPattern",
    "delims",
    "unwise",
    "autoEscape",
    "nonHostChars",
    "hostEndingChars",
    "hostnameMaxLen",
    "hostnamePartPattern",
    "hostnamePartStart",
    "unsafeProtocol",
    "javascript",
    "javascript:",
    "hostlessProtocol",
    "slashedProtocol",
    "http",
    "https",
    "ftp",
    "gopher",
    "file",
    "http:",
    "https:",
    "ftp:",
    "gopher:",
    "file:",
    "querystring",
    "parseHost",
    "U",
    "unshift",
    "escape",
    "R",
    "shift",
    "isNullOrUndefined"
  ],
  "mappings": ";;;;;;;;CAAA,SAAAA,GAAA,SAAAC,WAAA,gBAAAC,UAAA,YAAA,CAAAA,OAAAD,QAAAD,QAAA,UAAAG,UAAA,YAAAA,OAAAC,IAAA,CAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAA,UAAAC,UAAA,YAAA,CAAAD,EAAAC,WAAA,UAAAC,UAAA,YAAA,CAAAF,EAAAE,WAAA,UAAAC,QAAA,YAAA,CAAAH,EAAAG,SAAA,CAAAH,EAAAI,KAAAJ,EAAAK,WAAAV,OAAA,WAAA,GAAAG,QAAAD,OAAAD,OAAA,OAAA,SAAAU,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAC,UAAA,YAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,GAAAmB,SAAAD,UAAA,YAAAA,OAAA,KAAA,GAAAH,GAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,QAAAjB,OAAAD,SCAA,YAqBA,SAAS0B,UAAUhB,EAAMC,GAuHvB,QAASI,GAAkBL,GACzB,GAAIC,GAAMgB,aAAajB,EAEvBO,GAAUW,YAAYlB,EAAM,WAC1B,GAAIK,GAAcc,UAAUrB,KAAKsB,KAAM,eAEvCtB,MAAKuB,OACHhB,GAAeA,EAAYiB,QAAQrB,IAAQ,EAC3C,yDACA,uDACAD,EACAK,GAAe,4BAjIrB,GAAIE,GAAYP,EAAKuB,SAWrBhB,GAAUiB,UAAU,SAAU,SAAUxB,GACtC,GAAIO,GAAUT,KAAKsB,MAAMK,GAAGC,KAAKC,SAAS,SAC1C,IAAI1B,GAASH,KAAKsB,KAAKQ,MAEvB9B,MAAKuB,OACHpB,IAAWD,EACX,kEACA,uDACAA,EACAC,KAYJM,EAAUW,YAAY,UAAW,WAC/B,GAAIlB,GAAOF,KAAKsB,KAAKS,OAAS,UAAY,UAE1C/B,MAAKuB,OACHS,OAAOC,KAAKjC,KAAKsB,KAAKY,aAAelB,OAAS,EAC9C,gBAAkBd,EAAO,mBACzB,gBAAkBA,EAAO,8BAkB7BO,EAAUiB,UAAU,SAAU,SAAUxB,EAAKC,GAC3C,GAAII,GAASc,UAAUrB,KAAKsB,KAAMpB,GAC9BO,MAA0B,KAAXF,GAAmC,OAAXA,CAEvC4B,WAAUnB,OAAS,EACrBhB,KAAKuB,OACHd,EACA,kCACA,sCACAP,EACAK,GAGKJ,YAAiBiC,QACxBpC,KAAKuB,OACHd,GAAgBN,EAAMkC,KAAK9B,GAC3B,oBAAsBL,EAAM,mCAC5B,oBAAsBA,EAAM,uCAC5BC,EACAM,EAAeF,EAAS,oBAI1BP,KAAKuB,OACHd,GAAgBF,IAAWJ,EAC3B,oBAAsBD,EAAM,wCAC5B,oBAAsBA,EAAM,6BAC5BC,EACAM,EAAeF,EAAS,sBAc9BE,EAAUW,YAAY,KAAM,WAC1BpB,KAAKuB,OACHe,KAAKtC,KAAKsB,MACV,+BACA,sCAgCJU,OACGC,KAAKd,cACLoB,QAAQhC,GAUXE,EAAUW,YAAY,WAAY,WAChC,GAAIlB,GAASF,KAAKsB,KAAKQ,MAEvB9B,MAAKuB,OACHiB,cAAcxC,KAAKsB,MACnB,yCAA2CpB,EAC3C,oCAAsCA,EAAS,aAgBnDO,EAAUiB,UAAU,aAAc,SAAUxB,GAC1C,GAAIC,GAAYH,KAAKsB,KAAKmB,UACtBlC,EAAciC,cAAcxC,KAAKsB,MACjCb,EAAST,KAAKsB,KAAKQ,OACnBxB,EAAWe,UAAUrB,KAAKsB,KAAM,WAEhCnB,IAAaA,EAAUa,OACzBhB,KAAKuB,OACHpB,EAAUqB,QAAQtB,IAAe,EACjC,wBAA0BA,EAAc,YAAcC,EAAUuC,KAAK,UACrE,+BAAiCxC,EAAc,YAAcC,EAAUuC,KAAK,WAI9E1C,KAAKuB,OACHhB,GAAeD,IAAaJ,EAC5B,6CACA,qCACAA,EACAK,EAAcD,EAAWG,KAa/BA,EAAUW,YAAY,SAAU,WAC9B,GAAIlB,GAASyC,IAAIC,MAAM5C,KAAKsB,KAAKqB,KAAK,GAAME,KAE5C7C,MAAKuB,OACHS,OAAOC,KAAK/B,GAAQc,OAAS,EAC7B,gDACA,2DAiBJP,EAAUiB,UAAU,QAAS,SAAUxB,EAAMC,GAC3C,GAAII,GAASoC,IAAIC,MAAM5C,KAAKsB,KAAKqB,KAAK,GAAME,MACxCpC,EAAQF,EAAOL,GACfI,MAAwB,KAAVG,GAAiC,OAAVA,CAErC0B,WAAUnB,OAAS,EACrBhB,KAAKuB,OACHjB,EACA,2CACA,+CACAJ,EACAO,GAGKN,YAAiBiC,QACxBpC,KAAKuB,OACHjB,GAAeH,EAAMkC,KAAK5B,GAC1B,6BAA+BP,EAAO,mCACtC,6BAA+BA,EAAO,uCACtCC,EACAG,EAAcG,EAAQ,8BAIxBT,KAAKuB,OACHjB,GAAeG,IAAUN,EACzB,6BAA+BD,EAAO,wCACtC,6BAA+BA,EAAO,6BACtCC,EACAG,EAAcG,EAAQ,gCAa5BA,EAAUW,YAAY,UAAW,WAC/B,GAAIlB,GAAOF,KAAKsB,KAAKS,OAAS,UAAY,WACtC5B,EAAa2C,WAAW9C,KAAKsB,KAEjCtB,MAAKuB,OACHpB,EAAWa,OAAS,EACpB,gBAAkBd,EAAO,mBACzB,gBAAkBA,EAAO,8BAoB7BO,EAAUiB,UAAU,SAAU,SAAUxB,EAAMC,GAC5C,GAAII,GAASwC,UAAU/C,KAAKsB,KAAMpB,OAC9BO,MAAgC,KAAjBF,EAAOyC,OAAwC,OAAjBzC,EAAOyC,KAEpDb,WAAUnB,OAAS,EACrBhB,KAAKuB,OACHd,EACA,kCACA,sCACAP,EACAK,EAAOyC,OAGF7C,YAAiBiC,QACxBpC,KAAKuB,OACHd,GAAgBN,EAAMkC,KAAK9B,EAAOyC,OAClC,oBAAsB9C,EAAO,mCAC7B,oBAAsBA,EAAO,uCAC7BC,EACAM,EAAeF,EAAOyC,MAAQ,oBAIhChD,KAAKuB,OACHd,GAAgBF,EAAOyC,QAAU7C,EACjC,oBAAsBD,EAAO,wCAC7B,oBAAsBA,EAAO,6BAC7BC,EACAM,EAAeF,EAAOyC,MAAQ,sBAcpC9C,EAAKuB,UAAUC,UAAU,SAAU,SAAUxB,GAC3C,GAAIK,GAAQ0C,IAAIC,SAASlD,KAAKsB,KAAMpB,GAChCO,EAASN,EAAEgD,KAAKnD,KAAM,SAE1B,IAAKO,GAASE,IAAaF,IAAUE,EAAS,CAC5C,GAAIH,GAAW2C,IAAIG,MAAMC,SACrBhD,EAAa4C,IAAIG,MAAME,WACvB3C,EAAUsC,IAAIG,MAAMG,OAExB,IAAIjD,EAAU,CACZ,GAAIkD,GAAWlD,EAASmD,OAAO,GAAGC,MAAM,KAAKhB,KAAK,IAClD/B,GAAU6C,EAAW,gBAAkB7C,EAGzC,GAAIP,GAAQ,GAAIuD,aAAYhD,EAG5B,MAFAP,GAAMiD,SAAW/C,EACjBF,EAAMkD,WAAajD,EACbD,KAYZ,QAASiB,WAAWnB,EAAKC,GAEvB,GAAID,EAAImB,UACN,MAAOnB,GAAImB,UAAUlB,EAIvBA,IAAOA,GAAO,IAAIyD,aAElB,KAAK,GADDrD,GAAOyB,OAAOC,KAAK/B,EAAIgC,SAClBzB,EAAI,EAAGA,EAAIF,EAAKS,OAAQP,IAC/B,GAAIF,EAAKE,GAAGmD,gBAAkBzD,EAC5B,MAAOD,GAAIgC,QAAQ3B,EAAKE,IAW9B,QAASqC,YAAY5C,GAEnB,GAAIA,EAAI2D,QACN,MAAO3D,GAAI2D,OAIb,IAAI1D,GAASkB,UAAUnB,EAAK,SAC5B,OAAO2D,SAAQC,oBAAoB3D,GAUrC,QAAS4C,WAAW7C,EAAKC,GAEvB,GAAID,EAAI6C,UACN,MAAO7C,GAAI6C,UAAU5C,EAIvB,IAAII,GAAauC,WAAW5C,EAC5B,OAAO2D,SAAQd,UAAUxC,EAAYJ,GASvC,QAASqC,eAAetC,GACtB,GAAIC,IAAiB,IAAK,IAAK,IAAK,IAAK,KACrCI,EAAYL,EAAIuC,UAChBhC,EAASP,EAAI4B,MAEjB,OAAO3B,GAAcqB,QAAQf,IAAW,GAAKF,GAAaA,EAAUS,OA7btE,GAAIsB,MAAO5B,QAAQ,SACfiC,IAAMjC,QAAQ,OACdmD,QAAUnD,QAAQ,aAElBS,cACF4C,KAAM,mBACNC,KAAM,aACNC,KAAM,YAGRxE,QAAOD,QAAU0B,iFCZjB,YAWA,SAASgD,cACP,GAAI/D,GAAQH,KAAKmE,MAAQ,GAAIC,MAE7BpE,MAAKqE,OACHC,OAAQ,GAAIC,MAAK,SAAUpE,GAC3BqE,MAAO,GAAID,MAAK,QAASpE,GACzBsE,WAAY,GAAIF,MAAK,aAAcpE,GACnCuE,UAAW,GAAIH,MAAK,YAAapE,IAGnCH,KAAKsE,OAASJ,WAAWS,UAAUL,OAAOM,KAAK5E,MAC/CA,KAAKwE,MAAQN,WAAWS,UAAUH,MAAMI,KAAK5E,MAC7CA,KAAKyE,WAAaP,WAAWS,UAAUF,WAAWG,KAAK5E,MACvDA,KAAK0E,UAAYR,WAAWS,UAAUD,UAAUE,KAAK5E,MACrDA,KAAK6E,SAAWX,WAAWS,UAAUE,SAASD,KAAK5E,MACnDA,KAAK8E,GAAKZ,WAAWS,UAAUG,GAAGF,KAAK5E,MAxBzC,GAAI+E,UAAWrE,QAAQ,cACnB6D,KAAO7D,QAAQ,UACf0D,MAAQ1D,QAAQ,UAEpBjB,QAAOD,QAAU0E,WA6BjBA,WAAWS,UAAUL,OAAS,SAAUnE,EAAOD,GAC7CF,KAAKqE,MAAMC,OAAOU,KAAK7E,EAAOD,IAShCgE,WAAWS,UAAUH,MAAQ,SAAUrE,EAAOD,GAC5CF,KAAKqE,MAAMG,MAAMQ,KAAK7E,EAAOD,IAS/BgE,WAAWS,UAAUF,WAAa,SAAUtE,EAAOD,GACjDF,KAAKqE,MAAMI,WAAWO,KAAK7E,EAAOD,IASpCgE,WAAWS,UAAUD,UAAY,SAAUvE,EAAOD,GAChDF,KAAKqE,MAAMK,UAAUM,KAAK7E,EAAOD,IAYnCgE,WAAWS,UAAUE,SAAW,SAAU1E,EAAOD,GAC/CF,KAAKiF,uBAEL,IAAI1E,GAAW,GAAIwE,UAAS,WAAY/E,KAAKmE,MAAOhE,EAAOD,EAQ3D,OAPAK,GAAS2E,MAELlF,KAAKmE,MAAMgB,cAEbnF,KAAKqE,MAAMG,MAAMU,MAGZlF,KAAKmE,MAAMiB,SAYpBlB,WAAWS,UAAUG,GAAK,SAAU3E,EAAOD,GACzCF,KAAKiF,wBACLjF,KAAKqE,MAAMI,WAAWS,KAEtB,IAAI3E,GAAW,GAAIwE,UAAS,KAAM/E,KAAKmE,MAAOhE,EAAOD,EAIrD,OAHAK,GAAS2E,MAETlF,KAAKqE,MAAMK,UAAUQ,MACd3E,EAAS8E,QAOlBnB,WAAWS,UAAUM,sBAAwB,WACtCjF,KAAKmE,MAAMmB,aAGdtF,KAAKqE,MAAMC,OAAOY,sFCxHtB,YAEA,IAAIK,WAAY7E,QAAQ,aAAa6E,UACjCC,iBAAmB9E,QAAQ,aAAa8E,gBAE5C/F,QAAOD,SAQLuD,UAAW,SAAU7C,EAAYK,GAC/BA,GAAQA,GAAQ,IAAIqD,aAEpB,IAAIvD,GAAcH,EAAWuF,KAAK,SAAUvF,GAC1C,MAAOA,IAAUA,EAAOwF,KAAK9B,gBAAkBrD,GAGjD,OAAOF,IASTyD,oBAAqB,SAAU5D,GAC7B,GAAIK,GAAY,GAAIgF,UAEpB,IAAIrF,EAAQ,CACV,GAAIG,GAAUH,EACXwD,MAAM,KACNiC,IAAI,SAAUzF,GACb,MAAOA,GAAO0F,QAGlBrF,GAAUsF,WAAWxF,GAGvB,GAAIM,GAAaJ,EAAUuC,WAAW0C,iBAAiBM,IACvD,OAAOnF,IASToF,qBAAsB,SAAU7F,GAC9B,GAAIK,GAAY,GAAIgF,UAEhBrF,IAEFK,EAAUsF,WAAW3F,EAGvB,IAAIG,GAAaE,EAAUuC,WAAW0C,iBAAiBM,IACvD,OAAOzF,0DC7DX,YAYA,SAASkE,MAAMpE,EAAMC,GACnBJ,KAAKgG,KAAO7F,EACZH,KAAKmE,MAAQ/D,EACbJ,KAAKiG,aAbP,GAAIlB,UAAWrE,QAAQ,aAEvBjB,QAAOD,QAAU+E,KAiBjBA,KAAKI,UAAUO,IAAM,WAEdlF,KAAKmE,MAAM+B,WACdlG,KAAKiG,UAAU1D,QAAQ,SAAUpC,GAC/BA,EAAS+E,SAWfX,KAAKI,UAAUK,KAAO,SAAU7E,EAAOC,GACrC,GAAIG,GAAW,GAAIwE,UAAS/E,KAAKgG,KAAMhG,KAAKmE,MAAOhE,EAAOC,EAC1DG,GAAS4F,QAAS,EAClBnG,KAAKiG,UAAUjB,KAAKzE,2DCjBtB,QAAS6F,kBACPC,IAAIC,KAAK,qBACTC,UACAC,iBACAC,WAMF,QAASF,WACP,GAAIrG,GAAa,GAAIgE,WACrBI,QAASpE,EAAWoE,OACpBE,MAAQtE,EAAWsE,MACnBC,WAAavE,EAAWuE,WACxBC,UAAYxE,EAAWwE,UACvBG,SAAW3E,EAAW2E,SACtBC,GAAK5E,EAAW4E,GAMlB,QAAS0B,kBACP,GAAItG,GAAa,GAAIwG,WACrBC,UAAWzG,EAAWyG,SAMxB,QAASF,YACPG,KAAOlG,QAAQ,QACfa,OAASqF,KAAKrF,OACdsF,OAASD,KAAKC,OACdD,KAAKE,SAGLF,KAAKG,IAAIC,YAxDX,GAAI9C,YAAaxD,QAAQ,SACrBgG,WAAahG,QAAQ,cACrBsG,WAAatG,QAAQ,gBACrBuG,QAAUvG,QAAQ,aAClB2F,IAAM3F,QAAQ,QAGlBjB,QAAOD,QAAUyH,QAGjBxH,OAAOD,QAAQ0H,MAAQd,eAGvBA,mICjBA,YAEA,IAAIa,SAAUvG,QAAQ,aAElByG,QAAU,SAAU,QAAS,OAAQ,OAAQ,SAE7Cd,IAAM5G,OAAOD,SAOf4H,UAAW,SAAUlH,GACnB,MAAOiH,QAAO3F,QAAQyF,QAAQI,WAAaF,OAAO3F,QAAQtB,IAW5DoH,YAAa,SAAUpH,GACrB,GAAIA,GAAsB,gBAARA,GAChB,MAAO8B,QAAOC,KAAK/B,GAAKqH,QAAQ,OAAQ,UAAW,UAAUC,OAAO,SAAUjH,EAAMH,GAElF,MADAG,GAAKH,GAAOF,EAAIE,GACTG,QAMf4G,QAAO5E,QAAQ,SAAUrC,GACvBmG,IAAInG,GAAS,WACX,GAAIF,KAAKoH,UAAUlH,GAAQ,CACzB,GAAIK,GAAYkH,QAAQpB,GACM,mBAAnBoB,SAAQvH,KACjBK,EAAYkH,QAAQvH,IAGtBK,EAAUmH,MAAMD,QAAStF,qEC3C/B,YAEA1C,QAAOD,SAML6H,SAAU,iDCRZ,YAkTA,SAASM,kBAAkBzH,EAAKC,GAC9B6B,OAAOC,KAAK9B,GAASoC,QAAQ,SAAUlC,GACrC2B,OAAO4F,eAAe1H,EAAKG,GACzBwH,cAAc,EACdC,YAAY,EACZC,IAAK5H,EAAQE,OAWnB,QAAS2H,kBAAkB9H,GACzB,GAAIA,EAAS8F,KAAKxE,QAAQ,SAAW,EAEnC,IACE,MAAOyG,MAAKrF,MAAM1C,EAAS8D,MAE7B,MAAO9D,GACLmG,IAAIjD,MAAM,4CAA6CiD,IAAIiB,YAAYpH,IAI3E,GAAIA,EAAS8F,KAAKxE,QAAQ,QAAU,EAElC,IACE,GAAIrB,GAAO+H,SAAShI,EAAS8D,KAK7B,OAAOiE,MAAKrF,MAAMqF,KAAKE,UAAUhI,IAEnC,MAAOD,GACLmG,IAAIjD,MAAM,2CAA4CiD,IAAIiB,YAAYpH,IAK1E,MAAOA,GAAS8D,KA3VlB,GAAIqC,KAAM3F,QAAQ,SACdmD,QAAUnD,QAAQ,YAQtBjB,QAAOD,QAAU,WACf,GAAIU,GAAaF,IAEjBE,GAAWyG,UASTtF,UAAW,SAAUnB,GACnB,MAAuB,gBAAZkI,UAA6D,kBAA9BA,SAAQC,kBACzCD,QAAQC,kBAAkBnI,IAGjCA,GAAQA,GAAQ,IAAI0D,cACb5D,KAAKkC,QAAQhC,KAUxB6C,UAAW,SAAU7C,GACnB,MAAuB,gBAAZkI,UAA6D,kBAA9BA,SAAQE,kBACzCF,QAAQE,kBAAkBpI,GAG1B2D,QAAQd,UAAU/C,KAAK6D,QAAS3D,KAK7CyH,iBAAiBzH,EAAWyG,UAK1B7E,OAAQ,WACN,MAA+B,gBAAjByG,cAA4BA,aAAa1H,KAAO,GAOhE2H,WAAY,WACV,MAAOC,MAAKC,MAAM1I,KAAK8B,OAAS,MAUlCwE,KAAM,WACJ,MAA2B,KAApBtG,KAAKwI,YAUdG,GAAI,WACF,MAA2B,KAApB3I,KAAKwI,YAUdI,SAAU,WACR,MAA2B,KAApB5I,KAAKwI,YAUdK,YAAa,WACX,MAA2B,KAApB7I,KAAKwI,YAUdM,YAAa,WACX,MAA2B,KAApB9I,KAAKwI,YAUdpF,MAAO,WACL,MAAOpD,MAAK6I,aAAe7I,KAAK8I,aAUlCC,SAAU,WACR,MAAuB,OAAhB/I,KAAK8B,QAUdkH,UAAW,WACT,MAAuB,OAAhBhJ,KAAK8B,QAAkC,OAAhB9B,KAAK8B,QAUrCmH,WAAY,WACV,MAAuB,OAAhBjJ,KAAK8B,QAUdoH,aAAc,WACZ,MAAuB,OAAhBlJ,KAAK8B,QAUdqH,cAAe,WACb,MAAuB,OAAhBnJ,KAAK8B,QAUdsH,SAAU,WACR,MAAuB,OAAhBpJ,KAAK8B,QAUduH,UAAW,WACT,MAAuB,OAAhBrJ,KAAK8B,QAOdkC,KAAM,WACJ,MAA+B,gBAAjBsF,cAA4BA,aAAe,IAO3DC,KAAM,WACJ,GAAIrJ,GAAa8H,iBAAiBhI,KAUlC,OAPAgC,QAAO4F,eAAe5H,KAAM,QAC1B6H,cAAc,EACdC,YAAY,EACZ0B,UAAU,EACVxG,MAAO9C,IAGFA,GAUTuJ,OAAQ,WACN,MAAkC,gBAApBC,iBAA+BA,oBAU/CxH,QAAS,WACP,MAAkC,gBAApBwH,iBAA+BA,oBAO/CC,KAAM,WACJ,MAA+B,gBAAjBC,cAA4BA,aAAe,GAO3D5D,KAAM,WACJ,GAAI9F,GAAcF,KAAKqB,UAAU,iBAAmB,EACpD,OAAOnB,GAAYwD,MAAM,KAAK,IAOhCmG,QAAS,WACP,GAAI3J,GAAcF,KAAKqB,UAAU,iBAAmB,GAChDlB,EAAQ,4BAA4B2J,KAAK5J,EAC7C,OAAKC,GACEA,EAAM,GADQ,IASvB0D,QAAS,WACP,GAA+B,gBAApBkG,kBAAgCA,gBAAgB/I,OAAS,EAClE,MAAO+I,gBAGT,IAAI7J,GAASF,KAAKqB,UAAU,aAC5B,OAAOwC,SAAQkC,qBAAqB7F,uECxS1C,YAgBA,SAAS6E,UAAU5E,EAAMG,EAAOJ,EAAOS,GAChB,kBAAVT,KACTS,EAAKT,EACLA,EAAQ,IAGVF,KAAKgG,KAAO7F,EACZH,KAAKmE,MAAQ7D,EACbN,KAAKmG,QAAS,EACdnG,KAAKgK,MAAQ9J,EACbF,KAAKiK,GAAKtJ,EACVX,KAAKqF,OAAS,KACdrF,KAAKoD,MAAQ,KA1Bf,GAAIiD,KAAM3F,QAAQ,QAElBjB,QAAOD,QAAUuF,SAoCjBA,SAASJ,UAAUO,IAAM,WACvBlF,KAAKmE,MAAM+F,SAASlK,KAAKgG,QACzBhG,KAAKgK,MAAQhK,KAAKgK,QACA,OAAdhK,KAAKgG,KAAgB,OAAShG,KAAKgG,MAAQ,KAAOhG,KAAKmE,MAAM+F,SAASlK,KAAKgG,MAE/EhG,KAAKmE,MAAMgG,MAAMnF,KAAKhF,KACtB,IAAIG,GAAYH,KAAKmE,MAAMgG,MAAMC,UACjC/D,KAAIgE,MAAM,WAAalK,EAEvB,KACEH,KAAKiK,KACLjK,KAAKsK,QAAQnK,GAEf,MAAOG,GACLN,KAAKuK,QAAQjK,EAAGH,GAElB,QACEH,KAAKmE,MAAMgG,MAAMK,QASrBzF,SAASJ,UAAU2F,QAAU,SAAUnK,GACrCkG,IAAIC,KAAK,WAAanG,GAEtBH,KAAKqF,QAAS,EAEI,OAAdrF,KAAKgG,OACPhG,KAAKmE,MAAMiB,QAAQjF,GAAaH,KAAKgK,QAAS,IAUlDjF,SAASJ,UAAU4F,QAAU,SAAUpK,EAAKG,GAC1CA,EAAYA,GAAaN,KAAKgK,MAC9B3D,IAAIjD,MAAM,WAAa9C,EAAW+F,IAAIiB,YAAYnH,IAElDH,KAAKqF,QAAS,EACdrF,KAAKoD,MAAQjD,EACbH,KAAKmE,MAAMiB,QAAQ9E,EAAY,KAAOH,EAAIoD,QAAU,MAAO,sDCxF7D,YAOA,SAASa,SAKPpE,KAAKoF,QAAUqF,aAKfzK,KAAKmK,SAKLnK,KAAKkK,UACHrF,SAAU,EACVC,GAAI,EACJR,OAAQ,EACRE,MAAO,EACPC,WAAY,EACZC,UAAW,GAMb1E,KAAKmK,MAAMC,SAAW,WACpB,MAAOpK,MAAK2F,IAAI,SAAUxF,GAAK,MAAOA,GAAE6J,QAAUtH,KAAK,MAqD3D,QAAS+H,cACP,GAAqB,gBAAVC,OACT,KAAM,IAAI9J,OACR,yGAWJ,OAJAoB,QAAOC,KAAKyI,OAAOnI,QAAQ,SAAUpC,SAC5BuK,OAAMvK,KAGRuK,MApGTjL,OAAOD,QAAU4E,MA2CjBA,MAAMO,UAAUW,UAAY,WAC1B,GAAInF,GAAKH,IAET,OAAIA,MAAKmK,MAAMnJ,OAAS,GAMfgB,OAAOC,KAAKjC,KAAKkK,UAAUS,KAAK,SAAUzK,GAC/C,MAAOC,GAAG+J,SAAShK,GAAO,KAWhCkE,MAAMO,UAAUQ,WAAa,WAC3B,MAA6B,KAAtBnF,KAAKmK,MAAMnJ,QAAgBhB,KAAKkK,SAASrF,SAAW,GAQ7DT,MAAMO,UAAUuB,QAAU,WACxB,MAAOlG,MAAKmK,MAAMQ,KAAK,SAAUxK,GAC/B,MAAOA,GAASgG,oDC7EpB1G,OAAOD,QAAUkB,QAAQ;;;;;ACMzB,GAAIkK,SACApL,QAAUC,OAAOD;;;AAMrBA,QAAQqL,QAAU;;;AAMlBrL,QAAQsL,eAAiBpK,QAAQ;;;AAMjC,GAAIqK,MAAOrK,QAAQ,eAYnBlB,SAAQuH,IAAM,SAAU7G,GAMtB,OALM0K,KAAKpJ,QAAQtB,KACjBA,EAAGF,KAAM+K,MACTH,KAAK5F,KAAK9E,IAGLF;;;AAOTR,QAAQuL,KAAOA;;;AAMf,GAAIC,QAAStK,QAAQ,gBACrBlB,SAAQwL,OAASA;;;AAMjB,GAAIC,WAAYvK,QAAQ,mBACxBlB,SAAQuH,IAAIkE;;;AAMZ,GAAIC,MAAOxK,QAAQ,yBACnBlB,SAAQuH,IAAImE;;;AAMZ,GAAIrE,QAASnG,QAAQ,0BACrBlB,SAAQuH,IAAIF;;;AAMZ,GAAIC,QAASpG,QAAQ,0BACrBlB,SAAQuH,IAAID;;;AAMZ,GAAIvF,QAASb,QAAQ,0BACrBlB,SAAQuH,IAAIxF;;;;;;ACrFZ,GAAIyJ,QAAStK,QAAQ,WAErBjB,QAAOD,QAAU,SAAUU,EAAOC;;;;;;;AAsBhC,QAASQ,GAAWT,EAAKC,EAAKQ,GAC5BP,EAAKJ,KAAM,OAAQW,GAASwB,UAAUgJ,QACtC/K,EAAKJ,KAAM,SAAUE,GACrBE,EAAKJ,KAAM,UAAWG;;;AApBxB,GAAII,GAAiBL,EAAM4K,eACvB1K,EAAOD,EAAKgD;;;AAMhBjD,EAAMuB,UAAYd,EAgBlBqB,OAAO4F,eAAejH,EAAW,gBAC/BoH,IAAK,WAEH,MADAN,SAAQ2D,KAAK,+EACNJ,OAAOK,cAEhBC,IAAK,SAASpL,GACZuH,QAAQ2D,KAAK,+EACbJ,OAAOK,aAAenL,KAI1B8B,OAAO4F,eAAejH,EAAW,YAC/BoH,IAAK,WAEH,MADAN,SAAQ2D,KAAK,uEACNJ,OAAOO,UAEhBD,IAAK,SAASpL,GACZuH,QAAQ2D,KAAK,uEACbJ,OAAOO,SAAWrL,KAItBS,EAAUS,YAAc,SAAUlB,EAAMS,GACtCR,EAAKiB,YAAYpB,KAAK2E,UAAWzE,EAAMS,IAGzCA,EAAUe,UAAY,SAAUxB,EAAMS,GACpCR,EAAKuB,UAAU1B,KAAK2E,UAAWzE,EAAMS,IAGvCA,EAAU6K,mBAAqB,SAAUtL,EAAMS,EAAIJ,GACjDJ,EAAKqL,mBAAmBxL,KAAK2E,UAAWzE,EAAMS,EAAIJ,IAGpDI,EAAU8K,kBAAoB,SAAUvL,EAAMS,GAC5CR,EAAKsL,kBAAkBzL,KAAK2E,UAAWzE,EAAMS,IAG/CA,EAAU+K,gBAAkB,SAAUxL,EAAMS,GAC1CR,EAAKuL,gBAAgB1L,KAAK2E,UAAWzE,EAAMS,IAG7CA,EAAUgL,yBAA2B,SAAUzL,EAAMS,EAAIJ,GACvDJ,EAAKwL,yBAAyB3L,KAAK2E,UAAWzE,EAAMS,EAAIJ,IAkB1DI,EAAUgE,UAAUpD,OAAS,SAAUrB,EAAMS,EAAKL,EAAWD,EAAUmD,EAASjE,GAC9E,GAAIkB,GAAKN,EAAKkC,KAAKrC,KAAMmC,UAIzB,KAHI,IAAS5C,IAAUA,GAAW,IAC9B,IAASyL,OAAOO,WAAUhM,GAAW,IAEpCkB,EAAI,CACP,GAAIE,GAAMR,EAAKyL,WAAW5L,KAAMmC,WAC5B0J,EAAS1L,EAAK2L,UAAU9L,KAAMmC,UAClC,MAAM,IAAI5B,GAAeI,GACrBoL,OAAQF,EACRG,SAAU3L,EACVkL,SAAUhM,GACVyL,OAAmBK,aAAIrL,KAAKuB,OAASnB,EAAKJ,KAAM;;;;;;;AAYxDgC,OAAO4F,eAAejH,EAAUgE,UAAW,QACvCoD,IAAK,WACH,MAAO3H,GAAKJ,KAAM,WAEpBsL,IAAK,SAAUpL,GACbE,EAAKJ,KAAM,SAAUE,8DC/H7BT,OAAOD,SAeJ6L,cAAc,EAefE,UAAU,EAsBVU,kBAAmB;;;;;;AC7CrBxM,OAAOD,QAAU,SAAUW,EAAMD,GA2J/B,QAASI,GAAIH,EAAMG,GACbA,GAAK4L,EAAKlM,KAAM,UAAWM,GAC/BH,EAAOA,EAAKyD,aACZ,IAAIrD,GAAM2L,EAAKlM,KAAM,UACjBW,IAAa,IAAK,IAAK,IAAK,IAAK,KAAMa,QAAQrB,EAAKgM,OAAO,IAAM,MAAQ,IAE7EnM,MAAKuB,OACDpB,IAASD,EAAE8F,KAAKzF,GAChB,0BAA4BI,EAAUR,EACtC,8BAAgCQ,EAAUR,GA6BhD,QAASI,KACP2L,EAAKlM,KAAM,YAAY,GAGzB,QAASW,GAASR,EAAKG,GACrBJ,EAAEkM,YAAYpM,MAAO,QAAS,SAAU,WAEpCM,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,UACjBW,GAAW,CAEf,IAAoB,UAAhBT,EAAE8F,KAAKzF,IAAoC,WAAhBL,EAAE8F,KAAK7F,GAAA,CACpC,IAAK,GAAIC,KAAKG,GACZ,GAAIL,EAAEmM,IAAI9L,EAAIH,GAAID,GAAM,CACtBQ,GAAW,CACX,YAGC,IAAoB,WAAhBT,EAAE8F,KAAK7F,GAAmB,CACnC,IAAK+L,EAAKlM,KAAM,UAAW,CACzB,IAAK,GAAIS,KAAKN,GAAK,GAAImM,GAAU/L,GAAKsB,SAASpB,EAAGN,EAAIM,GACtD,QAEF,GAAI8L,KACJ,KAAK,GAAI9L,KAAKN,GAAKoM,EAAO9L,GAAKF,EAAIE,EACnCE,GAAWT,EAAEmM,IAAIE,EAAQpM,OAEzBQ,OAAmB,IAAPJ,IAAsBA,EAAIiB,QAAQrB,EAEhDH,MAAKuB,OACDZ,EACA,+BAAiCT,EAAEsM,QAAQrM,GAC3C,mCAAqCD,EAAEsM,QAAQrM,IAoNrD,QAASC,KACP,GAAID,GAAM+L,EAAKlM,KAAM,UACjBE,EAAO8B,OAAO2C,UAAUyF,SAASrJ,KAAKZ,EAC1CH,MAAKuB,OACD,uBAAyBrB,EACzB,4CAA8CA,EAC9C,wCA8BN,QAASO,GAAaN,EAAKD,GACrBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,OAAIkM,GAAKlM,KAAM,QACNA,KAAKqM,IAAIlM,OAEhBH,MAAKuB,OACDpB,IAAQG,EACR,mCACA,uCACAH,EACAH,KAAKsB,MACL,GAyBR,QAASiL,GAAUpM,EAAKG,GAClBA,GAAK4L,EAAKlM,KAAM,UAAWM,GAC/BN,KAAKuB,OACDrB,EAAEmM,IAAIlM,EAAK+L,EAAKlM,KAAM,WACtB,0CACA,8CACAG,EACAH,KAAKsB,MACL,GA+BN,QAASjB,GAAaF,EAAGD,GACnBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,IAAIkM,EAAKlM,KAAM,YAAa,CAC1B,GAAIsM,GAAUhM,EAAKJ,GAAKyB,GAAGC,KAAKC,SAAS,SACzC,IAAItB,GAAMD,EAAIU,MACdhB,MAAKuB,OACDhB,EAAMJ,EACN,gEACA,qDACAA,EACAI,OAGJP,MAAKuB,OACDjB,EAAMH,EACN,gCAAkCA,EAClC,kCAAoCA,GAgC5C,QAAS0L,GAAa1L,EAAGD,GACnBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,IAAIkM,EAAKlM,KAAM,YAAa,CAC1B,GAAIsM,GAAUhM,EAAKJ,GAAKyB,GAAGC,KAAKC,SAAS,SACzC,IAAItB,GAAMD,EAAIU,MACdhB,MAAKuB,OACDhB,GAAOJ,EACP,mEACA,iDACAA,EACAI,OAGJP,MAAKuB,OACDjB,GAAOH,EACP,mCAAqCA,EACrC,gCAAkCA,GAgC1C,QAASqD,GAAarD,EAAGD,GACnBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,IAAIkM,EAAKlM,KAAM,YAAa,CAC1B,GAAIsM,GAAUhM,EAAKJ,GAAKyB,GAAGC,KAAKC,SAAS,SACzC,IAAItB,GAAMD,EAAIU,MACdhB,MAAKuB,OACDhB,EAAMJ,EACN,gEACA,qDACAA,EACAI,OAGJP,MAAKuB,OACDjB,EAAMH,EACN,gCAAkCA,EAClC,mCAAqCA,GAgC7C,QAASsM,GAAYtM,EAAGD,GAClBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,IAAIkM,EAAKlM,KAAM,YAAa,CAC1B,GAAIsM,GAAUhM,EAAKJ,GAAKyB,GAAGC,KAAKC,SAAS,SACzC,IAAItB,GAAMD,EAAIU,MACdhB,MAAKuB,OACDhB,GAAOJ,EACP,kEACA,iDACAA,EACAI,OAGJP,MAAKuB,OACDjB,GAAOH,EACP,kCAAoCA,EACpC,gCAAkCA,GAuE1C,QAASW,GAAkBX,EAAaG,GAClCA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAOL,EAAEwM,QAAQvM,EACrBH,MAAKuB,OACD2K,EAAKlM,KAAM,mBAAqBG,GAChC,yCAA2CI,EAC3C,6CAA+CA,GAuIrD,QAASoM,GAAmBxM,EAAMG,GAC5BA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,SACrBA,MAAKuB,OACDhB,EAAIqM,eAAezM,GACnB,yCAA2CD,EAAEsM,QAAQrM,GACrD,6CAA+CD,EAAEsM,QAAQrM,IA2B/D,QAASZ,GAA6BY,EAAMG,EAAYC,GAC5B,gBAAfD,KACTC,EAAMD,EACNA,EAAa,MAEXC,GAAK2L,EAAKlM,KAAM,UAAWO,EAC/B,IAAII,GAAMuL,EAAKlM,KAAM,UACjBI,EAAmB4B,OAAO6K,yBAAyB7K,OAAOrB,GAAMR,EAChEC,IAAoBE,EACtBN,KAAKuB,OACDrB,EAAEmM,IAAI/L,EAAYF,GAClB,4CAA8CF,EAAEsM,QAAQrM,GAAQ,wBAA0BD,EAAEsM,QAAQlM,GAAc,SAAWJ,EAAEsM,QAAQpM,GACvI,4CAA8CF,EAAEsM,QAAQrM,GAAQ,4BAA8BD,EAAEsM,QAAQlM,GACxGA,EACAF,GACA,GAGJJ,KAAKuB,OACDnB,EACA,2DAA6DF,EAAEsM,QAAQrM,GACvE,+DAAiED,EAAEsM,QAAQrM,IAGjF+L,EAAKlM,KAAM,SAAUI,GA6CvB,QAASI,KACP0L,EAAKlM,KAAM,YAAY,GAGzB,QAAS8M,GAAc3M,EAAGD,GACpBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrB,IAAIsM,GAAUhM,EAAKJ,GAAKyB,GAAGC,KAAKC,SAAS,SACzC,IAAItB,GAAMD,EAAIU,MAEdhB,MAAKuB,OACDhB,GAAOJ,EACP,6DACA,kDACAA,EACAI,GAqBN,QAASX,GAAYO,EAAID,GACnBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAM4L,EAAKlM,KAAM,SACrBA,MAAKuB,OACDpB,EAAG2J,KAAKxJ,GACR,6BAA+BH,EAC/B,iCAAmCA,GAyEzC,QAAS4M,GAAY5M,GACnB,GACIG,GADAC,EAAM2L,EAAKlM,KAAM,UAEjBW,GAAK,EACLP,EAAe,yFAEnB,QAAQF,EAAE8F,KAAK7F,IACb,IAAK,QACH,GAAIgC,UAAUnB,OAAS,EAAG,KAAM,IAAKJ,OAAMR,EAC3C,MACF,KAAK,SACH,GAAI+B,UAAUnB,OAAS,EAAG,KAAM,IAAKJ,OAAMR,EAC3CD,GAAO6B,OAAOC,KAAK9B,EACnB,MACF,SACEA,EAAO6M,MAAMrI,UAAUsI,MAAMlM,KAAKoB,WAGtC,IAAKhC,EAAKa,OAAQ,KAAM,IAAIJ,OAAM,gBAElC,IAAIH,GAASuB,OAAOC,KAAK1B,GACrBgM,EAAWpM,EACXE,EAAMF,EAAKa,OACX6K,EAAMK,EAAKlM,KAAM,OACjBwD,EAAM0I,EAAKlM,KAAM,MAOrB,IALK6L,GAAQrI,IACXA,GAAM,GAIJqI,EAAK,CACP,GAAIY,GAAeF,EAASW,OAAO,SAAS/M,GAC1C,OAAQM,EAAOe,QAAQrB,IAEzBQ,GAAK8L,EAAazL,OAAS,EAc7B,GAVIwC,IACF7C,EAAKR,EAAKgN,MAAM,SAAShN,GACvB,OAAQM,EAAOe,QAAQrB,KAEpB+L,EAAKlM,KAAM,WAAckM,EAAKlM,KAAM,cACvCW,EAAKA,GAAMR,EAAKa,QAAUP,EAAOO,SAKjCX,EAAM,EAAG,CACXF,EAAOA,EAAKwF,IAAI,SAASxF,GACvB,MAAOD,GAAEsM,QAAQrM,IAEnB,IAAIW,GAAOX,EAAKqK,KACZhH,KACFlD,EAAMH,EAAKuC,KAAK,MAAQ,SAAW5B,GAEjC+K,IACFvL,EAAMH,EAAKuC,KAAK,MAAQ,QAAU5B,OAGpCR,GAAMJ,EAAEsM,QAAQrM,EAAK,GAIvBG,IAAOD,EAAM,EAAI,QAAU,QAAUC,EAGrCA,GAAO4L,EAAKlM,KAAM,YAAc,WAAa,SAAWM,EAGxDN,KAAKuB,OACDZ,EACA,uBAAyBL,EACzB,2BAA6BA,EAC7BiM,EAASU,MAAM,GAAGG,OAClB3M,EAAO2M,QACP,GA2CN,QAASC,GAAclN,EAAaG,EAAQC,GACtCA,GAAK2L,EAAKlM,KAAM,UAAWO,EAC/B,IAAII,GAAMuL,EAAKlM,KAAM,SACrB,IAAIsM,GAAU3L,EAAKJ,GAAK+M,GAAG7M,EAAE,WAE7B,IAAIL,IAAS,EACTK,EAAe,KACf8L,EAAO,KACPlM,EAAc,IAEO,KAArB8B,UAAUnB,QACZV,EAAS,KACTH,EAAc,MACLA,IAAgBA,YAAuBiC,SAAU,gBAAoBjC,KAC9EG,EAASH,EACTA,EAAc,MACLA,GAAeA,YAAuBS,QAC/CH,EAAeN,EACfA,EAAc,KACdG,EAAS,MACuB,kBAAhBH,IAChBoM,EAAOpM,EAAYwE,UAAUe,OACxB6G,GAAkB,UAATA,GAAoBpM,IAAgBS,SAChD2L,EAAOpM,EAAYuF,OAAA,GAAavF,IAAeuF,OAGjDvF,EAAc,IAGhB,KACEQ,IACA,MAAOJ,GAEP,GAAIE,EAUF,MATAT,MAAKuB,OACDhB,IAAQE,EACR,yDACA,uCACCA,YAAwBG,OAAQH,EAAa2J,WAAa3J,EAC1DF,YAAeK,OAAQL,EAAI6J,WAAa7J,GAG7C2L,EAAKlM,KAAM,SAAUO,GACdP,IAIT,IAAIG,IACFH,KAAKuB,OACDhB,YAAeJ,GACf,yDACA,6DACAoM,EACChM,YAAeK,OAAQL,EAAI6J,WAAa7J,IAGxCD,GAEH,MADA4L,GAAKlM,KAAM,SAAUO,GACdP,IAKX,IAAI6L,GAAU,UAAY3L,EAAE8F,KAAKzF,IAAQ,WAAaA,GAClDA,EAAIgD,QACJ,GAAKhD,CAET,IAAgB,MAAXsL,GAAoBvL,GAAUA,YAAkB8B,QAUnD,MATApC,MAAKuB,OACDjB,EAAOwJ,KAAK+B,GACZ,iEACA,sDACAvL,EACAuL,GAGJK,EAAKlM,KAAM,SAAUO,GACdP,IACF,IAAgB,MAAX6L,GAAoBvL,GAAU,gBAAoBA,GAU5D,MATAN,MAAKuB,QACAsK,EAAQrK,QAAQlB,GACjB,kEACA,uDACAA,EACAuL,GAGJK,EAAKlM,KAAM,SAAUO,GACdP,IAEPI,IAAS,EACTC,EAAcE,EAIlB,GAAIiD,GAAc,GACdiJ,EAA0B,OAATF,EACfA,EACA9L,EACE,SACA,UAEJL,KACFoD,EAAc,0BAGhBxD,KAAKuB,OACDnB,KAAW,EACX,6BAA+BqM,EAAiBjJ,EAChD,iCAAmCiJ,EAAiBjJ,EACnD/C,YAAwBG,OAAQH,EAAa2J,WAAa3J,EAC1DJ,YAAuBO,OAAQP,EAAY+J,WAAa/J,GAG7D6L,EAAKlM,KAAM,SAAUK,GA8BvB,QAASkN,GAAWpN,EAAQG,GACtBA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,UACjBW,EAASuL,EAAKlM,KAAM,UACpBI,EAAW,aAAeF,EAAE8F,KAAKzF,IAASI,EAExCJ,EAAIJ,GADJI,EAAIoE,UAAUxE,EAGpBH,MAAKuB,OACD,kBAAsBnB,GACtB,kCAAoCF,EAAEsM,QAAQrM,GAC9C,sCAAwCD,EAAEsM,QAAQrM,IA2CxD,QAASqN,GAASrN,EAASG,GACrBA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,UACjBW,EAASR,EAAQI,EACrBP,MAAKuB,OACDZ,EACA,+BAAiCT,EAAEuN,WAAWtN,GAC9C,kCAAoCD,EAAEuN,WAAWtN,IACjDH,KAAK0N,OACL/M,GAuBN,QAASgN,GAAQxN,EAAUG,EAAOC,GAC5BA,GAAK2L,EAAKlM,KAAM,UAAWO,EAC/B,IAAII,GAAMuL,EAAKlM,KAAM,SAGrB,IADA,GAAIsM,GAAU3L,EAAKJ,GAAK+M,GAAG7M,EAAE,UACJ,WAArBP,EAAE8F,KAAK7F,IAA4C,WAAlBD,EAAE8F,KAAK1F,GAC1C,KAAM,IAAIM,OAAM,4DAGlBZ,MAAKuB,OACDkH,KAAKmF,IAAIjN,EAAMR,IAAaG,EAC5B,mCAAqCH,EAAW,QAAUG,EAC1D,uCAAyCH,EAAW,QAAUG,GAOpE,QAASuN,GAAW1N,EAAQD,EAAUI,GACpC,MAAOH,GAAOgN,MAAM,SAAShN,GAC3B,MAAKG,GAEEJ,EAASyK,KAAK,SAASzK,GAC5B,MAAOI,GAAIH,EAAMD,KAHFA,EAASsB,QAAQrB,MAAU,IAiFhD,QAAS2N,GAAO3N,EAAMD,GAChBA,GAAKgM,EAAKlM,KAAM,UAAWE,EAC/B,IAAII,GAAW4L,EAAKlM,KAAM,SAC1B,IAAIsM,GAAUnM,GAAMwB,GAAGoM,GAAGC,GAAG,SAE7BhO,KAAKuB,OACDpB,EAAKqB,QAAQlB,IAAY,EACzB,uCACA,2CACAH,EACAG,GA4BN,QAAS2N,GAAe9N,EAAQD,EAAMI,GAChCA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAK2L,EAAKlM,KAAM,SACpB,IAAIsM,GAAUnM,EAAQG,GAAKqB,GAAGC,KAAKC,SAAS3B,GAC5C,GAAIoM,GAAU/L,GAAI+M,GAAG7M,EAAE,WAEvB,IAAIE,GAAUR,EAAOD,EACrBK,KAEAP,KAAKuB,OACHZ,IAAYR,EAAOD,GACjB,aAAeA,EAAO,aACtB,aAAeA,EAAO,kBA0B5B,QAASgO,GAAiB/N,EAAQD,EAAMI,GAClCA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAK2L,EAAKlM,KAAM,SACpB,IAAIsM,GAAUnM,EAAQG,GAAKqB,GAAGC,KAAKC,SAAS3B,GAC5C,GAAIoM,GAAU/L,GAAI+M,GAAG7M,EAAE,WAEvB,IAAIE,GAAUR,EAAOD,EACrBK,KAEAP,KAAKuB,OACHpB,EAAOD,GAAQS,EAAU,EACvB,aAAeT,EAAO,eACtB,aAAeA,EAAO,oBA0B5B,QAASiO,GAAiBhO,EAAQD,EAAMI,GAClCA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAK2L,EAAKlM,KAAM,SACpB,IAAIsM,GAAUnM,EAAQG,GAAKqB,GAAGC,KAAKC,SAAS3B,GAC5C,GAAIoM,GAAU/L,GAAI+M,GAAG7M,EAAE,WAEvB,IAAIE,GAAUR,EAAOD,EACrBK,KAEAP,KAAKuB,OACHpB,EAAOD,GAAQS,EAAU,EACvB,aAAeT,EAAO,eACtB,aAAeA,EAAO,oBAvrD5B,GAAIoM,GAAYnM,EAAKsB,UAEjByK,GADWlK,OAAO2C,UAAUyF,SACrBlK,EAAEiD,OA+BX,KAAM,KAAM,OACZ,KAAM,MAAO,MAAO,OACpB,OAAQ,OAAQ,QAAS,KACzB,KAAM,QAASZ,QAAQ,SAAUpC,GACjCmM,EAAUlL,YAAYjB,EAAO,WAC3B,MAAOH,UAmBXsM,EAAUlL,YAAY,MAAO,WAC3B8K,EAAKlM,KAAM,UAAU,KAwBvBsM,EAAUlL,YAAY,OAAQ,WAC5B8K,EAAKlM,KAAM,QAAQ,KAgBrBsM,EAAUlL,YAAY,MAAO,WAC3B8K,EAAKlM,KAAM,OAAO,GAClBkM,EAAKlM,KAAM,OAAO,KAiBpBsM,EAAUlL,YAAY,MAAO,WAC3B8K,EAAKlM,KAAM,OAAO,GAClBkM,EAAKlM,KAAM,OAAO,KA+CpBsM,EAAUd,mBAAmB,KAAMlL,GACnCgM,EAAUd,mBAAmB,IAAKlL,GA2DlCgM,EAAUd,mBAAmB,UAAW7K,EAASJ,GACjD+L,EAAUd,mBAAmB,UAAW7K,EAASJ,GACjD+L,EAAUd,mBAAmB,WAAY7K,EAASJ,GAClD+L,EAAUd,mBAAmB,WAAY7K,EAASJ,GAkBlD+L,EAAUlL,YAAY,KAAM,WAC1BpB,KAAKuB,OACD2K,EAAKlM,KAAM,UACX,gCACA,kCAgBNsM,EAAUlL,YAAY,OAAQ,WAC5BpB,KAAKuB,QACD,IAAS2K,EAAKlM,KAAM,UACpB,8BACA,gCACAA,KAAK0N,UAiBXpB,EAAUlL,YAAY,QAAS,WAC7BpB,KAAKuB,QACD,IAAU2K,EAAKlM,KAAM,UACrB,+BACA,gCACAA,KAAK0N,UAiBXpB,EAAUlL,YAAY,OAAQ,WAC5BpB,KAAKuB,OACD,OAAS2K,EAAKlM,KAAM,UACpB,8BACA,qCAiBNsM,EAAUlL,YAAY,YAAa,WACjCpB,KAAKuB,WACD,KAAc2K,EAAKlM,KAAM,UACzB,mCACA,0CAgBNsM,EAAUlL,YAAY,MAAO,WAC3BpB,KAAKuB,OACD6M,MAAMlC,EAAKlM,KAAM,WACf,6BACA,oCAsBRsM,EAAUlL,YAAY,QAAS,WAC7BpB,KAAKuB,OACD,MAAQ2K,EAAKlM,KAAM,UACnB,4BACA,mCAqBNsM,EAAUlL,YAAY,QAAS,WAC7B,GAAIjB,GAAM+L,EAAKlM,KAAM,UACjBE,EAAWC,CAEX6M,OAAMqB,QAAQlO,IAAQ,gBAAoBmO,QAC5CpO,EAAWC,EAAIa,OACS,gBAARb,KAChBD,EAAW8B,OAAOC,KAAK9B,GAAKa,QAG9BhB,KAAKuB,QACArB,EACD,+BACA,sCA6BNoM,EAAUlL,YAAY,YAAahB,GACnCkM,EAAUlL,YAAY,YAAahB,GA0CnCkM,EAAU5K,UAAU,QAASjB,GAC7B6L,EAAU5K,UAAU,SAAUjB,GAC9B6L,EAAU5K,UAAU,KAAMjB,GA8B1B6L,EAAU5K,UAAU,MAAO6K,GAC3BD,EAAU5K,UAAU,OAAQ6K,GAgD5BD,EAAU5K,UAAU,QAASrB,GAC7BiM,EAAU5K,UAAU,KAAMrB,GAC1BiM,EAAU5K,UAAU,cAAerB,GA+CnCiM,EAAU5K,UAAU,QAASmK,GAC7BS,EAAU5K,UAAU,MAAOmK,GAgD3BS,EAAU5K,UAAU,QAAS8B,GAC7B8I,EAAU5K,UAAU,KAAM8B,GAC1B8I,EAAU5K,UAAU,WAAY8B,GA+ChC8I,EAAU5K,UAAU,OAAQ+K,GAC5BH,EAAU5K,UAAU,MAAO+K,GAyB3BH,EAAU5K,UAAU,SAAU,SAAUvB,EAAOD,EAAQI,GACjDA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,UACjBW,EAAQR,EAAQ,KAAOD,CAC3B,IAAIgM,EAAKlM,KAAM,YAAa,CAC1B,GAAIsM,GAAU/L,EAAKD,GAAKqB,GAAGC,KAAKC,SAAS,SACzC,IAAIzB,GAAMG,EAAIS,MACdhB,MAAKuB,OACDnB,GAAOD,GAASC,GAAOF,EACvB,4CAA8CS,EAC9C,gDAAkDA,OAGtDX,MAAKuB,OACDhB,GAAOJ,GAASI,GAAOL,EACvB,iCAAmCS,EACnC,qCAAuCA,KAkC/C2L,EAAU5K,UAAU,aAAcZ,GAClCwL,EAAU5K,UAAU,aAAcZ,GA0ElCwL,EAAU5K,UAAU,WAAY,SAAUvB,EAAMG,EAAKC,GAC/CA,GAAK2L,EAAKlM,KAAM,UAAWO,EAE/B,IAAII,KAAWuL,EAAKlM,KAAM,QACtBI,EAAaO,EAAS,iBAAmB,YACzCF,EAASyL,EAAKlM,KAAM,UACpBuM,EAAML,EAAKlM,KAAM,UACjBK,EAAWM,EAAST,EAAEqO,YAAYpO,EAAMoM,GAAO,KAC/CV,EAAclL,EACZN,EAASmO,OACTtO,EAAEuO,YAAYtO,EAAMoM,GACtB/I,EAAQ7C,EACNN,EAAS2C,MACTuJ,EAAIpM,EAEV,IAAIM,GAAU0B,UAAUnB,OAAS,EAAA,CAC/B,OAAI,KAAcwC,EAEhB,KADAjD,GAAc,MAAPA,EAAeA,EAAM,KAAO,GAC7B,GAAIK,OAAML,EAAML,EAAEsM,QAAQD,GAAO,WAAanM,EAAaF,EAAEsM,QAAQrM,QAG7EH,MAAKuB,OACDsK,EACA,8BAAgCzL,EAAaF,EAAEsM,QAAQrM,GACvD,gCAAkCC,EAAaF,EAAEsM,QAAQrM,GAG3DgC,WAAUnB,OAAS,GACrBhB,KAAKuB,OACDjB,IAAQkD,EACR,8BAAgCpD,EAAaF,EAAEsM,QAAQrM,GAAQ,6BAC/D,kCAAoCC,EAAaF,EAAEsM,QAAQrM,GAAQ,aACnEG,EACAkD,GAIN0I,EAAKlM,KAAM,SAAUwD,KA6BvB8I,EAAU5K,UAAU,cAAeiL,GACnCL,EAAU5K,UAAU,kBAAmBiL,GAiDvCL,EAAU5K,UAAU,wBAAyBnC,GAC7C+M,EAAU5K,UAAU,4BAA6BnC,GA4DjD+M,EAAUd,mBAAmB,SAAUsB,EAActM,GACrD8L,EAAU5K,UAAU,WAAYoL,GA0BhCR,EAAU5K,UAAU,QAAS9B,GAC7B0M,EAAU5K,UAAU,UAAW9B,GAgB/B0M,EAAU5K,UAAU,SAAU,SAAUvB,EAAKG,GACvCA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,SACrB,IAAIsM,GAAU/L,EAAKD,GAAKgN,GAAG7M,EAAE,UAE7BT,KAAKuB,QACAhB,EAAIiB,QAAQrB,GACb,+BAAiCD,EAAEsM,QAAQrM,GAC3C,mCAAqCD,EAAEsM,QAAQrM,MA6HrDmM,EAAU5K,UAAU,OAAQqL,GAC5BT,EAAU5K,UAAU,MAAOqL,GA2J3BT,EAAU5K,UAAU,QAAS2L,GAC7Bf,EAAU5K,UAAU,SAAU2L,GAC9Bf,EAAU5K,UAAU,QAAS2L,GAwC7Bf,EAAU5K,UAAU,YAAa6L,GACjCjB,EAAU5K,UAAU,aAAc6L,GAmBlCjB,EAAUlL,YAAY,SAAU,WAC9B8K,EAAKlM,KAAM,UAAU,KA+BvBsM,EAAU5K,UAAU,UAAW8L,GAC/BlB,EAAU5K,UAAU,YAAa8L,GAkCjClB,EAAU5K,UAAU,UAAWiM,GAC/BrB,EAAU5K,UAAU,gBAAiBiM,GAmCrCrB,EAAU5K,UAAU,UAAW,SAAUvB,EAAQG,GAC3CA,GAAK4L,EAAKlM,KAAM,UAAWM,EAC/B,IAAIC,GAAM2L,EAAKlM,KAAM,SAErB,IAAIsM,GAAU/L,GAAKoB,GAAGoM,GAAGC,GAAG,SAC5B,GAAI1B,GAAUnM,GAAQwB,GAAGoM,GAAGC,GAAG,QAE/B,IAAIrN,GAAMuL,EAAKlM,KAAM,QAAUE,EAAEmM,QAAM,EAEvC,OAAIH,GAAKlM,KAAM,YACNA,KAAKuB,OACRsM,EAAW1N,EAAQI,EAAKI,GACxB,8CACA,kDACAJ,EACAJ,OAINH,MAAKuB,OACDsM,EAAWtN,EAAKJ,EAAQQ,IAAQkN,EAAW1N,EAAQI,EAAKI,GACtD,sDACA,0DACAJ,EACAJ,KAwCRmM,EAAU5K,UAAU,QAASoM,GAwC7BxB,EAAUd,mBAAmB,SAAUyC,GACvC3B,EAAUd,mBAAmB,UAAWyC,GAqCxC3B,EAAUd,mBAAmB,WAAY0C,GACzC5B,EAAUd,mBAAmB,YAAa0C,GAqC1C5B,EAAUd,mBAAmB,WAAY2C,GACzC7B,EAAUd,mBAAmB,YAAa2C,GAsB1C7B,EAAUlL,YAAY,aAAc,WAClC,GAOIjB,GAPAD,EAAMgM,EAAKlM,KAAM,SASrB,KACEG,EAAe6B,OAAO0M,aAAaxO,GACnC,MAAOA,GACP,KAAIA,YAAeyO,YACd,KAAMzO,EADmBC,IAAe,EAI/CH,KAAKuB,OACHpB,EACE,oCACA,2CAsBNmM,EAAUlL,YAAY,SAAU,WAC9B,GAOIjB,GAPAD,EAAMgM,EAAKlM,KAAM,SASrB,KACEG,EAAW6B,OAAO4M,SAAS1O,GAC3B,MAAOA,GACP,KAAIA,YAAeyO,YACd,KAAMzO,EADmBC,IAAW,EAI3CH,KAAKuB,OACHpB,EACE,gCACA,uCAoBNmM,EAAUlL,YAAY,SAAU,WAC9B,GAOIjB,GAPAD,EAAMgM,EAAKlM,KAAM,SASrB,KACEG,EAAW6B,OAAO6M,SAAS3O,GAC3B,MAAOA,GACP,KAAIA,YAAeyO,YACd,KAAMzO,EADmBC,IAAW,EAI3CH,KAAKuB,OACHpB,EACE,gCACA;;;;;ACzzDRV,OAAOD,QAAU,SAAUU,EAAME;;;AAM/B,GAAID,GAAYD,EAAKuB,UACjBlB,EAAOH,EAAK+C,KAqBZxC,EAAST,EAAKqB,OAAS,SAAUnB,EAASG,GAC5C,GAAII,GAAO,GAAIR,GAAU,KAAM,KAAMD,EAAKqB,OAC1CZ,GAAKY,OACDnB,EACAG,EACA,oCAkBNI,GAAOmO,KAAO,SAAU1O,EAAQD,EAAUI,EAASE,GAEjD,KADAF,GAAUA,GAAW,gBACf,GAAIL,GAAK4K,eAAevK,GAC1BwL,OAAQ3L,EACR4L,SAAU7L,EACV4O,SAAUtO,GACXE,EAAOmO,OAmBZnO,EAAOqO,KAAO,SAAU9O,EAAKE,GAC3B,GAAID,GAAUD,EAAKE,GAAKkN,GAAG3E,IAmB7BhI,EAAOsO,QAAU,SAAU/O,EAAKE,GAC9B,GAAID,GAAUD,EAAKE,GAAKkN,GAAG4B,IAAIvG,IAkBjChI,EAAOwO,MAAQ,SAAUjP,EAAKE,EAAKK,GACjC,GAAI+C,GAAO,GAAIrD,GAAUD,EAAKO,EAAKE,EAAOwO,MAE1C3L,GAAKjC,OACDnB,GAAOG,EAAKiD,EAAM,UAClB,mCACA,uCACApD,EACAF,IAmBNS,EAAOyO,SAAW,SAAUlP,EAAKE,EAAKK,GACpC,GAAI+C,GAAO,GAAIrD,GAAUD,EAAKO,EAAKE,EAAOyO,SAE1C5L,GAAKjC,OACDnB,GAAOG,EAAKiD,EAAM,UAClB,uCACA,mCACApD,EACAF,IAmBNS,EAAO0O,YAAc,SAAUnP,EAAKE,EAAKG,GACvC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGwN,MAAM/O,IAkBnCO,EAAO2O,eAAiB,SAAUpP,EAAKE,EAAKG,GAC1C,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAIC,MAAM/O,IAkBvCO,EAAO4O,UAAY,SAAUrP,EAAKE,EAAKG,GACrC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAG0K,IAAIjM,IAkBjCO,EAAO6O,aAAe,SAAUtP,EAAKE,EAAKG,GACxC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAI7C,IAAIjM,IAkBrCO,EAAO8O,QAAU,SAAUvP,EAAKE,EAAKG,GACnC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAG2B,MAAMtP,IAmBtCO,EAAOgP,UAAY,SAAUzP,EAAKE,EAAOG,GACvC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAG6B,MAAMxP,IAkBtCO,EAAOkP,QAAU,SAAU3P,EAAKE,EAAKG,GACnC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAG+B,MAAM1P,IAmBtCO,EAAOoP,SAAW,SAAU7P,EAAKE,EAAOG,GACtC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAGiC,KAAK5P,IAkBrCO,EAAOsP,OAAS,SAAU/P,EAAKE,GAC7B,GAAID,GAAUD,EAAKE,GAAKkN,GAAS4C,MAkBnCvP,EAAOwP,UAAY,SAAUjQ,EAAKE,GAChC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAIC,OAAM,IAkBvCxO,EAAOyP,QAAU,SAAUlQ,EAAKE,GAC9B,GAAID,GAAUD,EAAKE,GAAKkN,GAAU+C,OAkBpC1P,EAAO2P,WAAa,SAAUpQ,EAAKE,GACjC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAIC,OAAM,IAiBvCxO,EAAO4P,OAAS,SAAUrQ,EAAKE,GAC7B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGwN,MAAM,OAkBnCxO,EAAO6P,UAAY,SAAUtQ,EAAKE,GAChC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAIC,MAAM,OAgBvCxO,EAAOyN,MAAQ,SAAUlO,EAAKE,GAC5B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAG0C,KAehC9P,EAAO+P,SAAW,SAAUxQ,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAK8O,IAAIvN,GAAGoM,GAAG0C,KAkBpC9P,EAAOgQ,YAAc,SAAUzQ,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGwN,UAAM,KAkBnCxO,EAAOiQ,UAAY,SAAU1Q,EAAKE,GAChC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAIC,UAAM,KAkBvCxO,EAAOkQ,WAAa,SAAU3Q,EAAKE,GACjC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGtN,EAAE,aAkBlCE,EAAOmQ,cAAgB,SAAU5Q,EAAKE,GACpC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGtN,EAAE,aAmBtCE,EAAOoQ,SAAW,SAAU7Q,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGtN,EAAE,WAmBlCE,EAAOqQ,YAAc,SAAU9Q,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGtN,EAAE,WAkBtCE,EAAO0N,QAAU,SAAUnO,EAAKE,GAC9B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGC,GAAG,UAkBnCrN,EAAOsQ,WAAa,SAAU/Q,EAAKE,GACjC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGC,GAAG,UAkBvCrN,EAAOuQ,SAAW,SAAUhR,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGtN,EAAE,WAkBlCE,EAAOwQ,YAAc,SAAUjR,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGtN,EAAE,WAkBtCE,EAAOyQ,SAAW,SAAUlR,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGtN,EAAE,WAkBlCE,EAAO0Q,YAAc,SAAUnR,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGtN,EAAE,WAqBtCE,EAAO2Q,UAAY,SAAUpR,EAAKE,GAChC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGtN,EAAE,YAqBlCE,EAAO4Q,aAAe,SAAUrR,EAAKE,GACnC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGtN,EAAE,YAwBtCE,EAAO6Q,OAAS,SAAUtR,EAAKE,EAAMG,GACnC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAGtN,EAAEL,IAmBlCO,EAAO8Q,UAAY,SAAUvR,EAAKE,EAAMG,GACtC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAInB,GAAGtN,EAAEL,IAqBtCO,EAAO+Q,WAAa,SAAUxR,EAAKE,EAAMG,GACvC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGoM,GAAG2D,WAAWtR,IAqB3CO,EAAOgR,cAAgB,SAAUzR,EAAKE,EAAMG,GAC1C,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAInB,GAAG2D,WAAWtR,IAoB/CO,EAAOiR,QAAU,SAAU1R,EAAKE,EAAKG,GACnC,GAAIJ,GAAUD,EAAKK,EAAKI,EAAOiR,SAASA,QAAQxR,IAoBlDO,EAAOkR,WAAa,SAAU3R,EAAKE,EAAKG,GACtC,GAAIJ,GAAUD,EAAKK,EAAKI,EAAOkR,YAAY3C,IAAI0C,QAAQxR,IAkBzDO,EAAOmR,MAAQ,SAAU5R,EAAKE,EAAIG,GAChC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGmQ,MAAM1R,IAkBnCO,EAAOoR,SAAW,SAAU7R,EAAKE,EAAIG,GACnC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAI4C,MAAM1R,IAkBvCO,EAAOkB,SAAW,SAAU3B,EAAKE,EAAMG,GACrC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGC,KAAKC,SAASzB,IAkB3CO,EAAOqR,YAAc,SAAU9R,EAAKE,EAAMG,GACxC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAItN,KAAKC,SAASzB,IAmB/CO,EAAOsR,aAAe,SAAU/R,EAAKE,EAAMG,GACzC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGC,KAAKsQ,KAAKrQ,SAASzB,IAmBhDO,EAAOwR,gBAAkB,SAAUjS,EAAKE,EAAMG,GAC5C,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGuN,IAAItN,KAAKsQ,KAAKrQ,SAASzB,IAoBpDO,EAAOyR,YAAc,SAAUlS,EAAKE,EAAMG,EAAKI,GAC7C,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGC,KAAKC,SAASzB,EAAMG,IAoBjDI,EAAO0R,eAAiB,SAAUnS,EAAKE,EAAMG,EAAKI,GAChD,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGuN,IAAItN,KAAKC,SAASzB,EAAMG,IAqBrDI,EAAO2R,gBAAkB,SAAUpS,EAAKE,EAAMG,EAAKI,GACjD,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGC,KAAKsQ,KAAKrQ,SAASzB,EAAMG,IAqBtDI,EAAO4R,mBAAqB,SAAUrS,EAAKE,EAAMG,EAAKI,GACpD,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGuN,IAAItN,KAAKsQ,KAAKrQ,SAASzB,EAAMG,IAmB1DI,EAAO6R,SAAW,SAAUtS,EAAKE,EAAKG,GACpC,GAAIJ,GAAUD,EAAKK,GAAKoB,GAAGC,KAAKZ,OAAOZ,IA4BzCO,EAAO8R,OAAS,SAAUvS,EAAIE,EAAMO,EAAMF,IACpC,gBAAoBL,IAAQA,YAAgBgC,WAC9CzB,EAAOP,EACPA,EAAO,KAGT,IAAIoD,GAAY,GAAIrD,GAAUD,EAAIO,GAAKkB,GAAG+Q,MAAMtS,EAAMO,EACtD,OAAOJ,GAAKiD,EAAW,WAsBzB7C,EAAOgS,aAAe,SAAUzS,EAAIE,EAAMG,GACpC,gBAAoBH,KACtBG,EAAMH,EACNA,EAAO,MAGT,GAAID,GAAUD,EAAIK,GAAKoB,GAAGuN,IAAI0D,MAAMxS,IAoBtCO,EAAOoO,SAAW,SAAU7O,EAAKS,EAAUF,EAAM+C,GAC/C,GAAIlD,EACJ,QAAOK,GACL,IAAK,KACHL,EAAKJ,GAAOO,CACZ,MACF,KAAK,MACHH,EAAKJ,IAAQO,CACb,MACF,KAAK,IACHH,EAAKJ,EAAMO,CACX,MACF,KAAK,KACHH,EAAKJ,GAAOO,CACZ,MACF,KAAK,IACHH,EAAKJ,EAAMO,CACX,MACF,KAAK,KACHH,EAAKJ,GAAOO,CACZ,MACF,KAAK,KACHH,EAAKJ,GAAOO,CACZ,MACF,KAAK,MACHH,EAAKJ,IAAQO,CACb,MACF,SACE,KAAM,IAAIG,OAAM,qBAAuBD,EAAW,KAEtD,GAAIN,GAAO,GAAIF,GAAUG,EAAIkD,EAC7BnD,GAAKkB,QACD,IAAShB,EAAKF,EAAM,UACpB,YAAcD,EAAKoM,QAAQtM,GAAO,UAAYS,EAAW,IAAMP,EAAKoM,QAAQ/L,GAC5E,YAAcL,EAAKoM,QAAQtM,GAAO,cAAgBS,EAAW,IAAMP,EAAKoM,QAAQ/L,KAmBtFE,EAAOkS,QAAU,SAAU3S,EAAKE,EAAKG,EAAOI,GAC1C,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGoM,GAAG8E,QAAQzS,EAAKG,IAmB7CI,EAAOmS,cAAgB,SAAU5S,EAAKE,EAAKG,EAAOI,GAChD,GAAIR,GAAUD,EAAKS,GAAKgB,GAAGoM,GAAG+E,cAAc1S,EAAKG,IAmBnDI,EAAOoS,YAAc,SAAU7S,EAAME,EAAMG,GACzC,GAAIJ,GAAUD,EAAMK,GAAKoB,GAAGC,KAAKoR,KAAKC,QAAQ7S,IAmBhDO,EAAOuS,gBAAkB,SAAUhT,EAAME,EAAMG,GAC7C,GAAIJ,GAAUD,EAAMK,GAAKoB,GAAGC,KAAKoR,KAAKd,KAAKe,QAAQ7S,IAmBrDO,EAAOwS,eAAiB,SAAUjT,EAAUE,EAAQG,GAClD,GAAIJ,GAAUD,EAAUK,GAAKoB,GAAGiQ,QAAQqB,QAAQ7S,IAoBlDO,EAAOyS,mBAAqB,SAAUlT,EAAUE,EAAQG,GACtD,GAAIJ,GAAUD,EAAUK,GAAKoB,GAAGiQ,QAAQM,KAAKe,QAAQ7S,IAkBvDO,EAAO0S,MAAQ,SAAUnT,EAAQE,EAAMG,GACrC,GAAIJ,GAAUD,EAAQK,GAAKoB,GAAGoM,GAAGsF,MAAMjT,IAqBzCO,EAAO2S,QAAU,SAAUpT,EAAIE,EAAKG,GAClC,GAAIJ,GAAUD,GAAIyB,GAAG4R,OAAOnT,EAAKG,IAqBnCI,EAAO6S,cAAgB,SAAUtT,EAAIE,EAAKG,GACxC,GAAIJ,GAAUD,GAAIyB,GAAGuN,IAAIqE,OAAOnT,EAAKG,IAqBvCI,EAAO8S,UAAY,SAAUvT,EAAIE,EAAKG,GACpC,GAAIJ,GAAUD,GAAIyB,GAAG+R,SAAStT,EAAKG,IAqBrCI,EAAOgT,gBAAkB,SAAUzT,EAAIE,EAAKG,GAC1C,GAAIJ,GAAUD,GAAIyB,GAAGuN,IAAIwE,SAAStT,EAAKG,IAqBzCI,EAAOiT,UAAY,SAAU1T,EAAIE,EAAKG,GACpC,GAAIJ,GAAUD,GAAIyB,GAAGkS,SAASzT,EAAKG,IAqBrCI,EAAOmT,gBAAkB,SAAU5T,EAAIE,EAAKG,GAC1C,GAAIJ,GAAUD,GAAIyB,GAAGuN,IAAI2E,SAASzT,EAAKG;;;;;;;;;;;;;;;AAmBzCI,EAAOoT,QAAU,SAAU7T,GACzB,GAAIA,EACF,KAAKA,IAmBTS,EAAO+N,aAAe,SAAUxO,EAAKE,GACnC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGiG,YAwBhCrT,EAAOsT,gBAAkB,SAAU/T,EAAKE,GACtC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGiG,YAuBpCrT,EAAOiO,SAAW,SAAU1O,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGmG,QAkBhCvT,EAAOwT,YAAc,SAAUjU,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGmG,QAoBpCvT,EAAOkO,SAAW,SAAU3O,EAAKE,GAC/B,GAAID,GAAUD,EAAKE,GAAKuB,GAAGoM,GAAGqG,QAkBhCzT,EAAO0T,YAAc,SAAUnU,EAAKE,GAClC,GAAID,GAAUD,EAAKE,GAAKuB,GAAGuN,IAAInB,GAAGqG;;;AAOpC,QAAUlU,GAAME,EAAMD,GAEpB,MADAQ,GAAOR,GAAMQ,EAAOP,GACbF,GAER,OAAQ,MACR,UAAW,SACX,SAAU,SACV,SAAU,SACV,eAAgB,cAChB,kBAAmB,iBACnB,WAAY,UACZ,cAAe,aACf,WAAY,UACZ,cAAe;;;;;ACrmDlBT,OAAOD,QAAU,SAAUU,EAAMC,GAC/BD,EAAK2G,OAAS,SAAU1G,EAAKC,GAC3B,MAAO,IAAIF,GAAKuB,UAAUtB,EAAKC,IAiBjCF,EAAK2G,OAAOiI,KAAO,SAAU3O,EAAQC,EAAUG,EAASF,GAEtD,KADAE,GAAUA,GAAW,gBACf,GAAIL,GAAK4K,eAAevK,GAC1BwL,OAAQ5L,EACR6L,SAAU5L,EACV2O,SAAU1O,GACXH,EAAK2G,OAAOiI;;;;;ACzBnBrP,OAAOD,QAAU,SAAUW,EAAMC,GAG/B,QAASG,KAEP,QAASH,KACP,MAAIJ,gBAAgBsU,SAAUtU,eAAgBuU,SAAUvU,eAAgBwU,SAC/D,GAAItU,GAAUF,KAAKyU,UAAW,KAAMrU,GAEtC,GAAIF,GAAUF,KAAM,KAAMI,GAEnC,QAASG,GAAaJ,GAOpB6B,OAAO4F,eAAe5H,KAAM,UAC1BgD,MAAO7C,EACP2H,YAAY,EACZD,cAAc,EACd2B,UAAU,IAIdxH,OAAO4F,eAAe5F,OAAO2C,UAAW,UACtC2G,IAAK/K,EACHwH,IAAK3H,EACLyH,cAAc,GAGlB,IAAIlH,KA6JJ,OA7IAA,GAAOmO,KAAO,SAAU1O,EAAQG,EAAUL,EAASG,GAEjD,KADAH,GAAUA,GAAW,gBACf,GAAIC,GAAK2K,eAAe5K,GAC1B6L,OAAQ3L,EACR4L,SAAUzL,EACVwO,SAAU1O,GACXM,EAAOmO,OAkBZnO,EAAOwO,MAAQ,SAAUhP,EAAMC,EAAMG,GACnC,GAAIL,GAAUC,EAAMI,GAAKoB,GAAGwN,MAAM/O,IA2BpCO,EAAOiS,MAAQ,SAAUzS,EAAIC,EAAMG,EAAMI,GACvC,GAAIT,GAAUC,EAAIQ,GAAKgB,GAAGiR,MAAMxS,EAAMG,IAiBxCI,EAAO+T,MAAQ,SAAUvU,EAAKC,GAC5B,GAAIF,GAAUC,EAAKC,GAAKuB,GAAG+S,OAI7B/T,EAAOuO,OAiBPvO,EAAOuO,IAAIC,MAAQ,SAAUhP,EAAMC,EAAMG,GACvC,GAAIL,GAAUC,EAAMI,GAAKoB,GAAGuN,IAAIC,MAAM/O,IAuBxCO,EAAOuO,IAAI0D,MAAQ,SAAUzS,EAAIC,EAAMG,EAAMI,GAC3C,GAAIT,GAAUC,EAAIQ,GAAKgB,GAAGuN,IAAI0D,MAAMxS,EAAMG,IAiB5CI,EAAOuO,IAAIwF,MAAQ,SAAUvU,EAAKC,GAChC,GAAIF,GAAUC,EAAKC,GAAKuB,GAAGuN,IAAIwF,OAGjC/T,EAAc+R,MAAI/R,EAAciS,MAChCjS,EAAOuO,IAAWwD,MAAI/R,EAAOuO,IAAW0D,MAEjCjS,EA5LT,GAAIT,GAAYC,EAAKsB,SA+LrBtB,GAAK2G,OAASvG,EACdJ,EAAKwU,OAASpU;;;;;;;;AC7LhB,GAAIqU,eAAgBlU,QAAQ,mBACxByC,KAAOzC,QAAQ,UACfsK,OAAStK,QAAQ,aAOjBmU,gBAAkB,aAAe7S,QAKjC8S,aAAe,qCAGf/T,KAAQgU,SAASpQ,UAAU5D,KAC3B2G,MAAQqN,SAASpQ,UAAU+C,KA+B/BjI,QAAOD,QAAU,SAAUU,EAAKC,EAAME,EAAQI,GACZ,kBAArBA,KACTA,EAAmB,aAGrB,IAAIF,IACAwB,OAAQ1B,EACR2U,iBAAkBvU,EAIjBP,GAAI+U,YACP/U,EAAI+U,cAEN/U,EAAI+U,UAAU9U,GAAQI,EAEtByB,OAAO4F,eAAe1H,EAAKC,GACvB4H,IAAK,WACHxH,EAAkByU,iBAAiBjU,KAAKf,KAExC,IAAIG,GAAS,QAASD,KACpB,GAAIC,GAAWgD,KAAKnD,KAAM,OACtBG,IAAY6K,OAAOK,gBAAiB,GACtClI,KAAKnD,KAAM,OAAQE,EACrB,IAAIG,GAASE,EAAkBwB,OAAO2F,MAAM1H,KAAMmC,UAClD,YAAkB,KAAX9B,EAAuBL,KAAOK,EAIvC,IAAIwU,gBAAiB,CAEnB,GAAIxU,GAAYF,EAAO+U,UAAYlT,OAAOmT,OAAOnV,KAEjDK,GAAUU,KAAOA,KACjBV,EAAUqH,MAAQA,UAGf,CACH,GAAIjH,GAAgBuB,OAAOoT,oBAAoBlV,EAC/CO,GAAc8B,QAAQ,SAAUlC,GAC9B,IAAKyU,aAAazS,KAAKhC,GAAe,CACpC,GAAII,GAAKuB,OAAO6K,yBAAyB3M,EAAKG,EAC9C2B,QAAO4F,eAAezH,EAAQE,EAAcI,MAMlD,MADAmU,eAAc5U,KAAMG,GACbA,GAET0H,cAAc;;;;;ACvGpB,GAAImD,QAAStK,QAAQ,aA2BjByC,KAAOzC,QAAQ,SAEnBjB,QAAOD,QAAU,SAAUmB,EAAKpB,EAAMc,GACpCM,EAAIpB,GAAQ,WACV,GAAIkB,GAAW0C,KAAKnD,KAAM,OACtBS,IAAYuK,OAAOK,gBAAiB,GACtClI,KAAKnD,KAAM,OAAQW,EAAIpB,GACzB,IAAIa,GAASC,EAAOqH,MAAM1H,KAAMmC,UAChC,YAAkB,KAAX/B,EAAuBJ,KAAOI;;;;;ACnCzC,GAAI4K,QAAStK,QAAQ,aACjByC,KAAOzC,QAAQ,SA4BnBjB,QAAOD,QAAU,SAAUmB,EAAKT,EAAMX,GACpCyC,OAAO4F,eAAejH,EAAKT,GACvB6H,IAAK,QAASpH,KACZ,GAAIT,GAAWiD,KAAKnD,KAAM,OACtBE,IAAY8K,OAAOK,gBAAiB,GACtClI,KAAKnD,KAAM,OAAQW,EAErB,IAAIN,GAASd,EAAOwB,KAAKf,KACzB,YAAkB,KAAXK,EAAuBL,KAAOK,GAEvCwH,cAAc;;;;;ACzBpB,GAAIiD,gBAAiBpK,QAAQ,mBACzByC,KAAOzC,QAAQ,UACfsF,KAAOtF,QAAQ,cAEnBjB,QAAOD,QAAU,SAAUU,EAAKG,GAC9B,GAAIH,GAAMiD,KAAKjD,EAAK,SACpBG,GAAQA,EAAMsF,IAAI,SAAUzF,GAAK,MAAOA,GAAE0D,gBAC1CvD,EAAM+M,MAGN,IAAIjN,GAAME,EAAMsF,IAAI,SAAUzF,EAAGC,GAC/B,GAAII,KAAS,IAAK,IAAK,IAAK,IAAK,KAAMiB,QAAQtB,EAAEiM,OAAO,IAAM,KAAO,IACjE/L,EAAKC,EAAMW,OAAS,GAAKb,IAAUE,EAAMW,OAAS,EAAI,MAAQ,EAClE,OAAOZ,GAAKG,EAAM,IAAML,IACvBwC,KAAK,KAER,KAAKrC,EAAMsK,KAAK,SAAUtK,GAAY,MAAO2F,MAAK9F,KAASG,IACzD,KAAM,IAAIyK,gBACR,yBAA2B3K,EAAM,SAAW6F,KAAK9F,GAAO;;;;;ACb9DT,OAAOD,QAAU,SAAUU,EAAKY,EAAKX,GACnC,GAAIC,GAAQF,EAAImV,UAAYnV,EAAImV,QAAUrT,OAAOmT,OAAO,MACxD,OAAyB,KAArBhT,UAAUnB,OAGLZ,EAAMU,QAFbV,EAAMU,GAAOX;;;;;ACXjBV,OAAOD,QAAU,SAAUU,EAAKE,GAC9B,MAAOA,GAAKY,OAAS,EAAIZ,EAAK,GAAKF,EAAIoB;;;;;ACCzC7B,OAAOD,QAAU,SAAiCa,GAChD,GAAID,KACJ,KAAK,GAAIG,KAAQF,GACfD,EAAO4E,KAAKzE,EAEd,OAAOH;;;;;;;;ACdT,GAAI+C,MAAOzC,QAAQ,UACfoL,UAAYpL,QAAQ,eACpB8L,QAAU9L,QAAQ,aAClB+M,WAAa/M,QAAQ,eAqBzBjB,QAAOD,QAAU,SAAUU,EAAKC,GAC9B,GAAIE,GAAS8C,KAAKjD,EAAK,UACnBO,EAAM0C,KAAKjD,EAAK,UAChBS,EAAWR,EAAK,GAChBW,EAASgL,UAAU5L,EAAKC,GACxBC,EAAMC,EAASF,EAAK,GAAKA,EAAK,GAC9BK,EAAU2C,KAAKjD,EAAK,UASxB,OAPkB,kBAARE,KAAoBA,EAAMA,KACpCA,EAAMA,GAAO,GACbA,EAAMA,EACHkV,QAAQ,aAAc,WAAc,MAAO7H,YAAWhN,KACtD6U,QAAQ,YAAa,WAAc,MAAO7H,YAAW3M,KACrDwU,QAAQ,YAAa,WAAc,MAAO7H,YAAW9M,KAEjDH,EAAUA,EAAU,KAAOJ,EAAMA;;;;;ACjC1CX,OAAOD,QAAU,SAAUU,GACzB,GAAIA,EAAKwF,KAAM,MAAOxF,GAAKwF,IAE3B,IAAItF,GAAQ,yBAAyB0J,KAAK5J,EAC1C,OAAOE,IAASA,EAAM,GAAKA,EAAM,GAAK;;;;;;;;;;;;;;;;;;;;;;;AC4CxC,QAASmV,WAAWrV,GAClB,GAAIG,GAAMH,EAAKoV,QAAQ,aAAc,QACjC7U,EAAQJ,EAAIyR,MAAM,kBACtB,OAAOrR,GAAMkF,IAAI,SAAUzF,GACzB,GAAIG,GAAK,cACLI,EAAOJ,EAAGyJ,KAAK5J,EACnB,OAAIO,IAAeE,EAAG6U,WAAW/U,EAAK,MACxBgM,EAAGvM,EAAMoV,QAAQ,eAAgB;;;;;;;;;;;;;;AAoBnD,QAASG,eAAevV,EAAQG,EAAKI,GACnC,GACIN,GADAC,EAAMC,CAGVI,OAAmB,KAAVA,EAAsBP,EAAOc,OAASP,CAE/C,KAAK,GAAIgM,GAAI,EAAGjM,EAAIC,EAAOgM,EAAIjM,EAAGiM,IAAK,CACrC,GAAIlM,GAAOL,EAAOuM,EACdrM,IACE,mBAAuBG,GAAKkM,EAC9BrM,EAAMA,EAAIG,EAAKkM,GACR,mBAAuBlM,GAAKI,IACnCP,EAAMA,EAAIG,EAAKI,IACb8L,GAAMjM,EAAI,IAAIL,EAAMC,IAExBD,MAAM,GAGV,MAAOA,GAvGT,GAAIsO,aAAc/N,QAAQ,gBAwB1BjB,QAAOD,QAAU,SAAqBU,EAAMG,GAC1C,GAAII,GAAS8U,UAAUrV,GACnBC,EAAOM,EAAOA,EAAOO,OAAS,GAE9BZ,GACFsV,OAAQjV,EAAOO,OAAS,EAAIyU,cAAchV,EAAQJ,EAAKI,EAAOO,OAAS,GAAKX,EAC5EqF,KAAMvF,EAAKsM,GAAKtM,EAAKQ,EACrBqC,MAAOyS,cAAchV,EAAQJ,GAI/B,OAFAD,GAAKoO,OAASC,YAAYrO,EAAKsF,KAAMtF,EAAKsV,QAEnCtV;;;;;;AClCT,GAAImO,aAAc7N,QAAQ,gBAgC1BjB,QAAOD,QAAU,SAASU,EAAMC,GAC9B,GAAIE,GAAOkO,YAAYrO,EAAMC,EAC7B,OAAOE,GAAK2C;;;;;ACtBdvD,OAAOD,QAAU,SAAuBU,GAGtC,QAASC,GAAYD,GACfK,EAAOiB,QAAQtB,MAAc,GAC/BK,EAAOyE,KAAK9E,GAKhB,IATA,GAAIK,GAASyB,OAAOoT,oBAAoBlV,GAQpCG,EAAQ2B,OAAO2T,eAAezV,GACjB,OAAVG,GACL2B,OAAOoT,oBAAoB/U,GAAOkC,QAAQpC,GAC1CE,EAAQ2B,OAAO2T,eAAetV,EAGhC,OAAOE;;;;;AC5BT,GAAIyF,MAAOtF,QAAQ,eAuCfkV,UACAC,OAAUtB,OACVuB,OAAUxB,OAGd7U,QAAOD,QAAU,SAAqBU,EAAMC,GAC1C,GAAIE,GAAK2F,KAAK7F,EAGd,OAAU,SAAPE,GAAwB,cAAPA,IAKjBuV,SAASvV,IAAsB,gBAARF,KACxBA,EAAM,GAAIyV,UAASvV,GAAIF,IAElBD,IAAQC;;;;;;;;ACpDjB,GAAIX,SAAUC,OAAOD;;;AAMrBA,QAAQ6C,KAAO3B,QAAQ;;;AAMvBlB,QAAQwG,KAAOtF,QAAQ;;;AAKvBlB,QAAQ4M,YAAc1L,QAAQ;;;AAM9BlB,QAAQoM,WAAalL,QAAQ;;;AAM7BlB,QAAQsM,UAAYpL,QAAQ;;;AAM5BlB,QAAQgN,QAAU9L,QAAQ;;;AAM1BlB,QAAQiO,WAAa/M,QAAQ;;;AAM7BlB,QAAQ2D,KAAOzC,QAAQ;;;AAMvBlB,QAAQoV,cAAgBlU,QAAQ;;;AAMhClB,QAAQ6M,IAAM3L,QAAQ;;;AAMtBlB,QAAQuW,aAAerV,QAAQ;;;AAM/BlB,QAAQ+O,YAAc7N,QAAQ;;;AAM9BlB,QAAQiP,YAAc/N,QAAQ;;;AAM9BlB,QAAQkN,QAAUhM,QAAQ;;;AAM1BlB,QAAQ4B,YAAcV,QAAQ;;;AAM9BlB,QAAQkC,UAAYhB,QAAQ;;;AAM5BlB,QAAQiM,kBAAoB/K,QAAQ;;;AAMpClB,QAAQkM,gBAAkBhL,QAAQ;;;AAMlClB,QAAQgM,mBAAqB9K,QAAQ;;;AAMrClB,QAAQmM,yBAA2BjL,QAAQ,icC3G3C,QAAS8L,SAAQtM,EAAKC,EAAYE,EAAOD,GACvC,GAAIO,IACFqV,WAAY7V,EACZ8V,QACAC,QAAS,SAAUhW,GAAO,MAAOA,IAEnC,OAAOiW,aAAYxV,EAAKT,EAAuB,mBAAVG,GAAwB,EAAIA,GAenE,QAAS8V,aAAYjW,EAAKC,EAAOE,GAG/B,GAAIF,GAAkC,kBAAlBA,GAAMqM,SAEtBrM,EAAMqM,UAAYhN,QAAQgN,WAExBrM,EAAMiW,aAAejW,EAAMiW,YAAYzR,YAAcxE,GAAQ,CACjE,GAAIC,GAAMD,EAAMqM,QAAQnM,EAIxB,OAHmB,gBAARD,KACTA,EAAM+V,YAAYjW,EAAKE,EAAKC,IAEvBD,EAIT,GAAIO,GAAY0V,gBAAgBnW,EAAKC,EACrC,IAAIQ,EACF,MAAOA,EAIT,IAAI2V,aAAanW,GAAQ,CACvB,GAAI,aAAeA,GACjB,MAAOA,GAAMoW,SAKb,KACE,GAAIC,SAASC,WAAY,CACvB,GAAIlW,GAAgB,GAAImW,cACxB,OAAOnW,GAAcoW,kBAAkBxW,GAKvC,GAAIM,GAAK,+BACLD,EAAYgW,SAASI,gBAAgBnW,EAAI,IAM7C,OAJAD,GAAUqW,YAAY1W,EAAM2W,WAAU,IACtC7S,KAAOzD,EAAUuW,UACdzB,QAAQ,KAAM,IAAMnV,EAAM4W,UAAY,KACzCvW,EAAUuW,UAAY,GACf9S,KAET,MAAO/D,KASb,GAAIY,GAAckW,wBAAwB7W,GACtCqD,EAAOtD,EAAI8V,WAAaiB,cAAc9W,GAASW,CAKnD,IAAoB,IAAhB0C,EAAKxC,QAAiBkW,QAAQ/W,KACb,IAAhBqD,EAAKxC,QAA4B,UAAZwC,EAAK,IACV,IAAhBA,EAAKxC,QAA4B,gBAAZwC,EAAK,IAAoC,UAAZA,EAAK,IACrD,CACL,GAAqB,kBAAVrD,GAAsB,CAC/B,GAAIsM,GAAOC,QAAQvM,GACfG,EAAamM,EAAO,KAAOA,EAAO,EACtC,OAAOvM,GAAIgW,QAAQ,YAAc5V,EAAa,IAAK,WAErD,GAAI6W,SAAShX,GACX,MAAOD,GAAIgW,QAAQ9T,OAAOuC,UAAUyF,SAASrJ,KAAKZ,GAAQ,SAE5D,IAAIiX,OAAOjX,GACT,MAAOD,GAAIgW,QAAQmB,KAAK1S,UAAU2S,YAAYvW,KAAKZ,GAAQ,OAE7D,IAAI+W,QAAQ/W,GACV,MAAOoX,aAAYpX,GAIvB,GAAIZ,GAAO,GAAIK,GAAQ,EAAOmN,GAAU,IAAK,IAS7C,IANIsB,QAAQlO,KACVP,GAAQ,EACRmN,GAAU,IAAK,MAII,kBAAV5M,GAAsB,CAC/B,GAAIsM,GAAOC,QAAQvM,GACfG,EAAamM,EAAO,KAAOA,EAAO,EACtClN,GAAO,aAAee,EAAa,IAcrC,GAVI6W,SAAShX,KACXZ,EAAO,IAAM6C,OAAOuC,UAAUyF,SAASrJ,KAAKZ,IAI1CiX,OAAOjX,KACTZ,EAAO,IAAM8X,KAAK1S,UAAU2S,YAAYvW,KAAKZ,IAI3C+W,QAAQ/W,GACV,MAAOoX,aAAYpX,EAGrB,IAAoB,IAAhBqD,EAAKxC,UAAkBpB,GAAyB,GAAhBO,EAAMa,QACxC,MAAO+L,GAAO,GAAKxN,EAAOwN,EAAO,EAGnC,IAAI1M,EAAe,EACjB,MAAI8W,UAAShX,GACJD,EAAIgW,QAAQ9T,OAAOuC,UAAUyF,SAASrJ,KAAKZ,GAAQ,UAEnDD,EAAIgW,QAAQ,WAAY,UAInChW,GAAI+V,KAAKjR,KAAK7E,EAEd,IAAIqN,EAWJ,OATEA,GADE5N,EACO4X,YAAYtX,EAAKC,EAAOE,EAAcS,EAAa0C,GAEnDA,EAAKmC,IAAI,SAASvF,GACzB,MAAOqX,gBAAevX,EAAKC,EAAOE,EAAcS,EAAaV,EAAKR,KAItEM,EAAI+V,KAAKzL,MAEFkN,qBAAqBlK,EAAQjO,EAAMwN,GAI5C,QAASsJ,iBAAgBnW,EAAKC,GAC5B,aAAeA,IACb,IAAK,YACH,MAAOD,GAAIgW,QAAQ,YAAa,YAElC,KAAK,SACH,GAAI7V,GAAS,IAAO4H,KAAKE,UAAUhI,GAAOmV,QAAQ,SAAU,IAClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,GACjE,OAAOpV,GAAIgW,QAAQ7V,EAAQ,SAE7B,KAAK,SACH,MAAc,KAAVF,GAAgB,EAAEA,MAAY,EAAA,GACzBD,EAAIgW,QAAQ,KAAM,UAEpBhW,EAAIgW,QAAQ,GAAK/V,EAAO,SAEjC,KAAK,UACH,MAAOD,GAAIgW,QAAQ,GAAK/V,EAAO,WAGnC,GAAc,OAAVA,EACF,MAAOD,GAAIgW,QAAQ,OAAQ,QAK/B,QAASqB,aAAYrX,GACnB,MAAO,IAAMU,MAAM+D,UAAUyF,SAASrJ,KAAKb,GAAS,IAItD,QAASsX,aAAYtX,EAAKC,EAAOE,EAAcD,EAAaO,GAE1D,IAAK,GADDJ,MACKE,EAAI,EAAGD,EAAIL,EAAMa,OAAQP,EAAID,IAAKC,EACrCuB,OAAO2C,UAAUiI,eAAe7L,KAAKZ,EAAOmU,OAAO7T,IACrDF,EAAOyE,KAAKyS,eAAevX,EAAKC,EAAOE,EAAcD,EACjDkU,OAAO7T,IAAI,IAEfF,EAAOyE,KAAK,GAShB,OANArE,GAAK4B,QAAQ,SAAS5B,GACfA,EAAImR,MAAM,UACbvR,EAAOyE,KAAKyS,eAAevX,EAAKC,EAAOE,EAAcD,EACjDO,GAAK,MAGNJ,EAIT,QAASkX,gBAAevX,EAAKC,EAAOE,EAAcD,EAAaO,EAAKJ,GAClE,GAAIE,GAAMD,CAuCV,IAtCIL,EAAMwX,mBACJxX,EAAMwX,iBAAiBhX,GAEvBH,EADEL,EAAMyX,iBAAiBjX,GACnBT,EAAIgW,QAAQ,kBAAmB,WAE/BhW,EAAIgW,QAAQ,WAAY,WAG5B/V,EAAMyX,iBAAiBjX,KACzBH,EAAMN,EAAIgW,QAAQ,WAAY,aAIhC9V,EAAYoB,QAAQb,GAAO,IAC7BF,EAAO,IAAME,EAAM,KAEhBH,IACCN,EAAI+V,KAAKzU,QAAQrB,EAAMQ,IAAQ,GAE/BH,EADmB,OAAjBH,EACI8V,YAAYjW,EAAKC,EAAMQ,GAAM,MAE7BwV,YAAYjW,EAAKC,EAAMQ,GAAMN,EAAe,GAEhDG,EAAIgB,QAAQ,OAAQ,IAEpBhB,EADED,EACIC,EAAIkD,MAAM,MAAMiC,IAAI,SAASzF,GACjC,MAAO,KAAOA,IACbwC,KAAK,MAAMe,OAAO,GAEf,KAAOjD,EAAIkD,MAAM,MAAMiC,IAAI,SAASzF,GACxC,MAAO,MAAQA,IACdwC,KAAK,QAIZlC,EAAMN,EAAIgW,QAAQ,aAAc,YAGhB,mBAATzV,GAAsB,CAC/B,GAAIF,GAASI,EAAImR,MAAM,SACrB,MAAOtR,EAETC,GAAOwH,KAAKE,UAAU,GAAKxH,GACvBF,EAAKqR,MAAM,iCACbrR,EAAOA,EAAKgD,OAAO,EAAGhD,EAAKO,OAAS,GACpCP,EAAOP,EAAIgW,QAAQzV,EAAM,UAEzBA,EAAOA,EAAK6U,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChC7U,EAAOP,EAAIgW,QAAQzV,EAAM,WAI7B,MAAOA,GAAO,KAAOD,EAIvB,QAASkX,sBAAqBxX,EAAQC,EAAME,GAC1C,GAAID,GAAc,EACdO,EAAST,EAAOsH,OAAO,SAAStH,EAAMC,GAGxC,MAFAC,KACID,EAAIqB,QAAQ,OAAS,GAAGpB,IACrBF,EAAOC,EAAIa,OAAS,GAC1B,EAEH,OAAIL,GAAS,GACJN,EAAO,IACG,KAATF,EAAc,GAAKA,EAAO,OAC3B,IACAD,EAAOwC,KAAK,SACZ,IACArC,EAAO,GAGTA,EAAO,GAAKF,EAAO,IAAMD,EAAOwC,KAAK,MAAQ,IAAMrC,EAAO,GAGnE,QAASgO,SAAQnO,GACf,MAAO8M,OAAMqB,QAAQnO,IACC,gBAAPA,IAA0C,mBAAvB2X,eAAe3X,GAGnD,QAASiX,UAASjX,GAChB,MAAqB,gBAAPA,IAA0C,oBAAvB2X,eAAe3X,GAGlD,QAASkX,QAAOlX,GACd,MAAoB,gBAANA,IAAwC,kBAAtB2X,eAAe3X,GAGjD,QAASgX,SAAQhX,GACf,MAAoB,gBAANA,IAAwC,mBAAtB2X,eAAe3X,GAGjD,QAAS2X,gBAAe3X,GACtB,MAAO8B,QAAO2C,UAAUyF,SAASrJ,KAAKb,GA1UxC,GAAIwM,SAAUhM,QAAQ,aAClBuW,cAAgBvW,QAAQ,mBACxBsW,wBAA0BtW,QAAQ,4BAEtCjB,QAAOD,QAAUgN,OAyBjB,IAAI8J,cAAe,SAAUpW,GAC3B,MAA2B,gBAAhB4X,aACF5X,YAAkB4X,aAElB5X,GACa,gBAAXA,IACa,IAApBA,EAAO6X,UACoB,gBAApB7X,GAAO8X;;;;;;;;AC7BpB,GAAIxL,SAAU9L,QAAQ,aAClBsK,OAAStK,QAAQ,YAerBjB,QAAOD,QAAU,SAAUU,GACzB,GAAIE,GAAMoM,QAAQtM,GACdC,EAAO6B,OAAO2C,UAAUyF,SAASrJ,KAAKb,EAE1C,IAAI8K,OAAOiB,mBAAqB7L,EAAIY,QAAUgK,OAAOiB,kBAAmB,CACtE,GAAa,sBAAT9L,EACF,MAAQD,GAAIwF,MAAqB,KAAbxF,EAAIwF,KAEpB,cAAgBxF,EAAIwF,KAAO,IAD3B,YAEC,IAAa,mBAATvF,EACT,MAAO,WAAaD,EAAIc,OAAS,KAC5B,IAAa,oBAATb,EAA4B,CACrC,GAAIE,GAAO2B,OAAOC,KAAK/B,GACnBsD,EAAOnD,EAAKW,OAAS,EACnBX,EAAK4X,OAAO,EAAG,GAAGvV,KAAK,MAAQ,QAC/BrC,EAAKqC,KAAK,KAChB,OAAO,aAAec,EAAO,MAE7B,MAAOpD,GAGT,MAAOA;;;;;ACRXX,OAAOD,QAAU,SAAUmB,EAAKR,EAAMC,EAAQG,GAC5C,GAAIgM,GAAoB5L,EAAIsU,UAAU9U,GAElCE,EAAoBkM,EAAkByI,gBAC1CzI,GAAkByI,iBAAmB,WACnC,GAAIrU,GAASJ,EAAiBF,GAAmBU,KAAKf,KACtD,YAAkB,KAAXW,EAAuBX,KAAOW,EAGvC,IAAIF,GAAU8L,EAAkBxK,MAChCwK,GAAkBxK,OAAS,WACzB,GAAIpB,GAASP,EAAOK,GAASiH,MAAM1H,KAAMmC,UACzC,YAAkB,KAAXxB,EAAuBX,KAAOW;;;;;ACXzClB,OAAOD,QAAU,SAAUW,EAAKC,EAAMO,GACpC,GAAIJ,GAAUJ,EAAIC,GACdC,EAAS,WAAc,MAAOL,MAE9BO,IAAW,kBAAsBA,KACnCF,EAASE,GAEXJ,EAAIC,GAAQ,WACV,GAAID,GAASQ,EAAON,GAAQqH,MAAM1H,KAAMmC,UACxC,YAAkB,KAAXhC,EAAuBH,KAAOG;;;;;ACTzCV,OAAOD,QAAU,SAAUW,EAAKD,EAAME,GACpC,GAAIG,GAAOyB,OAAO6K,yBAAyB1M,EAAKD,GAC5CG,EAAS,YAETE,IAAQ,kBAAsBA,GAAKwH,MACrC1H,EAASE,EAAKwH,KAEhB/F,OAAO4F,eAAezH,EAAKD,GACvB6H,IAAK,WACH,GAAI5H,GAASC,EAAOC,GAAQU,KAAKf,KACjC,YAAkB,KAAXG,EAAuBH,KAAOG,GAEvC0H,cAAc;;;;;;;;AC1CpB,GAAI1E,MAAOzC,QAAQ,SAanBjB,QAAOD,QAAU,SAAUU,EAAKG,GAC9B,GAAII,GAAS0C,KAAKjD,EAAK,UACnBX,EAAOc,EAAK,EAChB,OAAOI,IAAUlB,EAAOA;;;;;ACG1BE,OAAOD,QAAU,SAAUU,EAAWY,EAAQL,GAC5C,GAAIH,GAAQJ,EAAUmV,UAAYnV,EAAUmV,QAAUrT,OAAOmT,OAAO,MAE/DrU,GAAOuU,UACVvU,EAAOuU,QAAUrT,OAAOmT,OAAO,OAGjC1U,EAAkC,IAArB0B,UAAUnB,QAAeP,CAEtC,KAAK,GAAIyX,KAAQ5X,IACXG,GACU,WAATyX,GAA8B,SAATA,GAA2B,WAARA,KAC3CpX,EAAOuU,QAAQ6C,GAAQ5X,EAAM4X;;;;;;;;;;;;;AC1BnC,QAASC,WAGP,QAAS9X,GAAcA,EAAKE,GAC1ByB,OAAOC,KAAK1B,GAAKgC,QAAQ,SAAUrC,IAC3BC,EAASqB,QAAQtB,KAAMG,EAAIH,GAAOK,EAAIL,MAJhD,GAAIC,MAAc8M,MAAMlM,KAAKoB,UAQ7B,OAAO,YAKL,IAJA,GAAIhC,MAAU8M,MAAMlM,KAAKoB,WACrB5B,EAAI,EACJL,KAEGK,EAAIJ,EAAKa,OAAQT,IACtBF,EAAaH,EAAKC,EAAKI,GAGzB,OAAOL,IAqBX,QAAS4K,gBAAgBzK,EAASF,EAAQI,GACxC,GAAIL,GAASiY,QAAQ,OAAQ,UAAW,QAAS,cAAe,UAC5D7X,EAAQJ,EAAOC,MAGnBH,MAAKuD,QAAUlD,GAAW,6BAC1BL,KAAKuL,UAAW,CAGhB,KAAK,GAAI/H,KAAOlD,GACdN,KAAKwD,GAAOlD,EAAMkD,EAKpB,IADAjD,EAAMA,GAAO4B,UAAUgJ,OACnB5K,GAAOK,MAAMwX,kBACfxX,MAAMwX,kBAAkBpY,KAAMO,OAE9B,KACE,KAAM,IAAIK,OACV,MAAMP,GACNL,KAAKmK,MAAQ9J,EAAE8J;;;AAlCrB1K,OAAOD,QAAUsL;;;AA2CjBA,eAAenG,UAAY3C,OAAOmT,OAAOvU,MAAM+D;;;AAM/CmG,eAAenG,UAAUe,KAAO;;;AAMhCoF,eAAenG,UAAUyR,YAActL,eASvCA,eAAenG,UAAU0T,OAAS,SAAUhY,GAC1C,GAAIF,GAASgY,QAAQ,cAAe,SAAU,SAC1C5X,EAAQJ,GAASuF,KAAM1F,KAAK0F,MAAQ1F,KAOxC,QAJI,IAAUK,GAASL,KAAKmK,QAC1B5J,EAAM4J,MAAQnK,KAAKmK,OAGd5J,6CClHTd,OAAOD,QAAUkB,QAAQ;;;;;;;;ACuCzB,QAAS6O,WAAUrP,EAAGG,EAAGF,GACvB,QAAImY,UAAUpY,EAAGG,KAEN,SAAW2F,KAAK9F,GAClBqY,UAAUrY,EAAGG,GACX,WAAa2F,KAAK9F,GACpBsY,YAAYtY,EAAGG,GACboY,OAAOC,SAASxY,GAClByY,YAAYzY,EAAGG,GACb,cAAgB2F,KAAK9F,GACvB0Y,eAAe1Y,EAAGG,EAAGF,KAClB0Y,UAAU3Y,EAAGG,KAEb,WAAa2F,KAAK9F,IAAM,WAAa8F,KAAK3F,IAClD,UAAY2F,KAAK9F,IAAM,UAAY8F,KAAK3F,GACnCiY,UAAUpY,EAAGG,GAEbyY,YAAY5Y,EAAGG,EAAGF;;;;;;;;AAa7B,QAASmY,WAAUpY,EAAGG,GACpB,MAAIH,KAAMG,EAAgB,IAANH,GAAW,EAAIA,IAAM,EAAIG,EACtCH,IAAMA,GAAKG,IAAMA;;;;;;;;;;AAc1B,QAASwY,WAAU3Y,EAAGG,GACpB,MAAO2F,MAAK9F,KAAO8F,KAAK3F;;;;;;;;AAY1B,QAASkY,WAAUrY,EAAGG,GACpB,MAAI,SAAW2F,KAAK3F,IACbiY,UAAUpY,EAAE6Y,UAAW1Y,EAAE0Y;;;;;;;;AAYlC,QAASP,aAAYtY,EAAGG,GACtB,MAAI,WAAa2F,KAAK3F,IACfiY,UAAUpY,EAAEkK,WAAY/J,EAAE+J;;;;;;;;;;AAcnC,QAASwO,gBAAe1Y,EAAGG,EAAGF,GAC5B,MAAI,cAAgB6F,KAAK3F,KACzBH,KAAO+M,MAAMlM,KAAKb,GAClBG,KAAO4M,MAAMlM,KAAKV,GACXkP,UAAUrP,EAAGG,EAAGF;;;;;;AAUzB,QAAS2H,YAAW5H,GAClB,GAAIG,KACJ,KAAK,GAAIF,KAAOD,GAAGG,EAAI2E,KAAK7E,EAC5B,OAAOE;;;;;;;;AAYT,QAAS2Y,eAAc9Y,EAAGG,GACxB,GAAIH,EAAEc,SAAYX,EAAEW,OAAQ,OAAO,CAKnC,KAHA,GAAIb,GAAI,EACJK,GAAQ,EAELL,EAAID,EAAEc,OAAQb,IACnB,GAAID,EAAEC,KAAOE,EAAEF,GAAI,CACjBK,GAAQ,CACR,OAIJ,MAAOA;;;;;;;;AAYT,QAASmY,aAAYzY,EAAGG,GACtB,QAAKoY,OAAOC,SAASrY,IACd2Y,cAAc9Y,EAAGG;;;;;;;AAW1B,QAAS4Y,SAAQ/Y,GACf,MAAa,QAANA,OAAoB,KAANA;;;;;;;;;;AAcvB,QAAS4Y,aAAY5Y,EAAGG,EAAGF,GACzB,IAAK8Y,QAAQ/Y,KAAO+Y,QAAQ5Y,GAC1B,OAAO,CAGT,IAAIH,EAAEyE,YAActE,EAAEsE,UACpB,OAAO,CAGT,IAAInE,EACJ,IAAIL,EAAA,CACF,IAAKK,EAAI,EAAGA,EAAIL,EAAEa,OAAQR,IACxB,GAAKL,EAAEK,GAAG,KAAON,GAAKC,EAAEK,GAAG,KAAOH,GAC7BF,EAAEK,GAAG,KAAOH,GAAKF,EAAEK,GAAG,KAAON,EAChC,OAAO,MAIXC,KAGF,KACE,GAAIM,GAAKqH,WAAW5H,GAChBE,EAAK0H,WAAWzH,GACpB,MAAOH,GACP,OAAO,EAMT,GAHAO,EAAG2M,OACHhN,EAAGgN,QAEE4L,cAAcvY,EAAIL,GACrB,OAAO,CAGTD,GAAE6E,MAAO9E,EAAGG,GAEZ,IAAId,EACJ,KAAKiB,EAAIC,EAAGO,OAAS,EAAGR,GAAK,EAAGA,IAE9B,GADAjB,EAAMkB,EAAGD,IACJ+O,UAAUrP,EAAEX,GAAMc,EAAEd,GAAMY,GAC7B,OAAO,CAIX,QAAO,EArPT,GAAI6F,MAAOtF,QAAQ,eAMf+X,MACJ,KAAMA,OAAS/X,QAAQ,UAAU+X,OACjC,MAAMvY,GACJuY,UACAA,OAAOC,SAAW,WAAa,OAAO;;;AAOxCjZ,OAAOD,QAAU+P,8EC3BjB9P,OAAOD,QAAUkB,QAAQ;;;;;;;;ACoCzB,QAASwY,SAAS/Y,GAChB,GAAID,GAAM8B,OAAO2C,UAAUyF,SAASrJ,KAAKZ,EACzC,OAAIgZ,SAAQjZ,GAAaiZ,QAAQjZ,GACrB,OAARC,EAAqB,WACb,KAARA,EAA0B,YAC1BA,IAAQ6B,OAAO7B,GAAa,eAClBA,GAgBhB,QAASiZ,WACPpZ,KAAK0K,SAjDP,GAAIlL,SAAUC,OAAOD,QAAU0Z,QAM3BC,SACAE,iBAAkB,QAClBC,kBAAmB,SACnBC,oBAAqB,WACrBC,qBAAsB,YACtBC,gBAAiB,OAwBrBja,SAAQ4Z,QAAUA,QAgClBA,QAAQzU,UAAU+U,GAAKR,QA6BvBE,QAAQzU,UAAUjF,OAAS,SAAUS,EAAMD,GACzC,MAAyB,KAArBiC,UAAUnB,OAAqBhB,KAAK0K,MAAMvK,IAC9CH,KAAK0K,MAAMvK,GAAQD,EACZF,OAqBToZ,QAAQzU,UAAUtC,KAAO,SAAUlC,EAAKD,GACtC,GAAIA,IAASgZ,QAAQ/Y,GAAM,OAAO,CAClC,IAAIE,GAAOL,KAAK0K,MAAMxK,EAEtB,IAAIG,GAAQ,WAAa6Y,QAAQ7Y,GAC/B,MAAOA,GAAKgC,KAAKlC,EACZ,IAAIE,GAAQ,aAAe6Y,QAAQ7Y,GACxC,MAAOA,GAAKF,EAEZ,MAAM,IAAIwZ,gBAAe,cAAgBzZ,EAAO;;;;;;;;AClHpD,QAASgZ,SAAQhZ,GACf,GAAIC,GAAO6B,OAAO2C,UAAUyF,SAASrJ,KAAKb,GAAK4R,MAAM8H,kBAAkB,GAAGhW,aAE1E,OAAuB,kBAAZiW,UAA0B3Z,YAAe2Z,SAAgB,UAExD,OAAR3Z,EAAqB,WAEb,KAARA,EAA0B,YACvBC,EAgBT,QAASiZ,WACP,MAAMpZ,gBAAgBoZ,cACtBpZ,KAAK0K,UADkC,GAAI0O,SAxC7C,GAAI5Z,SAAUC,OAAOD,QAAU0Z,QAa3BU,iBAAmB,mBAavBpa,SAAQ4Z,QAAUA,QAiClBA,QAAQzU,UAAU+U,GAAKR,QA6BvBE,QAAQzU,UAAUjF,OAAS,SAASQ,EAAMC,GACxC,MAAyB,KAArBgC,UAAUnB,OAAqBhB,KAAK0K,MAAMxK,IAC9CF,KAAK0K,MAAMxK,GAAQC,EACZH,OAqBToZ,QAAQzU,UAAUtC,KAAO,SAASnC,EAAKC,GACrC,GAAIA,IAAS+Y,QAAQhZ,GAAM,OAAO,CAClC,IAAIG,GAAOL,KAAK0K,MAAMvK,EAEtB,IAAIE,GAAQ,WAAa6Y,QAAQ7Y,GAC/B,MAAOA,GAAKgC,KAAKnC,EACZ,IAAIG,GAAQ,aAAe6Y,QAAQ7Y,GACxC,MAAOA,GAAKH,EAEZ,MAAM,IAAIyZ,gBAAe,cAAgBxZ,EAAO,yEClInD,WACG,YAEA,SAASA,GAAiBQ,EAAQT,EAAME,EAAQE,GAC5C,MAAIN,gBAAgBG,IAChBH,KAAK8Z,OAASnZ,OAAU,GACxBX,KAAK+Z,KAAO7Z,GAAQ,IACpBF,KAAKga,SAAW5Z,EAChBJ,KAAKia,SAAW3Z,EACTN,MAEJ,GAAIG,GAAiBQ,EAAQT,EAAME,EAAQE,GAKtD,QAASK,GAAOR,EAAWD,EAAgBE,GACvC,MAAID,aAAqBQ,GACdR,EAEPH,eAAgBW,IAChBX,KAAK0F,KAAO,KACZ1F,KAAKgD,MAAQ,KACbhD,KAAKka,gBAAkB,EAAA,EACvBla,KAAK+Z,KAAOzF,OAAOlU,GAAgB,KACnCJ,KAAKma,eAAgB,EACrBna,KAAK8Z,OAAS5Z,GAAkB,KAChCF,KAAKoa,iBAAkB,EACvBpa,KAAKga,QAAS,EACdha,KAAKqa,UAAW,EACZla,GACAH,KAAK4C,MAAMzC,EAAWD,EAAgBE,GAEnCJ,MAEJ,GAAIW,GAAOR,EAAWD,EAAgBE,GA4HjD,QAASF,KACL,GAAIC,GAASC,EAAcE,CAC3B,OAAIN,gBAAgBE,IAChBC,EAAU6B,OAAOmT,OAAO,MAExBnV,KAAKsa,UAAY,SAAmBpa,EAAQG,EAAgBI,GACxD,GAAIF,GAAQgM,CAIZ,IAHArM,EAAS,GAAIS,GAAOT,EAAQG,EAAgBI,GAE5CF,EAASL,EAAOga,iBAAmB7C,KAAKkD,UACX,KAAzBpa,EAAQD,EAAOwF,MAAqB,CAEpC,IADAtF,EAAeD,EAAQD,EAAOwF,MACzB6G,EAAI,EAAGA,EAAInM,EAAaY,OAAQuL,GAAK,EAEtC,GADAjM,EAAoBF,EAAamM,GAC7BjM,EAAkBka,aAAata,GAC/B,MAAIK,IACAH,EAAa6X,OAAO1L,EAAG,GACK,IAAxBnM,EAAaY,cACNb,GAAQD,EAAOwF,OAEnB,IAEXtF,EAAamM,GAAKrM,EACXA,EAGf,QAAIK,IAGJH,EAAa4E,KAAK9E,GACXA,GAEX,OAAIK,IAGJJ,EAAQD,EAAOwF,OAASxF,GACjBC,EAAQD,EAAOwF,QAG1B1F,KAAK+C,UAAY,SAAmBpC,EAAaT,GAC7C,GAAII,GAAQD,CAEZ,IADAD,EAAeD,EAAQQ,GAIvB,IAAKN,EAAI,EAAGA,EAAID,EAAaY,OAAQX,GAAK,EAEtC,GADAC,EAASF,EAAaC,GAClBC,EAAO4Z,iBAAmB7C,KAAKkD,MACH,IAAxBna,EAAaY,cACNb,GAAQG,EAAOoF,UAK9B,IAAIpF,EAAOma,QAAQva,GACf,MAAOI,IAKnBN,KAAK8C,WAAa,SAAoBnC,GAClC,GAAkBT,GAAaE,EAA3BE,IACJ,KAAKJ,IAAeC,GAChBC,EAASJ,KAAK+C,UAAU7C,EAAaS,GACjCP,GACAE,EAAQ0E,KAAK5E,EAWrB,OARAE,GAAQ8J,SAAW,WACf,MAAO9J,GAAQoC,KAAK,MAExBpC,EAAQoa,cAAgB,WACpB,MAAOpa,GAAQqF,IAAI,SAAUxF,GACzB,MAAOA,GAAEua,kBACVhY,KAAK,MAELpC,GAGJN,MAEJ,GAAIE,GAnOfC,EAAiB2F,IAAM9D,OAAO2Y,OAAO3Y,OAAOmT,OAAO,OACnD3V,QAAQgG,iBAAmBrF,EAuB3BX,QAAQob,OAASja,EAEjBA,EAAOgE,UAAUyF,SAAW,WACxB,GAAIjK,IAAOH,KAAK0F,KAAO,IAAM1F,KAAKgD,MAgBlC,OAfIhD,MAAKka,kBAAoB,EAAA,GACzB/Z,EAAI6E,KAAK,WAAa,GAAKqS,MAAKrX,KAAKka,iBAAkBW,eAEvD7a,KAAK8Z,QACL3Z,EAAI6E,KAAK,UAAYhF,KAAK8Z,QAE1B9Z,KAAK+Z,MACL5Z,EAAI6E,KAAK,QAAUhF,KAAK+Z,MAExB/Z,KAAKga,QACL7Z,EAAI6E,KAAK,UAEThF,KAAKqa,UACLla,EAAI6E,KAAK,YAEN7E,EAAIuC,KAAK,OAGpB/B,EAAOgE,UAAU+V,cAAgB,WAC7B,MAAO1a,MAAK0F,KAAO,IAAM1F,KAAKgD,MAGlC,IAAI5C,GAAsB,kCAC1BO,GAAOgE,UAAU/B,MAAQ,SAAezC,EAAKD,EAAgBE,GACzD,GAAIJ,eAAgBW,GAAQ,CACxB,GAMIL,GANAD,EAAQF,EAAIuD,MAAM,KAAKwJ,OAAO,SAAU/M,GACpC,QAASA,IAEbM,EAAOJ,EAAM,GAAGyR,MAAM,qBACtBvR,EAAME,EAAK,GACX8L,EAAQ9L,EAAK,EAKjB,KAHAT,KAAK0F,KAAOnF,EACZP,KAAKgD,MAAQuJ,EAERjM,EAAI,EAAGA,EAAID,EAAMW,OAAQV,GAAK,EAI/B,OAHAG,EAAOJ,EAAMC,GAAGwR,MAAM,0BACtBvR,EAAME,EAAK,GAAGmF,OAAOhC,cACrB2I,EAAQ9L,EAAK,GACLF,GACR,IAAK,WACDP,KAAKqa,UAAW,CAChB,MACJ,KAAK,UACDra,KAAKka,gBAAkB3N,EACfgI,OAAO8C,KAAKzU,MAAM2J,IAClB,EAAA,CACR,MACJ,KAAK,OACDvM,KAAK+Z,KAAOxN,EACJA,EAAM3G,OACN,GACR5F,KAAKma,eAAgB,CACrB,MACJ,KAAK,SACDna,KAAK8Z,OAASvN,EACNA,EAAM3G,OACN,GACR5F,KAAKoa,kBAAoBpa,KAAK8Z,MAC9B,MACJ,KAAK,SACD9Z,KAAKga,QAAS,EAYtB,MAPKha,MAAKma,gBACPna,KAAK+Z,KAAO3Z,GAAgB,KAE1BJ,KAAKoa,kBACPpa,KAAK8Z,OAAS5Z,GAGVF,KAEX,OAAA,GAAWW,IAASiC,MAAMzC,EAAKD,EAAgBE,IAGnDO,EAAOgE,UAAU8V,QAAU,SAAiB9Z,GACxC,MAAIA,KAAgBR,EAAiB2F,OAGjC9F,KAAKqa,UAAY1Z,EAAYsZ,QACzBja,KAAKga,SAAWrZ,EAAYqZ,SAC3Bha,KAAKwa,aAAa7Z,KAM/BA,EAAOgE,UAAU6V,aAAe,SAAsBra,GAClD,GAAKH,KAAK+Z,OAAS5Z,EAAY4Z,MAAU/Z,KAAK8Z,SAAW3Z,EAAY2Z,OACjE,OAAO,CAEX,IAAI9Z,KAAK+Z,MAAgD,IAAxC5Z,EAAY4Z,KAAKvY,QAAQxB,KAAK+Z,MAC3C,OAAO,CAEX,IAAI/Z,KAAKma,eAA2D,IAA1Cha,EAAY4Z,KAAKvY,QAASxB,KAAK+Z,MACtD,OAAO,CAEV,IAAIpZ,GAAgBR,EAAY2Z,QAAU3Z,EAAY2Z,OAAOxE,QAAQ,QAAQ,IACzEpV,EAAgBF,KAAK8Z,QAAU9Z,KAAK8Z,OAAOxE,QAAQ,QAAQ,GAC/D,IAAIpV,IAAkBS,EAClB,OAAO,CAEX,IAAIT,EAAe,CACf,IAAKF,KAAKoa,gBACN,OAAO,CAEX,IAAIha,GAAWO,EAAca,QAAQtB,EACrC,OAAIE,MAAa,GAAMA,IAAaO,EAAcK,OAASd,EAAcc,OAK7E,OAAO,GAsFXxB,QAAQ+F,UAAYrF,EAGpBA,EAAUyE,UAAUkB,WAAa,SAAoB1F,EAASD,EAAgBI,GAC1EH,EAAU6M,MAAMqB,QAAQlO,GAChBA,EACAA,EAAQuD,MAAMtD,EACtB,IACIC,GACAI,EAFAF,IAMJ,KAHAJ,EAAUA,EAAQwF,IAAI,SAASxF,GAC3B,MAAO,IAAIQ,GAAOR,EAAMD,EAAgBI,KAEvCD,EAAI,EAAGA,EAAIF,EAAQa,OAAQX,GAAK,EACjCI,EAASN,EAAQE,GACbL,KAAKsa,UAAU7Z,EAAQP,EAAgBI,IACvCC,EAAWyE,KAAKvE,EAGxB,OAAOF,iDCtQf,YACA,IAAIua,SAAUpa,QAAQ,YAElBqa,GAAKtb,OAAOD,QAAU,SAAUU,GACnC,MAAO4a,UAASE,OAAO,IAAO3Y,KAAKnC,GAGpC6a,IAAGE,GAAK,SAAU/a,GACjB,MAAO4a,SAAQG,IAAID,OAAO,IAAO3Y,KAAKnC,IAGvC6a,GAAGG,GAAK,SAAUhb,GACjB,MAAO4a,SAAQI,IAAIF,OAAO,IAAO3Y,KAAKnC,2DCZvC,YAEA,IAAI+a,IAAK,qHACLC,GAAK,iEAELH,GAAKtb,OAAOD,QAAU,SAAUU,GAEnC,MADAA,GAAOA,MACAA,EAAK8a,MAAQ,GAAI5Y,QAAO,OAAS6Y,GAAK,UAAYC,GAAK,MAC1C,GAAI9Y,QAAO,MAAQ6Y,GAAK,QAAUC,GAAK,IAAK,KAGjEH,IAAGE,GAAK,SAAU/a,GAEjB,MADAA,GAAOA,MACAA,EAAK8a,MAAQ,GAAI5Y,QAAO,IAAM6Y,GAAK,KAAO,GAAI7Y,QAAO6Y,GAAI,MAGjEF,GAAGG,GAAK,SAAUhb,GAEjB,MADAA,GAAOA,MACAA,EAAK8a,MAAQ,GAAI5Y,QAAO,IAAM8Y,GAAK,KAAO,GAAI9Y,QAAO8Y,GAAI;;;;;;ACVjE,YA2CA,SAASC,qBACP,IACE,GAAIhb,GAAM,GAAIib,YAAW,EAEzB,OADAjb,GAAI+U,WAAaA,UAAWkG,WAAWzW,UAAW0W,IAAK,WAAc,MAAO,MACvD,KAAdlb,EAAIkb,OACiB,kBAAjBlb,GAAImb,UACuB,IAAlCnb,EAAImb,SAAS,EAAG,GAAGC,WACvB,MAAOpb,GACP,OAAO,GAIX,QAASqb,cACP,MAAO/C,QAAOgD,oBACV,WACA,WAGN,QAASC,cAAcvb,EAAMD,GAC3B,GAAIsb,aAAetb,EACjB,KAAM,IAAIyb,YAAW,6BAcvB,OAZIlD,QAAOgD,qBAETtb,EAAO,GAAIib,YAAWlb,GACtBC,EAAK+U,UAAYuD,OAAO9T,YAGX,OAATxE,IACFA,EAAO,GAAIsY,QAAOvY,IAEpBC,EAAKa,OAASd,GAGTC,EAaT,QAASsY,QAAQtY,EAAKD,EAAkBG,GACtC,KAAKoY,OAAOgD,qBAAyBzb,eAAgByY,SACnD,MAAO,IAAIA,QAAOtY,EAAKD,EAAkBG,EAI3C,IAAmB,gBAARF,GAAkB,CAC3B,GAAgC,gBAArBD,GACT,KAAM,IAAIU,OACR,oEAGJ,OAAOgb,aAAY5b,KAAMG,GAE3B,MAAO0b,MAAK7b,KAAMG,EAAKD,EAAkBG,GAW3C,QAASwb,MAAM1b,EAAMD,EAAOG,EAAkBD,GAC5C,GAAqB,gBAAVF,GACT,KAAM,IAAIyO,WAAU,wCAGtB,OAA2B,mBAAhBmN,cAA+B5b,YAAiB4b,aAClDC,gBAAgB5b,EAAMD,EAAOG,EAAkBD,GAGnC,gBAAVF,GACF8b,WAAW7b,EAAMD,EAAOG,GAG1B4b,WAAW9b,EAAMD,GA4B1B,QAASgc,YAAY/b,GACnB,GAAoB,gBAATA,GACT,KAAM,IAAIwO,WAAU,mCACf,IAAIxO,EAAO,EAChB,KAAM,IAAIwb,YAAW,wCAIzB,QAASQ,OAAOhc,EAAMD,EAAMG,EAAMD,GAEhC,MADA8b,YAAWhc,GACPA,GAAQ,EACHwb,aAAavb,EAAMD,OAEf,KAATG,EAIyB,gBAAbD,GACVsb,aAAavb,EAAMD,GAAMkc,KAAK/b,EAAMD,GACpCsb,aAAavb,EAAMD,GAAMkc,KAAK/b,GAE7Bqb,aAAavb,EAAMD,GAW5B,QAAS0b,aAAazb,EAAMD,GAG1B,GAFAgc,WAAWhc,GACXC,EAAOub,aAAavb,EAAMD,EAAO,EAAI,EAAoB,EAAhBmc,QAAQnc,KAC5CuY,OAAOgD,oBACV,IAAK,GAAIpb,GAAI,EAAGA,EAAIH,IAAQG,EAC1BF,EAAKE,GAAK,CAGd,OAAOF,GAgBT,QAAS6b,YAAY7b,EAAMD,EAAQG,GAKjC,GAJwB,gBAAbA,IAAsC,KAAbA,IAClCA,EAAW,SAGRoY,OAAO6D,WAAWjc,GACrB,KAAM,IAAIsO,WAAU,6CAGtB,IAAIvO,GAAwC,EAA/Bmb,WAAWrb,EAAQG,EAChCF,GAAOub,aAAavb,EAAMC,EAE1B,IAAIb,GAASY,EAAKoc,MAAMrc,EAAQG,EAShC,OAPId,KAAWa,IAIbD,EAAOA,EAAK8M,MAAM,EAAG1N,IAGhBY,EAGT,QAASqc,eAAerc,EAAMD,GAC5B,GAAIG,GAASH,EAAMc,OAAS,EAAI,EAA4B,EAAxBqb,QAAQnc,EAAMc,OAClDb,GAAOub,aAAavb,EAAME,EAC1B,KAAK,GAAID,GAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/BD,EAAKC,GAAgB,IAAXF,EAAME,EAElB,OAAOD,GAGT,QAAS4b,iBAAiB5b,EAAMD,EAAOG,EAAYD,GAGjD,GAFAF,EAAMqb,WAEFlb,EAAa,GAAKH,EAAMqb,WAAalb,EACvC,KAAM,IAAIsb,YAAW,4BAGvB,IAAIzb,EAAMqb,WAAalb,GAAcD,GAAU,GAC7C,KAAM,IAAIub,YAAW,4BAmBvB,OAfEzb,OADiB,KAAfG,OAAuC,KAAXD,EACtB,GAAIgb,YAAWlb,OACH,KAAXE,EACD,GAAIgb,YAAWlb,EAAOG,GAEtB,GAAI+a,YAAWlb,EAAOG,EAAYD,GAGxCqY,OAAOgD,qBAETtb,EAAOD,EACPC,EAAK+U,UAAYuD,OAAO9T,WAGxBxE,EAAOqc,cAAcrc,EAAMD,GAEtBC,EAGT,QAAS8b,YAAY9b,EAAMD,GACzB,GAAIuY,OAAOC,SAASxY,GAAM,CACxB,GAAIG,GAA4B,EAAtBgc,QAAQnc,EAAIc,OAGtB,OAFAb,GAAOub,aAAavb,EAAME,GAEN,IAAhBF,EAAKa,OACAb,GAGTD,EAAIuc,KAAKtc,EAAM,EAAG,EAAGE,GACdF,GAGT,GAAID,EAAK,CACP,GAA4B,mBAAhB4b,cACR5b,EAAIwc,iBAAkBZ,cAAgB,UAAY5b,GACpD,MAA0B,gBAAfA,GAAIc,QAAuB2b,MAAMzc,EAAIc,QACvC0a,aAAavb,EAAM,GAErBqc,cAAcrc,EAAMD,EAG7B,IAAiB,WAAbA,EAAI8F,MAAqBqI,QAAQnO,EAAI0c,MACvC,MAAOJ,eAAcrc,EAAMD,EAAI0c,MAInC,KAAM,IAAIjO,WAAU,sFAGtB,QAAS0N,SAASlc,GAGhB,GAAIA,GAAUqb,aACZ,KAAM,IAAIG,YAAW,0DACaH,aAAapR,SAAS,IAAM,SAEhE,OAAgB,GAATjK,EAGT,QAAS0c,YAAY1c,GAInB,OAHKA,GAAUA,IACbA,EAAS,GAEJsY,OAAO0D,OAAOhc,GA+EvB,QAASob,YAAYpb,EAAQD,GAC3B,GAAIuY,OAAOC,SAASvY,GAClB,MAAOA,GAAOa,MAEhB,IAA2B,mBAAhB8a,cAA6D,kBAAvBA,aAAYgB,SACxDhB,YAAYgB,OAAO3c,IAAWA,YAAkB2b,cACnD,MAAO3b,GAAOob,UAEM,iBAAXpb,KACTA,EAAS,GAAKA,EAGhB,IAAIE,GAAMF,EAAOa,MACjB,IAAY,IAARX,EAAW,MAAO,EAItB,KADA,GAAID,IAAc,IAEhB,OAAQF,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,MAAOG,EACT,KAAK,OACL,IAAK,QACL,SAAK,GACH,MAAO0c,aAAY5c,GAAQa,MAC7B,KAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAa,GAANX,CACT,KAAK,MACH,MAAOA,KAAQ,CACjB,KAAK,SACH,MAAO2c,eAAc7c,GAAQa,MAC/B,SACE,GAAIZ,EAAa,MAAO2c,aAAY5c,GAAQa,MAC5Cd,IAAY,GAAKA,GAAU0D,cAC3BxD,GAAc,GAMtB,QAAS6c,cAAc9c,EAAUD,EAAOG,GACtC,GAAID,IAAc,CAclB,SALc,KAAVF,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQF,KAAKgB,OACf,MAAO,EAOT,SAJY,KAARX,GAAqBA,EAAML,KAAKgB,UAClCX,EAAML,KAAKgB,QAGTX,GAAO,EACT,MAAO,EAOT,IAHAA,KAAS,EACTH,KAAW,EAEPG,GAAOH,EACT,MAAO,EAKT,KAFKC,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,MAAO+c,UAASld,KAAME,EAAOG,EAE/B,KAAK,OACL,IAAK,QACH,MAAO8c,WAAUnd,KAAME,EAAOG,EAEhC,KAAK,QACH,MAAO+c,YAAWpd,KAAME,EAAOG,EAEjC,KAAK,SACL,IAAK,SACH,MAAOgd,aAAYrd,KAAME,EAAOG,EAElC,KAAK,SACH,MAAOid,aAAYtd,KAAME,EAAOG,EAElC,KAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAOkd,cAAavd,KAAME,EAAOG,EAEnC,SACE,GAAID,EAAa,KAAM,IAAIuO,WAAU,qBAAuBxO,EAC5DA,IAAYA,EAAW,IAAIyD,cAC3BxD,GAAc,GAStB,QAASod,MAAMrd,EAAGD,EAAGG,GACnB,GAAID,GAAID,EAAED,EACVC,GAAED,GAAKC,EAAEE,GACTF,EAAEE,GAAKD,EAmIT,QAASqd,sBAAsBtd,EAAQD,EAAKG,EAAYD,EAAUb,GAEhE,GAAsB,IAAlBY,EAAOa,OAAc,OAAO,CAmBhC,IAhB0B,gBAAfX,IACTD,EAAWC,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAa,aACtBA,GAAa,YAEfA,GAAcA,EACV+N,MAAM/N,KAERA,EAAad,EAAM,EAAKY,EAAOa,OAAS,GAItCX,EAAa,IAAGA,EAAaF,EAAOa,OAASX,GAC7CA,GAAcF,EAAOa,OAAQ,CAC/B,GAAIzB,EAAK,OAAO,CACXc,GAAaF,EAAOa,OAAS,MAC7B,IAAIX,EAAa,EAAG,CACzB,IAAId,EACC,OAAO,CADHc,GAAa,EAUxB,GALmB,gBAARH,KACTA,EAAMuY,OAAOoD,KAAK3b,EAAKE,IAIrBqY,OAAOC,SAASxY,GAElB,MAAmB,KAAfA,EAAIc,QACC,EAEF0c,aAAavd,EAAQD,EAAKG,EAAYD,EAAUb,EAClD,IAAmB,gBAARW,GAEhB,MADAA,IAAY,IACRuY,OAAOgD,qBACiC,kBAAjCL,YAAWzW,UAAUnD,QAC1BjC,EACK6b,WAAWzW,UAAUnD,QAAQT,KAAKZ,EAAQD,EAAKG,GAE/C+a,WAAWzW,UAAUgZ,YAAY5c,KAAKZ,EAAQD,EAAKG,GAGvDqd,aAAavd,GAAUD,GAAOG,EAAYD,EAAUb,EAG7D,MAAM,IAAIoP,WAAU,wCAGtB,QAAS+O,cAAcvd,EAAKD,EAAKG,EAAYD,EAAUb,GAmBrD,QAASoB,GAAMR,EAAKD,GAClB,MAAkB,KAAdK,EACKJ,EAAID,GAEJC,EAAIyd,aAAa1d,EAAIK,GAtBhC,GAAIA,GAAY,EACZC,EAAYL,EAAIa,OAChBV,EAAYJ,EAAIc,MAEpB,QAAiB,KAAbZ,IACFA,EAAWkU,OAAOlU,GAAUwD,cACX,SAAbxD,GAAoC,UAAbA,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAID,EAAIa,OAAS,GAAKd,EAAIc,OAAS,EACjC,OAAO,CAETT,GAAY,EACZC,GAAa,EACbF,GAAa,EACbD,GAAc,EAYlB,GAAII,EACJ,IAAIlB,EAAK,CACP,GAAIgN,IAAa,CACjB,KAAK9L,EAAIJ,EAAYI,EAAID,EAAWC,IAClC,GAAIE,EAAKR,EAAKM,KAAOE,EAAKT,EAAKqM,KAAe,EAAK,EAAI9L,EAAI8L,GAAA,CAEzD,GADIA,KAAe,IAAIA,EAAa9L,GAChCA,EAAI8L,EAAa,IAAMjM,EAAW,MAAOiM,GAAahM,MAEtDgM,MAAe,IAAI9L,GAAKA,EAAI8L,GAChCA,GAAa,MAKjB,KADIlM,EAAaC,EAAYE,IAAWH,EAAaG,EAAYF,GAC5DG,EAAIJ,EAAYI,GAAK,EAAGA,IAAK,CAEhC,IAAK,GADD+C,IAAQ,EACH1C,EAAI,EAAGA,EAAIR,EAAWQ,IAC7B,GAAIH,EAAKR,EAAKM,EAAIK,KAAOH,EAAKT,EAAKY,GAAI,CACrC0C,GAAQ,CACR,OAGJ,GAAIA,EAAO,MAAO/C,GAItB,OAAO,EAeT,QAASod,UAAU1d,EAAKD,EAAQG,EAAQD,GACtCC,EAASkU,OAAOlU,IAAW,CAC3B,IAAId,GAAYY,EAAIa,OAASX,CACxBD,IAGHA,EAASmU,OAAOnU,GACZA,EAASb,IACXa,EAASb,IAJXa,EAASb,CASX,IAAIoB,GAAST,EAAOc,MACpB,IAAIL,EAAS,IAAM,EAAG,KAAM,IAAIgO,WAAU,qBAEtCvO,GAASO,EAAS,IACpBP,EAASO,EAAS,EAEpB,KAAK,GAAIJ,GAAI,EAAGA,EAAIH,IAAUG,EAAG,CAC/B,GAAIC,GAASsd,SAAS5d,EAAOuD,OAAW,EAAJlD,EAAO,GAAI,GAC/C,IAAI6N,MAAM5N,GAAS,MAAOD,EAC1BJ,GAAIE,EAASE,GAAKC,EAEpB,MAAOD,GAGT,QAASwd,WAAW5d,EAAKD,EAAQG,EAAQD,GACvC,MAAO4d,YAAWjB,YAAY7c,EAAQC,EAAIa,OAASX,GAASF,EAAKE,EAAQD,GAG3E,QAAS6d,YAAY9d,EAAKD,EAAQG,EAAQD,GACxC,MAAO4d,YAAWE,aAAahe,GAASC,EAAKE,EAAQD,GAGvD,QAAS+d,aAAahe,EAAKD,EAAQG,EAAQD,GACzC,MAAO6d,YAAW9d,EAAKD,EAAQG,EAAQD,GAGzC,QAASge,aAAaje,EAAKD,EAAQG,EAAQD,GACzC,MAAO4d,YAAWhB,cAAc9c,GAASC,EAAKE,EAAQD,GAGxD,QAASie,WAAWle,EAAKD,EAAQG,EAAQD,GACvC,MAAO4d,YAAWM,eAAepe,EAAQC,EAAIa,OAASX,GAASF,EAAKE,EAAQD,GAkF9E,QAASkd,aAAand,EAAKD,EAAOG,GAChC,MAAc,KAAVH,GAAeG,IAAQF,EAAIa,OACtBud,OAAOC,cAAcre,GAErBoe,OAAOC,cAAcre,EAAI8M,MAAM/M,EAAOG,IAIjD,QAAS8c,WAAWhd,EAAKD,EAAOG,GAC9BA,EAAMoI,KAAKgW,IAAIte,EAAIa,OAAQX,EAI3B,KAHA,GAAID,MAEAb,EAAIW,EACDX,EAAIc,GAAK,CACd,GAAIM,GAAYR,EAAIZ,GAChBgB,EAAY,KACZC,EAAoBG,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,CAEJ,IAAIpB,EAAIiB,GAAoBH,EAAK,CAC/B,GAAIC,GAAYG,EAAW8L,EAAY/I,CAEvC,QAAQhD,GACN,IAAK,GACCG,EAAY,MACdJ,EAAYI,EAEd,MACF,KAAK,GACHL,EAAaH,EAAIZ,EAAI,GACO,OAAV,IAAbe,KACHkD,GAA6B,GAAZ7C,IAAqB,EAAoB,GAAbL,EACzCkD,EAAgB,MAClBjD,EAAYiD,GAGhB,MACF,KAAK,GACHlD,EAAaH,EAAIZ,EAAI,GACrBkB,EAAYN,EAAIZ,EAAI,GACQ,OAAV,IAAbe,IAAsD,OAAV,IAAZG,KACnC+C,GAA6B,GAAZ7C,IAAoB,IAAoB,GAAbL,IAAsB,EAAmB,GAAZG,EACrE+C,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEjD,EAAYiD,GAGhB,MACF,KAAK,GACHlD,EAAaH,EAAIZ,EAAI,GACrBkB,EAAYN,EAAIZ,EAAI,GACpBgN,EAAapM,EAAIZ,EAAI,GACO,OAAV,IAAbe,IAAsD,OAAV,IAAZG,IAAsD,OAAV,IAAb8L,KAClE/I,GAA6B,GAAZ7C,IAAoB,IAAqB,GAAbL,IAAsB,IAAmB,GAAZG,IAAqB,EAAoB,GAAb8L,EAClG/I,EAAgB,OAAUA,EAAgB,UAC5CjD,EAAYiD,KAMJ,OAAdjD,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbH,EAAI4E,KAAKzE,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBH,EAAI4E,KAAKzE,GACThB,GAAKiB,EAGP,MAAOke,uBAAsBte,GAQ/B,QAASse,uBAAuBve,GAC9B,GAAID,GAAMC,EAAWa,MACrB,IAAId,GAAOye,qBACT,MAAOrK,QAAOsK,aAAalX,MAAM4M,OAAQnU,EAM3C,KAFA,GAAIE,GAAM,GACND,EAAI,EACDA,EAAIF,GACTG,GAAOiU,OAAOsK,aAAalX,MACzB4M,OACAnU,EAAW8M,MAAM7M,EAAGA,GAAKue,sBAG7B,OAAOte,GAGT,QAAS+c,YAAYjd,EAAKD,EAAOG,GAC/B,GAAID,GAAM,EACVC,GAAMoI,KAAKgW,IAAIte,EAAIa,OAAQX,EAE3B,KAAK,GAAId,GAAIW,EAAOX,EAAIc,IAAOd,EAC7Ba,GAAOkU,OAAOsK,aAAsB,IAATze,EAAIZ,GAEjC,OAAOa,GAGT,QAASid,aAAald,EAAKD,EAAOG,GAChC,GAAID,GAAM,EACVC,GAAMoI,KAAKgW,IAAIte,EAAIa,OAAQX,EAE3B,KAAK,GAAId,GAAIW,EAAOX,EAAIc,IAAOd,EAC7Ba,GAAOkU,OAAOsK,aAAaze,EAAIZ,GAEjC,OAAOa,GAGT,QAAS8c,UAAU/c,EAAKD,EAAOG,GAC7B,GAAID,GAAMD,EAAIa,SAETd,GAASA,EAAQ,KAAGA,EAAQ,KAC5BG,GAAOA,EAAM,GAAKA,EAAMD,KAAKC,EAAMD,EAGxC,KAAK,GADDb,GAAM,GACDoB,EAAIT,EAAOS,EAAIN,IAAOM,EAC7BpB,GAAOsf,MAAM1e,EAAIQ,GAEnB,OAAOpB,GAGT,QAASge,cAAcpd,EAAKD,EAAOG,GAGjC,IAAK,GAFDD,GAAQD,EAAI8M,MAAM/M,EAAOG,GACzBd,EAAM,GACDoB,EAAI,EAAGA,EAAIP,EAAMY,OAAQL,GAAK,EACrCpB,GAAO+U,OAAOsK,aAAaxe,EAAMO,GAAoB,IAAfP,EAAMO,EAAI,GAElD,OAAOpB,GA0CT,QAASuf,aAAa3e,EAAQD,EAAKG,GACjC,GAAKF,EAAS,IAAO,GAAKA,EAAS,EAAG,KAAM,IAAIwb,YAAW,qBAC3D,IAAIxb,EAASD,EAAMG,EAAQ,KAAM,IAAIsb,YAAW,yCA+JlD,QAASoD,UAAU5e,EAAKD,EAAOG,EAAQD,EAAKb,EAAKoB,GAC/C,IAAK8X,OAAOC,SAASvY,GAAM,KAAM,IAAIwO,WAAU,8CAC/C,IAAIzO,EAAQX,GAAOW,EAAQS,EAAK,KAAM,IAAIgb,YAAW,oCACrD,IAAItb,EAASD,EAAMD,EAAIa,OAAQ,KAAM,IAAI2a,YAAW,sBAkDtD,QAASqD,mBAAmB7e,EAAKD,EAAOG,EAAQD,GAC1CF,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,EACxC,KAAK,GAAIX,GAAI,EAAGoB,EAAI8H,KAAKgW,IAAIte,EAAIa,OAASX,EAAQ,GAAId,EAAIoB,IAAKpB,EAC7DY,EAAIE,EAASd,IAAMW,EAAS,KAAS,GAAKE,EAAeb,EAAI,EAAIA,MAClC,GAA5Ba,EAAeb,EAAI,EAAIA,GA8B9B,QAAS0f,mBAAmB9e,EAAKD,EAAOG,EAAQD,GAC1CF,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,EAC5C,KAAK,GAAIX,GAAI,EAAGoB,EAAI8H,KAAKgW,IAAIte,EAAIa,OAASX,EAAQ,GAAId,EAAIoB,IAAKpB,EAC7DY,EAAIE,EAASd,GAAMW,IAAuC,GAA5BE,EAAeb,EAAI,EAAIA,GAAU,IAmJnE,QAAS2f,cAAc/e,EAAKD,EAAOG,EAAQD,EAAKb,EAAKoB,GACnD,GAAIN,EAASD,EAAMD,EAAIa,OAAQ,KAAM,IAAI2a,YAAW,qBACpD,IAAItb,EAAS,EAAG,KAAM,IAAIsb,YAAW,sBAGvC,QAASwD,YAAYhf,EAAKD,EAAOG,EAAQD,EAAcb,GAKrD,MAJKA,IACH2f,aAAa/e,EAAKD,EAAOG,EAAQ,EAAG,uBAAwB,uBAE9D+e,QAAQ7C,MAAMpc,EAAKD,EAAOG,EAAQD,EAAc,GAAI,GAC7CC,EAAS,EAWlB,QAASgf,aAAalf,EAAKD,EAAOG,EAAQD,EAAcb,GAKtD,MAJKA,IACH2f,aAAa/e,EAAKD,EAAOG,EAAQ,EAAG,wBAAyB,wBAE/D+e,QAAQ7C,MAAMpc,EAAKD,EAAOG,EAAQD,EAAc,GAAI,GAC7CC,EAAS,EAgIlB,QAASif,aAAanf,GAIpB,GAFAA,EAAMof,WAAWpf,GAAKmV,QAAQkK,kBAAmB,IAE7Crf,EAAIa,OAAS,EAAG,MAAO,EAE3B,MAAOb,EAAIa,OAAS,IAAM,GACxBb,GAAY,GAEd,OAAOA,GAGT,QAASof,YAAYpf,GACnB,MAAIA,GAAIyF,KAAazF,EAAIyF,OAClBzF,EAAImV,QAAQ,aAAc,IAGnC,QAASuJ,OAAO1e,GACd,MAAIA,GAAI,GAAW,IAAMA,EAAEiK,SAAS,IAC7BjK,EAAEiK,SAAS,IAGpB,QAAS2S,aAAa5c,EAAQD,GAC5BA,EAAQA,GAAS,EAAA,CAMjB,KAAK,GALDG,GACAD,EAASD,EAAOa,OAChBzB,EAAgB,KAChBoB,KAEKJ,EAAI,EAAGA,EAAIH,IAAUG,EAAG,CAI/B,GAHAF,EAAYF,EAAOsf,WAAWlf,GAG1BF,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKd,EAAe,CAElB,GAAIc,EAAY,MAAQ,EAEjBH,GAAS,IAAK,GAAIS,EAAMqE,KAAK,IAAM,IAAM,IAC9C,UACK,GAAIzE,EAAI,IAAMH,EAAQ,EAEtBF,GAAS,IAAK,GAAIS,EAAMqE,KAAK,IAAM,IAAM,IAC9C,UAIFzF,EAAgBc,CAEhB,UAIF,GAAIA,EAAY,MAAQ,EACjBH,GAAS,IAAK,GAAIS,EAAMqE,KAAK,IAAM,IAAM,KAC9CzF,EAAgBc,CAChB,UAIFA,GAAad,EAAgB,OAAU,GAAKc,EAAY,OAAU,UACzDd,KAEJW,GAAS,IAAK,GAAIS,EAAMqE,KAAK,IAAM,IAAM,IAMhD,IAHAzF,EAAgB,KAGZc,EAAY,IAAM,CACpB,IAAKH,GAAS,GAAK,EAAG,KACtBS,GAAMqE,KAAK3E,OACN,IAAIA,EAAY,KAAO,CAC5B,IAAKH,GAAS,GAAK,EAAG,KACtBS,GAAMqE,KACJ3E,GAAa,EAAM,IACP,GAAZA,EAAmB,SAEhB,IAAIA,EAAY,MAAS,CAC9B,IAAKH,GAAS,GAAK,EAAG,KACtBS,GAAMqE,KACJ3E,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,CAAA,KAAIA,EAAY,SASrB,KAAM,IAAIO,OAAM,qBARhB,KAAKV,GAAS,GAAK,EAAG,KACtBS,GAAMqE,KACJ3E,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,MAAOM,GAGT,QAASud,cAAc/d,GAErB,IAAK,GADDD,MACKG,EAAI,EAAGA,EAAIF,EAAIa,SAAUX,EAEhCH,EAAU8E,KAAyB,IAApB7E,EAAIsf,WAAWpf,GAEhC,OAAOH,GAGT,QAASoe,gBAAgBne,EAAKD,GAG5B,IAAK,GAFDG,GAAGD,EAAIb,EACPoB,KACKJ,EAAI,EAAGA,EAAIJ,EAAIa,WACjBd,GAAS,GAAK,KADaK,EAGhCF,EAAIF,EAAIsf,WAAWlf,GACnBH,EAAKC,GAAK,EACVd,EAAKc,EAAI,IACTM,EAAUqE,KAAKzF,GACfoB,EAAUqE,KAAK5E,EAGjB,OAAOO,GAGT,QAASqc,eAAe7c,GACtB,MAAOoe,QAAOmB,YAAYJ,YAAYnf,IAGxC,QAAS6d,YAAY7d,EAAKD,EAAKG,EAAQD,GACrC,IAAK,GAAIb,GAAI,EAAGA,EAAIa,KACbb,EAAIc,GAAUH,EAAIc,QAAYzB,GAAKY,EAAIa,UADhBzB,EAE5BW,EAAIX,EAAIc,GAAUF,EAAIZ,EAExB,OAAOA,GAGT,QAASod,OAAOxc,GACd,MAAOA,KAAQA,EAjvDjB,GAAIoe,QAAS7d,QAAQ,aACjB0e,QAAU1e,QAAQ,WAClB2N,QAAU3N,QAAQ,UAEtBlB,SAAQiZ,OAASA,OACjBjZ,QAAQqd,WAAaA,WACrBrd,QAAQmgB,kBAAoB,GA0B5BlH,OAAOgD,wBAAqD,KAA/B3b,OAAO2b,oBAChC3b,OAAO2b,oBACPN,oBAKJ3b,QAAQgc,WAAaA,aAkErB/C,OAAOmH,SAAW,KAGlBnH,OAAOoH,SAAW,SAAU1f,GAE1B,MADAA,GAAI+U,UAAYuD,OAAO9T,UAChBxE,GA2BTsY,OAAOoD,KAAO,SAAU1b,EAAOD,EAAkBG,GAC/C,MAAOwb,MAAK,KAAM1b,EAAOD,EAAkBG,IAGzCoY,OAAOgD,sBACThD,OAAO9T,UAAUuQ,UAAYkG,WAAWzW,UACxC8T,OAAOvD,UAAYkG,WACG,mBAAX0E,SAA0BA,OAAOC,SACxCtH,OAAOqH,OAAOC,WAAatH,QAE7BzW,OAAO4F,eAAe6Q,OAAQqH,OAAOC,SACnC/c,MAAO,KACP6E,cAAc,KAiCpB4Q,OAAO0D,MAAQ,SAAUhc,EAAMD,EAAMG,GACnC,MAAO8b,OAAM,KAAMhc,EAAMD,EAAMG,IAiBjCoY,OAAOmD,YAAc,SAAUzb,GAC7B,MAAOyb,aAAY,KAAMzb,IAK3BsY,OAAOuH,gBAAkB,SAAU7f,GACjC,MAAOyb,aAAY,KAAMzb,IAiH3BsY,OAAOC,SAAW,SAAmBvY,GACnC,QAAe,MAALA,IAAaA,EAAE8f,YAG3BxH,OAAOyH,QAAU,SAAkB/f,EAAGD,GACpC,IAAKuY,OAAOC,SAASvY,KAAOsY,OAAOC,SAASxY,GAC1C,KAAM,IAAIyO,WAAU,4BAGtB,IAAIxO,IAAMD,EAAG,MAAO,EAKpB,KAAK,GAHDG,GAAIF,EAAEa,OACNZ,EAAIF,EAAEc,OAEDzB,EAAI,EAAGoB,EAAM8H,KAAKgW,IAAIpe,EAAGD,GAAIb,EAAIoB,IAAOpB,EAC/C,GAAIY,EAAEZ,KAAOW,EAAEX,GAAI,CACjBc,EAAIF,EAAEZ,GACNa,EAAIF,EAAEX,EACN,OAIJ,MAAIc,GAAID,GAAU,EACdA,EAAIC,EAAU,EACX,GAGToY,OAAO6D,WAAa,SAAqBnc,GACvC,OAAQmU,OAAOnU,GAAUyD,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,CACT,SACE,OAAO,IAIb6U,OAAOlR,OAAS,SAAiBpH,EAAMD,GACrC,IAAKmO,QAAQlO,GACX,KAAM,IAAIwO,WAAU,8CAGtB,IAAoB,IAAhBxO,EAAKa,OACP,MAAOyX,QAAO0D,MAAM,EAGtB,IAAI9b,EACJ,QAAe,KAAXH,EAEF,IADAA,EAAS,EACJG,EAAI,EAAGA,EAAIF,EAAKa,SAAUX,EAC7BH,GAAUC,EAAKE,GAAGW,MAItB,IAAIZ,GAASqY,OAAOmD,YAAY1b,GAC5BX,EAAM,CACV,KAAKc,EAAI,EAAGA,EAAIF,EAAKa,SAAUX,EAAG,CAChC,GAAIM,GAAMR,EAAKE,EACf,KAAKoY,OAAOC,SAAS/X,GACnB,KAAM,IAAIgO,WAAU,8CAEtBhO,GAAI8b,KAAKrc,EAAQb,GACjBA,GAAOoB,EAAIK,OAEb,MAAOZ,IA8CTqY,OAAO8C,WAAaA,WA0EpB9C,OAAO9T,UAAUsb,WAAY,EAQ7BxH,OAAO9T,UAAUwb,OAAS,WACxB,GAAIhgB,GAAMH,KAAKgB,MACf,IAAIb,EAAM,IAAM,EACd,KAAM,IAAIwb,YAAW,4CAEvB,KAAK,GAAIzb,GAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5Bsd,KAAKxd,KAAME,EAAGA,EAAI,EAEpB,OAAOF,OAGTyY,OAAO9T,UAAUyb,OAAS,WACxB,GAAIjgB,GAAMH,KAAKgB,MACf,IAAIb,EAAM,IAAM,EACd,KAAM,IAAIwb,YAAW,4CAEvB,KAAK,GAAIzb,GAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5Bsd,KAAKxd,KAAME,EAAGA,EAAI,GAClBsd,KAAKxd,KAAME,EAAI,EAAGA,EAAI,EAExB,OAAOF,OAGTyY,OAAO9T,UAAU0b,OAAS,WACxB,GAAIlgB,GAAMH,KAAKgB,MACf,IAAIb,EAAM,IAAM,EACd,KAAM,IAAIwb,YAAW,4CAEvB,KAAK,GAAIzb,GAAI,EAAGA,EAAIC,EAAKD,GAAK,EAC5Bsd,KAAKxd,KAAME,EAAGA,EAAI,GAClBsd,KAAKxd,KAAME,EAAI,EAAGA,EAAI,GACtBsd,KAAKxd,KAAME,EAAI,EAAGA,EAAI,GACtBsd,KAAKxd,KAAME,EAAI,EAAGA,EAAI,EAExB,OAAOF,OAGTyY,OAAO9T,UAAUyF,SAAW,WAC1B,GAAIjK,GAAuB,EAAdH,KAAKgB,MAClB,OAAe,KAAXb,EAAqB,GACA,IAArBgC,UAAUnB,OAAqBmc,UAAUnd,KAAM,EAAGG,GAC/C8c,aAAavV,MAAM1H,KAAMmC,YAGlCsW,OAAO9T,UAAU2b,OAAS,SAAiBngB,GACzC,IAAKsY,OAAOC,SAASvY,GAAI,KAAM,IAAIwO,WAAU,4BAC7C,OAAI3O,QAASG,GACsB,IAA5BsY,OAAOyH,QAAQlgB,KAAMG,IAG9BsY,OAAO9T,UAAU6H,QAAU,WACzB,GAAIrM,GAAM,GACND,EAAMV,QAAQmgB,iBAKlB,OAJI3f,MAAKgB,OAAS,IAChBb,EAAMH,KAAKoK,SAAS,MAAO,EAAGlK,GAAK4R,MAAM,SAASpP,KAAK,KACnD1C,KAAKgB,OAASd,IAAKC,GAAO,UAEzB,WAAaA,EAAM,KAG5BsY,OAAO9T,UAAUub,QAAU,SAAkB/f,EAAQD,EAAOG,EAAKD,EAAWb,GAC1E,IAAKkZ,OAAOC,SAASvY,GACnB,KAAM,IAAIwO,WAAU,4BAgBtB,QAbc,KAAVzO,IACFA,EAAQ,OAEE,KAARG,IACFA,EAAMF,EAASA,EAAOa,OAAS,OAEf,KAAdZ,IACFA,EAAY,OAEE,KAAZb,IACFA,EAAUS,KAAKgB,QAGbd,EAAQ,GAAKG,EAAMF,EAAOa,QAAUZ,EAAY,GAAKb,EAAUS,KAAKgB,OACtE,KAAM,IAAI2a,YAAW,qBAGvB,IAAIvb,GAAab,GAAWW,GAASG,EACnC,MAAO,EAET,IAAID,GAAab,EACf,OAAO,CAET,IAAIW,GAASG,EACX,MAAO,EAQT,IALAH,KAAW,EACXG,KAAS,EACTD,KAAe,EACfb,KAAa,EAETS,OAASG,EAAQ,MAAO,EAS5B,KAAK,GAPDQ,GAAIpB,EAAUa,EACdG,EAAIF,EAAMH,EACVM,EAAMiI,KAAKgW,IAAI9d,EAAGJ,GAElBD,EAAWN,KAAKiN,MAAM7M,EAAWb,GACjCkB,EAAaN,EAAO8M,MAAM/M,EAAOG,GAE5BkM,EAAI,EAAGA,EAAI/L,IAAO+L,EACzB,GAAIjM,EAASiM,KAAO9L,EAAW8L,GAAI,CACjC5L,EAAIL,EAASiM,GACbhM,EAAIE,EAAW8L,EACf,OAIJ,MAAI5L,GAAIJ,GAAU,EACdA,EAAII,EAAU,EACX,GA6HT8X,OAAO9T,UAAU4b,SAAW,SAAmBpgB,EAAKD,EAAYG,GAC9D,MAAOL,MAAKwB,QAAQrB,EAAKD,EAAYG,MAAc,GAGrDoY,OAAO9T,UAAUnD,QAAU,SAAkBrB,EAAKD,EAAYG,GAC5D,MAAOod,sBAAqBzd,KAAMG,EAAKD,EAAYG,GAAU,IAG/DoY,OAAO9T,UAAUgZ,YAAc,SAAsBxd,EAAKD,EAAYG,GACpE,MAAOod,sBAAqBzd,KAAMG,EAAKD,EAAYG,GAAU,IAkD/DoY,OAAO9T,UAAU4X,MAAQ,SAAgBpc,EAAQD,EAAQG,EAAQD,GAE/D,OAAe,KAAXF,EACFE,EAAW,OACXC,EAASL,KAAKgB,OACdd,EAAS,MAEJ,QAAe,KAAXG,GAA0C,gBAAXH,GACxCE,EAAWF,EACXG,EAASL,KAAKgB,OACdd,EAAS,MAEJ,CAAA,IAAIsgB,SAAStgB,GAWlB,KAAM,IAAIU,OACR,0EAXFV,IAAkB,EACdsgB,SAASngB,IACXA,GAAkB,MACD,KAAbD,IAAwBA,EAAW,UAEvCA,EAAWC,EACXA,MAAS,IASb,GAAId,GAAYS,KAAKgB,OAASd,CAG9B,SAFe,KAAXG,GAAwBA,EAASd,KAAWc,EAASd,GAEpDY,EAAOa,OAAS,IAAMX,EAAS,GAAKH,EAAS,IAAOA,EAASF,KAAKgB,OACrE,KAAM,IAAI2a,YAAW,yCAGlBvb,KAAUA,EAAW,OAG1B,KADA,GAAIO,IAAc,IAEhB,OAAQP,GACN,IAAK,MACH,MAAOyd,UAAS7d,KAAMG,EAAQD,EAAQG,EAExC,KAAK,OACL,IAAK,QACH,MAAO0d,WAAU/d,KAAMG,EAAQD,EAAQG,EAEzC,KAAK,QACH,MAAO4d,YAAWje,KAAMG,EAAQD,EAAQG,EAE1C,KAAK,SACL,IAAK,SACH,MAAO8d,aAAYne,KAAMG,EAAQD,EAAQG,EAE3C,KAAK,SAEH,MAAO+d,aAAYpe,KAAMG,EAAQD,EAAQG,EAE3C,KAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,MAAOge,WAAUre,KAAMG,EAAQD,EAAQG,EAEzC,SACE,GAAIM,EAAa,KAAM,IAAIgO,WAAU,qBAAuBvO,EAC5DA,IAAY,GAAKA,GAAUwD,cAC3BjD,GAAc,IAKtB8X,OAAO9T,UAAU0T,OAAS,WACxB,OACErS,KAAM,SACN4W,KAAM5P,MAAMrI,UAAUsI,MAAMlM,KAAKf,KAAKygB,MAAQzgB,KAAM,IAwFxD,IAAI2e,sBAAuB,IA8D3BlG,QAAO9T,UAAUsI,MAAQ,SAAgB9M,EAAOD,GAC9C,GAAIG,GAAML,KAAKgB,MACfb,KAAUA,EACVD,MAAc,KAARA,EAAoBG,IAAQH,EAE9BC,EAAQ,GACVA,GAASE,EACLF,EAAQ,IAAGA,EAAQ,IACdA,EAAQE,IACjBF,EAAQE,GAGNH,EAAM,GACRA,GAAOG,EACHH,EAAM,IAAGA,EAAM,IACVA,EAAMG,IACfH,EAAMG,GAGJH,EAAMC,IAAOD,EAAMC,EAEvB,IAAIC,EACJ,IAAIqY,OAAOgD,oBACTrb,EAASJ,KAAKsb,SAASnb,EAAOD,GAC9BE,EAAO8U,UAAYuD,OAAO9T,cACrB,CACL,GAAIpF,GAAWW,EAAMC,CACrBC,GAAS,GAAIqY,QAAOlZ,MAAU,GAC9B,KAAK,GAAIoB,GAAI,EAAGA,EAAIpB,IAAYoB,EAC9BP,EAAOO,GAAKX,KAAKW,EAAIR,GAIzB,MAAOC,IAWTqY,OAAO9T,UAAU+b,WAAa,SAAqBvgB,EAAQD,EAAYG,GACrEF,GAAkB,EAClBD,GAA0B,EACrBG,GAAUye,YAAY3e,EAAQD,EAAYF,KAAKgB,OAKpD,KAHA,GAAIZ,GAAMJ,KAAKG,GACXZ,EAAM,EACNoB,EAAI,IACCA,EAAIT,IAAeX,GAAO,MACjCa,GAAOJ,KAAKG,EAASQ,GAAKpB,CAG5B,OAAOa,IAGTqY,OAAO9T,UAAUgc,WAAa,SAAqBxgB,EAAQD,EAAYG,GACrEF,GAAkB,EAClBD,GAA0B,EACrBG,GACHye,YAAY3e,EAAQD,EAAYF,KAAKgB,OAKvC,KAFA,GAAIZ,GAAMJ,KAAKG,IAAWD,GACtBX,EAAM,EACHW,EAAa,IAAMX,GAAO,MAC/Ba,GAAOJ,KAAKG,IAAWD,GAAcX,CAGvC,OAAOa,IAGTqY,OAAO9T,UAAUic,UAAY,SAAoBzgB,EAAQD,GAEvD,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpChB,KAAKG,IAGdsY,OAAO9T,UAAUkc,aAAe,SAAuB1gB,EAAQD,GAE7D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpChB,KAAKG,GAAWH,KAAKG,EAAS,IAAM,GAG7CsY,OAAO9T,UAAUiZ,aAAe,SAAuBzd,EAAQD,GAE7D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACnChB,KAAKG,IAAW,EAAKH,KAAKG,EAAS,IAG7CsY,OAAO9T,UAAUmc,aAAe,SAAuB3gB,EAAQD,GAG7D,MAFKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,SAElChB,KAAKG,GACTH,KAAKG,EAAS,IAAM,EACpBH,KAAKG,EAAS,IAAM,IACD,SAAnBH,KAAKG,EAAS,IAGrBsY,OAAO9T,UAAUoc,aAAe,SAAuB5gB,EAAQD,GAG7D,MAFKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QAEpB,SAAfhB,KAAKG,IACTH,KAAKG,EAAS,IAAM,GACrBH,KAAKG,EAAS,IAAM,EACrBH,KAAKG,EAAS,KAGlBsY,OAAO9T,UAAUqc,UAAY,SAAoB7gB,EAAQD,EAAYG,GACnEF,GAAkB,EAClBD,GAA0B,EACrBG,GAAUye,YAAY3e,EAAQD,EAAYF,KAAKgB,OAKpD,KAHA,GAAIZ,GAAMJ,KAAKG,GACXZ,EAAM,EACNoB,EAAI,IACCA,EAAIT,IAAeX,GAAO,MACjCa,GAAOJ,KAAKG,EAASQ,GAAKpB,CAM5B,OAJAA,IAAO,IAEHa,GAAOb,IAAKa,GAAOqI,KAAKwY,IAAI,EAAG,EAAI/gB,IAEhCE,GAGTqY,OAAO9T,UAAUuc,UAAY,SAAoB/gB,EAAQD,EAAYG,GACnEF,GAAkB,EAClBD,GAA0B,EACrBG,GAAUye,YAAY3e,EAAQD,EAAYF,KAAKgB,OAKpD,KAHA,GAAIZ,GAAIF,EACJX,EAAM,EACNoB,EAAMX,KAAKG,IAAWC,GACnBA,EAAI,IAAMb,GAAO,MACtBoB,GAAOX,KAAKG,IAAWC,GAAKb,CAM9B,OAJAA,IAAO,IAEHoB,GAAOpB,IAAKoB,GAAO8H,KAAKwY,IAAI,EAAG,EAAI/gB,IAEhCS,GAGT8X,OAAO9T,UAAUwc,SAAW,SAAmBhhB,EAAQD,GAErD,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACtB,IAAfhB,KAAKG,IACF,IAAOH,KAAKG,GAAU,IAAK,EADAH,KAAKG,IAI3CsY,OAAO9T,UAAUyc,YAAc,SAAsBjhB,EAAQD,GACtDA,GAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,OAC3C,IAAIX,GAAML,KAAKG,GAAWH,KAAKG,EAAS,IAAM,CAC9C,OAAc,OAANE,EAAsB,WAANA,EAAmBA,GAG7CoY,OAAO9T,UAAU0c,YAAc,SAAsBlhB,EAAQD,GACtDA,GAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,OAC3C,IAAIX,GAAML,KAAKG,EAAS,GAAMH,KAAKG,IAAW,CAC9C,OAAc,OAANE,EAAsB,WAANA,EAAmBA,GAG7CoY,OAAO9T,UAAU2c,YAAc,SAAsBnhB,EAAQD,GAG3D,MAFKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QAEnChB,KAAKG,GACVH,KAAKG,EAAS,IAAM,EACpBH,KAAKG,EAAS,IAAM,GACpBH,KAAKG,EAAS,IAAM,IAGzBsY,OAAO9T,UAAU4c,YAAc,SAAsBphB,EAAQD,GAG3D,MAFKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QAEnChB,KAAKG,IAAW,GACrBH,KAAKG,EAAS,IAAM,GACpBH,KAAKG,EAAS,IAAM,EACpBH,KAAKG,EAAS,IAGnBsY,OAAO9T,UAAU6c,YAAc,SAAsBrhB,EAAQD,GAE3D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpCoe,QAAQqC,KAAKzhB,KAAMG,GAAQ,EAAM,GAAI,IAG9CsY,OAAO9T,UAAU+c,YAAc,SAAsBvhB,EAAQD,GAE3D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpCoe,QAAQqC,KAAKzhB,KAAMG,GAAQ,EAAO,GAAI,IAG/CsY,OAAO9T,UAAUgd,aAAe,SAAuBxhB,EAAQD,GAE7D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpCoe,QAAQqC,KAAKzhB,KAAMG,GAAQ,EAAM,GAAI,IAG9CsY,OAAO9T,UAAUid,aAAe,SAAuBzhB,EAAQD,GAE7D,MADKA,IAAU4e,YAAY3e,EAAQ,EAAGH,KAAKgB,QACpCoe,QAAQqC,KAAKzhB,KAAMG,GAAQ,EAAO,GAAI,IAS/CsY,OAAO9T,UAAUkd,YAAc,SAAsB1hB,EAAOD,EAAQG,EAAYD,GAI9E,GAHAD,GAASA,EACTD,GAAkB,EAClBG,GAA0B,GACrBD,EAAU,CACb,GAAIb,GAAWkJ,KAAKwY,IAAI,EAAG,EAAI5gB,GAAc,CAC7C0e,UAAS/e,KAAMG,EAAOD,EAAQG,EAAYd,EAAU,GAGtD,GAAIoB,GAAM,EACNJ,EAAI,CAER,KADAP,KAAKE,GAAkB,IAARC,IACNI,EAAIF,IAAeM,GAAO,MACjCX,KAAKE,EAASK,GAAMJ,EAAQQ,EAAO,GAGrC,OAAOT,GAASG,GAGlBoY,OAAO9T,UAAUmd,YAAc,SAAsB3hB,EAAOD,EAAQG,EAAYD,GAI9E,GAHAD,GAASA,EACTD,GAAkB,EAClBG,GAA0B,GACrBD,EAAU,CACb,GAAIb,GAAWkJ,KAAKwY,IAAI,EAAG,EAAI5gB,GAAc,CAC7C0e,UAAS/e,KAAMG,EAAOD,EAAQG,EAAYd,EAAU,GAGtD,GAAIoB,GAAIN,EAAa,EACjBE,EAAM,CAEV,KADAP,KAAKE,EAASS,GAAa,IAARR,IACVQ,GAAK,IAAMJ,GAAO,MACzBP,KAAKE,EAASS,GAAMR,EAAQI,EAAO,GAGrC,OAAOL,GAASG,GAGlBoY,OAAO9T,UAAUod,WAAa,SAAqB5hB,EAAOD,EAAQG,GAMhE,MALAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,IAAM,GACjDuY,OAAOgD,sBAAqBtb,EAAQsI,KAAKC,MAAMvI,IACpDH,KAAKE,GAAmB,IAARC,EACTD,EAAS,GAWlBuY,OAAO9T,UAAUqd,cAAgB,SAAwB7hB,EAAOD,EAAQG,GAUtE,MATAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,MAAQ,GACpDuY,OAAOgD,qBACTzb,KAAKE,GAAmB,IAARC,EAChBH,KAAKE,EAAS,GAAMC,IAAU,GAE9B6e,kBAAkBhf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAUsd,cAAgB,SAAwB9hB,EAAOD,EAAQG,GAUtE,MATAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,MAAQ,GACpDuY,OAAOgD,qBACTzb,KAAKE,GAAWC,IAAU,EAC1BH,KAAKE,EAAS,GAAc,IAARC,GAEpB6e,kBAAkBhf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAUlBuY,OAAO9T,UAAUud,cAAgB,SAAwB/hB,EAAOD,EAAQG,GAYtE,MAXAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,WAAY,GACxDuY,OAAOgD,qBACTzb,KAAKE,EAAS,GAAMC,IAAU,GAC9BH,KAAKE,EAAS,GAAMC,IAAU,GAC9BH,KAAKE,EAAS,GAAMC,IAAU,EAC9BH,KAAKE,GAAmB,IAARC,GAEhB8e,kBAAkBjf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAUwd,cAAgB,SAAwBhiB,EAAOD,EAAQG,GAYtE,MAXAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,WAAY,GACxDuY,OAAOgD,qBACTzb,KAAKE,GAAWC,IAAU,GAC1BH,KAAKE,EAAS,GAAMC,IAAU,GAC9BH,KAAKE,EAAS,GAAMC,IAAU,EAC9BH,KAAKE,EAAS,GAAc,IAARC,GAEpB8e,kBAAkBjf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAUyd,WAAa,SAAqBjiB,EAAOD,EAAQG,EAAYD,GAG5E,GAFAD,GAASA,EACTD,GAAkB,GACbE,EAAU,CACb,GAAIb,GAAQkJ,KAAKwY,IAAI,EAAG,EAAI5gB,EAAa,EAEzC0e,UAAS/e,KAAMG,EAAOD,EAAQG,EAAYd,EAAQ,GAAIA,GAGxD,GAAIoB,GAAI,EACJJ,EAAM,EACNC,EAAM,CAEV,KADAR,KAAKE,GAAkB,IAARC,IACNQ,EAAIN,IAAeE,GAAO,MAC7BJ,EAAQ,GAAa,IAARK,GAAsC,IAAzBR,KAAKE,EAASS,EAAI,KAC9CH,EAAM,GAERR,KAAKE,EAASS,IAAOR,EAAQI,GAAQ,GAAKC,EAAM,GAGlD,OAAON,GAASG,GAGlBoY,OAAO9T,UAAU0d,WAAa,SAAqBliB,EAAOD,EAAQG,EAAYD,GAG5E,GAFAD,GAASA,EACTD,GAAkB,GACbE,EAAU,CACb,GAAIb,GAAQkJ,KAAKwY,IAAI,EAAG,EAAI5gB,EAAa,EAEzC0e,UAAS/e,KAAMG,EAAOD,EAAQG,EAAYd,EAAQ,GAAIA,GAGxD,GAAIoB,GAAIN,EAAa,EACjBE,EAAM,EACNC,EAAM,CAEV,KADAR,KAAKE,EAASS,GAAa,IAARR,IACVQ,GAAK,IAAMJ,GAAO,MACrBJ,EAAQ,GAAa,IAARK,GAAsC,IAAzBR,KAAKE,EAASS,EAAI,KAC9CH,EAAM,GAERR,KAAKE,EAASS,IAAOR,EAAQI,GAAQ,GAAKC,EAAM,GAGlD,OAAON,GAASG,GAGlBoY,OAAO9T,UAAU2d,UAAY,SAAoBniB,EAAOD,EAAQG,GAO9D,MANAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,KAAM,KACjDuY,OAAOgD,sBAAqBtb,EAAQsI,KAAKC,MAAMvI,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCH,KAAKE,GAAmB,IAARC,EACTD,EAAS,GAGlBuY,OAAO9T,UAAU4d,aAAe,SAAuBpiB,EAAOD,EAAQG,GAUpE,MATAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,OAAQ,OACpDuY,OAAOgD,qBACTzb,KAAKE,GAAmB,IAARC,EAChBH,KAAKE,EAAS,GAAMC,IAAU,GAE9B6e,kBAAkBhf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAU6d,aAAe,SAAuBriB,EAAOD,EAAQG,GAUpE,MATAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,OAAQ,OACpDuY,OAAOgD,qBACTzb,KAAKE,GAAWC,IAAU,EAC1BH,KAAKE,EAAS,GAAc,IAARC,GAEpB6e,kBAAkBhf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAU8d,aAAe,SAAuBtiB,EAAOD,EAAQG,GAYpE,MAXAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,YAAY,YACxDuY,OAAOgD,qBACTzb,KAAKE,GAAmB,IAARC,EAChBH,KAAKE,EAAS,GAAMC,IAAU,EAC9BH,KAAKE,EAAS,GAAMC,IAAU,GAC9BH,KAAKE,EAAS,GAAMC,IAAU,IAE9B8e,kBAAkBjf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAGlBuY,OAAO9T,UAAU+d,aAAe,SAAuBviB,EAAOD,EAAQG,GAapE,MAZAF,IAASA,EACTD,GAAkB,EACbG,GAAU0e,SAAS/e,KAAMG,EAAOD,EAAQ,EAAG,YAAY,YACxDC,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCsY,OAAOgD,qBACTzb,KAAKE,GAAWC,IAAU,GAC1BH,KAAKE,EAAS,GAAMC,IAAU,GAC9BH,KAAKE,EAAS,GAAMC,IAAU,EAC9BH,KAAKE,EAAS,GAAc,IAARC,GAEpB8e,kBAAkBjf,KAAMG,EAAOD,GAAQ,GAElCA,EAAS,GAgBlBuY,OAAO9T,UAAUge,aAAe,SAAuBxiB,EAAOD,EAAQG,GACpE,MAAO8e,YAAWnf,KAAMG,EAAOD,GAAQ,EAAMG,IAG/CoY,OAAO9T,UAAUie,aAAe,SAAuBziB,EAAOD,EAAQG,GACpE,MAAO8e,YAAWnf,KAAMG,EAAOD,GAAQ,EAAOG,IAWhDoY,OAAO9T,UAAUke,cAAgB,SAAwB1iB,EAAOD,EAAQG,GACtE,MAAOgf,aAAYrf,KAAMG,EAAOD,GAAQ,EAAMG,IAGhDoY,OAAO9T,UAAUme,cAAgB,SAAwB3iB,EAAOD,EAAQG,GACtE,MAAOgf,aAAYrf,KAAMG,EAAOD,GAAQ,EAAOG,IAIjDoY,OAAO9T,UAAU8X,KAAO,SAAetc,EAAQD,EAAaG,EAAOD,GAQjE,GAPKC,IAAOA,EAAQ,GACfD,GAAe,IAARA,IAAWA,EAAMJ,KAAKgB,QAC9Bd,GAAeC,EAAOa,SAAQd,EAAcC,EAAOa,QAClDd,IAAaA,EAAc,GAC5BE,EAAM,GAAKA,EAAMC,IAAOD,EAAMC,GAG9BD,IAAQC,EAAO,MAAO,EAC1B,IAAsB,IAAlBF,EAAOa,QAAgC,IAAhBhB,KAAKgB,OAAc,MAAO,EAGrD,IAAId,EAAc,EAChB,KAAM,IAAIyb,YAAW,4BAEvB,IAAItb,EAAQ,GAAKA,GAASL,KAAKgB,OAAQ,KAAM,IAAI2a,YAAW,4BAC5D,IAAIvb,EAAM,EAAG,KAAM,IAAIub,YAAW,0BAG9Bvb,GAAMJ,KAAKgB,SAAQZ,EAAMJ,KAAKgB,QAC9Bb,EAAOa,OAASd,EAAcE,EAAMC,IACtCD,EAAMD,EAAOa,OAASd,EAAcG,EAGtC,IACId,GADAoB,EAAMP,EAAMC,CAGhB,IAAIL,OAASG,GAAUE,EAAQH,GAAeA,EAAcE,EAE1D,IAAKb,EAAIoB,EAAM,EAAGpB,GAAK,IAAKA,EAC1BY,EAAOZ,EAAIW,GAAeF,KAAKT,EAAIc,OAEhC,IAAIM,EAAM,MAAS8X,OAAOgD,oBAE/B,IAAKlc,EAAI,EAAGA,EAAIoB,IAAOpB,EACrBY,EAAOZ,EAAIW,GAAeF,KAAKT,EAAIc,OAGrC+a,YAAWzW,UAAU2G,IAAIvK,KACvBZ,EACAH,KAAKsb,SAASjb,EAAOA,EAAQM,GAC7BT,EAIJ,OAAOS,IAOT8X,OAAO9T,UAAUyX,KAAO,SAAejc,EAAKD,EAAOG,EAAKD,GAEtD,GAAmB,gBAARD,GAAkB,CAS3B,GARqB,gBAAVD,IACTE,EAAWF,EACXA,EAAQ,EACRG,EAAML,KAAKgB,QACa,gBAARX,KAChBD,EAAWC,EACXA,EAAML,KAAKgB,QAEM,IAAfb,EAAIa,OAAc,CACpB,GAAIzB,GAAOY,EAAIsf,WAAW,EACtBlgB,GAAO,MACTY,EAAMZ,GAGV,OAAiB,KAAba,GAA8C,gBAAbA,GACnC,KAAM,IAAIuO,WAAU,4BAEtB,IAAwB,gBAAbvO,KAA0BqY,OAAO6D,WAAWlc,GACrD,KAAM,IAAIuO,WAAU,qBAAuBvO,OAErB,gBAARD,KAChBA,GAAY,IAId,IAAID,EAAQ,GAAKF,KAAKgB,OAASd,GAASF,KAAKgB,OAASX,EACpD,KAAM,IAAIsb,YAAW,qBAGvB,IAAItb,GAAOH,EACT,MAAOF,KAGTE,MAAkB,EAClBG,MAAc,KAARA,EAAoBL,KAAKgB,OAASX,IAAQ,EAE3CF,IAAKA,EAAM,EAEhB,IAAIQ,EACJ,IAAmB,gBAARR,GACT,IAAKQ,EAAIT,EAAOS,EAAIN,IAAOM,EACzBX,KAAKW,GAAKR,MAEP,CACL,GAAII,GAAQkY,OAAOC,SAASvY,GACxBA,EACA4c,YAAY,GAAItE,QAAOtY,EAAKC,GAAUgK,YACtC5J,EAAMD,EAAMS,MAChB,KAAKL,EAAI,EAAGA,EAAIN,EAAMH,IAASS,EAC7BX,KAAKW,EAAIT,GAASK,EAAMI,EAAIH,GAIhC,MAAOR,MAMT,IAAIwf,mBAAoB,wNC7mDxB,YAmBA,SAASuD,mBAAmBxiB,GAC1B,GAAIF,GAAME,EAAIS,MACd,IAAIX,EAAM,EAAI,EACZ,KAAM,IAAIO,OAAM,iDAQlB,OAAwB,MAAjBL,EAAIF,EAAM,GAAa,EAAqB,MAAjBE,EAAIF,EAAM,GAAa,EAAI,EAG/D,QAASkb,YAAYhb,GAEnB,MAAoB,GAAbA,EAAIS,OAAa,EAAI+hB,kBAAkBxiB,GAGhD,QAASmf,aAAanf,GACpB,GAAIF,GAAGH,EAAGC,EAAGK,EAAKJ,EAAcqM,EAC5BhM,EAAMF,EAAIS,MACdZ,GAAe2iB,kBAAkBxiB,GAEjCkM,EAAM,GAAIuW,KAAU,EAANviB,EAAU,EAAIL,GAG5BD,EAAIC,EAAe,EAAIK,EAAM,EAAIA,CAEjC,IAAIK,GAAI,CAER,KAAKT,EAAI,EAAGH,EAAI,EAAGG,EAAIF,EAAGE,GAAK,EAAGH,GAAK,EACrCM,EAAOyiB,UAAU1iB,EAAIkf,WAAWpf,KAAO,GAAO4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,KAAO,GAAO4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,KAAO,EAAK4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,IAC/JoM,EAAI3L,KAAQN,GAAO,GAAM,IACzBiM,EAAI3L,KAAQN,GAAO,EAAK,IACxBiM,EAAI3L,KAAa,IAANN,CAYb,OATqB,KAAjBJ,GACFI,EAAOyiB,UAAU1iB,EAAIkf,WAAWpf,KAAO,EAAM4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,KAAO,EACjFoM,EAAI3L,KAAa,IAANN,GACe,IAAjBJ,IACTI,EAAOyiB,UAAU1iB,EAAIkf,WAAWpf,KAAO,GAAO4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,KAAO,EAAM4iB,UAAU1iB,EAAIkf,WAAWpf,EAAI,KAAO,EAC5HoM,EAAI3L,KAAQN,GAAO,EAAK,IACxBiM,EAAI3L,KAAa,IAANN,GAGNiM,EAGT,QAASyW,iBAAiB3iB,GACxB,MAAO4iB,QAAO5iB,GAAO,GAAK,IAAQ4iB,OAAO5iB,GAAO,GAAK,IAAQ4iB,OAAO5iB,GAAO,EAAI,IAAQ4iB,OAAa,GAAN5iB,GAGhG,QAAS6iB,aAAa7iB,EAAOF,EAAOH,GAGlC,IAAK,GAFDC,GACAK,KACKJ,EAAIC,EAAOD,EAAIF,EAAKE,GAAK,EAChCD,GAAOI,EAAMH,IAAM,KAAOG,EAAMH,EAAI,IAAM,GAAMG,EAAMH,EAAI,GAC1DI,EAAOwE,KAAKke,gBAAgB/iB,GAE9B,OAAOK,GAAOkC,KAAK,IAGrB,QAAS8b,eAAeje,GAStB,IAAK,GARDF,GACAH,EAAMK,EAAMS,OACZb,EAAaD,EAAM,EACnBM,EAAS,GACTJ,KACAqM,EAAiB,MAGZhM,EAAI,EAAGK,EAAOZ,EAAMC,EAAYM,EAAIK,EAAML,GAAKgM,EACtDrM,EAAM4E,KAAKoe,YAAY7iB,EAAOE,EAAIA,EAAIgM,EAAkB3L,EAAOA,EAAQL,EAAIgM,GAmB7E,OAfmB,KAAftM,GACFE,EAAME,EAAML,EAAM,GAClBM,GAAU2iB,OAAO9iB,GAAO,GACxBG,GAAU2iB,OAAQ9iB,GAAO,EAAK,IAC9BG,GAAU,MACc,IAAfL,IACTE,GAAOE,EAAML,EAAM,IAAM,GAAMK,EAAML,EAAM,GAC3CM,GAAU2iB,OAAO9iB,GAAO,IACxBG,GAAU2iB,OAAQ9iB,GAAO,EAAK,IAC9BG,GAAU2iB,OAAQ9iB,GAAO,EAAK,IAC9BG,GAAU,KAGZJ,EAAM4E,KAAKxE,GAEJJ,EAAMsC,KAAK,IA9GpBlD,QAAQ+b,WAAaA,WACrB/b,QAAQkgB,YAAcA,YACtBlgB,QAAQgf,cAAgBA,aAOxB,KAAK,GALD2E,WACAF,aACAD,IAA4B,mBAAf5H,YAA6BA,WAAapO,MAEvDnM,KAAO,mEACFF,EAAI,EAAG0iB,IAAMxiB,KAAKG,OAAQL,EAAI0iB,MAAO1iB,EAC5CwiB,OAAOxiB,GAAKE,KAAKF,GACjBsiB,UAAUpiB,KAAK4e,WAAW9e,IAAMA,CAGlCsiB,WAAU,IAAIxD,WAAW,IAAM,GAC/BwD,UAAU,IAAIxD,WAAW,IAAM,6CCjB/BjgB,QAAQiiB,KAAO,SAAUhhB,EAAQF,EAAQJ,EAAME,EAAMkM,GACnD,GAAIsB,GAAGpB,EACHc,EAAgB,EAAThB,EAAalM,EAAO,EAC3Bd,GAAQ,GAAKgO,GAAQ,EACrBrN,EAAQX,GAAQ,EAChBoB,GAAQ,EACR2iB,EAAInjB,EAAQoM,EAAS,EAAK,EAC1BnM,EAAID,GAAO,EAAK,EAChBG,EAAIG,EAAOF,EAAS+iB,EAOxB,KALAA,GAAKljB,EAELyN,EAAIvN,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAAS4M,EACF5M,EAAQ,EAAGkN,EAAQ,IAAJA,EAAUpN,EAAOF,EAAS+iB,GAAIA,GAAKljB,EAAGO,GAAS,GAKrE,IAHA8L,EAAIoB,GAAM,IAAOlN,GAAU,EAC3BkN,KAAQlN,EACRA,GAASN,EACFM,EAAQ,EAAG8L,EAAQ,IAAJA,EAAUhM,EAAOF,EAAS+iB,GAAIA,GAAKljB,EAAGO,GAAS,GAErE,GAAU,IAANkN,EACFA,EAAI,EAAI3N,MACH,CAAA,GAAI2N,IAAMtO,EACf,MAAOkN,GAAIgE,KAAQnQ,GAAI,EAAK,IAAK,EAAA,EAEjCmM,IAAQhE,KAAKwY,IAAI,EAAG5gB,GACpBwN,GAAQ3N,EAEV,OAAQI,GAAI,EAAK,GAAKmM,EAAIhE,KAAKwY,IAAI,EAAGpT,EAAIxN,IAG5Cb,QAAQ+c,MAAQ,SAAU9b,EAAQF,EAAOJ,EAAQE,EAAMkM,EAAMsB,GAC3D,GAAIpB,GAAGc,EAAGhO,EACNW,EAAgB,EAAT2N,EAAatB,EAAO,EAC3B5L,GAAQ,GAAKT,GAAQ,EACrBojB,EAAQ3iB,GAAQ,EAChBP,EAAe,KAATmM,EAAc9D,KAAKwY,IAAI,GAAG,IAAOxY,KAAKwY,IAAI,GAAG,IAAO,EAC1D3gB,EAAID,EAAO,EAAKwN,EAAS,EACzBrN,EAAIH,EAAO,GAAI,EACfS,EAAIP,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,CAmC1D,KAjCAA,EAAQkI,KAAKmF,IAAIrN,GAEb6N,MAAM7N,IAAUA,IAAU,EAAA,GAC5BgN,EAAIa,MAAM7N,GAAS,EAAI,EACvBkM,EAAI9L,IAEJ8L,EAAIhE,KAAKC,MAAMD,KAAKpC,IAAI9F,GAASkI,KAAK8a,KAClChjB,GAAShB,EAAIkJ,KAAKwY,IAAI,GAAIxU,IAAM,IAClCA,IACAlN,GAAK,GAGLgB,GADEkM,EAAI6W,GAAS,EACNljB,EAAKb,EAELa,EAAKqI,KAAKwY,IAAI,EAAG,EAAIqC,GAE5B/iB,EAAQhB,GAAK,IACfkN,IACAlN,GAAK,GAGHkN,EAAI6W,GAAS3iB,GACf4M,EAAI,EACJd,EAAI9L,GACK8L,EAAI6W,GAAS,GACtB/V,GAAKhN,EAAQhB,EAAI,GAAKkJ,KAAKwY,IAAI,EAAG1U,GAClCE,GAAQ6W,IAER/V,EAAIhN,EAAQkI,KAAKwY,IAAI,EAAGqC,EAAQ,GAAK7a,KAAKwY,IAAI,EAAG1U,GACjDE,EAAI,IAIDF,GAAQ,EAAG9L,EAAON,EAASG,GAAS,IAAJiN,EAAUjN,GAAKE,EAAG+M,GAAK,IAAKhB,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQgB,EAClBrN,GAAQqM,EACDrM,EAAO,EAAGO,EAAON,EAASG,GAAS,IAAJmM,EAAUnM,GAAKE,EAAGiM,GAAK,IAAKvM,GAAQ,GAE1EO,EAAON,EAASG,EAAIE,IAAU,IAAJM,6CClF5B,GAAIsJ,aAAcA,QAElB3K,QAAOD,QAAUwN,MAAMqB,SAAW,SAAUhO,GAC1C,MAA6B,kBAAtB+J,SAASrJ,KAAKV;CCFrB,SAASH,GAgEV,QAASK,GAAML,GACd,KAAM,IAAIyb,YAAW6H,EAAOtjB,IAW7B,QAASE,GAAIF,EAAOK,GAGnB,IAFA,GAAIH,GAASF,EAAMc,OACfX,KACGD,KACNC,EAAOD,GAAUG,EAAGL,EAAME,GAE3B,OAAOC,GAaR,QAASA,GAAUH,EAAQK,GAC1B,GAAIF,GAAQH,EAAOwD,MAAM,KACrBvD,EAAS,EACTE,GAAMW,OAAS,IAGlBb,EAASE,EAAM,GAAK,IACpBH,EAASG,EAAM,IAGhBH,EAASA,EAAOoV,QAAQmO,EAAiB,IACzC,IAAIjjB,GAASN,EAAOwD,MAAM,KACtB/C,EAAUP,EAAII,EAAQD,GAAImC,KAAK,IACnC,OAAOvC,GAASQ,EAgBjB,QAASR,GAAWD,GAMnB,IALA,GAGIK,GACAH,EAJAC,KACAF,EAAU,EACVK,EAASN,EAAOc,OAGbb,EAAUK,GAChBD,EAAQL,EAAOuf,WAAWtf,KACtBI,GAAS,OAAUA,GAAS,OAAUJ,EAAUK,GAEnDJ,EAAQF,EAAOuf,WAAWtf,KACF,QAAX,MAARC,GACJC,EAAO2E,OAAe,KAARzE,IAAkB,KAAe,KAARH,GAAiB,QAIxDC,EAAO2E,KAAKzE,GACZJ,MAGDE,EAAO2E,KAAKzE,EAGd,OAAOF,GAWR,QAASG,GAAWN,GACnB,MAAOE,GAAIF,EAAO,SAASA,GAC1B,GAAIK,GAAS,EAOb,OANIL,GAAQ,QACXA,GAAS,MACTK,GAAUuN,EAAmB5N,IAAU,GAAK,KAAQ,OACpDA,EAAQ,MAAiB,KAARA,GAElBK,GAAUuN,EAAmB5N,KAE3BwC,KAAK,IAYT,QAAS/B,GAAaT,GACrB,MAAIA,GAAY,GAAK,GACbA,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEhBA,EAAY,GAAK,GACbA,EAAY,GAEbyM,EAcR,QAASpN,GAAaW,EAAOK,GAG5B,MAAOL,GAAQ,GAAK,IAAMA,EAAQ,MAAgB,GAARK,IAAc,GAQzD,QAASiD,GAAMtD,EAAOK,EAAWH,GAChC,GAAIC,GAAI,CAGR,KAFAH,EAAQE,EAAYyN,EAAM3N,EAAQyN,GAAQzN,GAAS,EACnDA,GAAS2N,EAAM3N,EAAQK,GACOL,EAAQwjB,EAAgBpX,GAAQ,EAAGjM,GAAKsM,EACrEzM,EAAQ2N,EAAM3N,EAAQwjB,EAEvB,OAAO7V,GAAMxN,GAAKqjB,EAAgB,GAAKxjB,GAASA,EAAQsN,IAUzD,QAAS1M,GAAOZ,GAEf,GAEIE,GAIAC,EACAF,EACAZ,EACAuB,EACAR,EACAuL,EACApL,EACAgM,EAEAF,EAfAc,KACAzN,EAAcM,EAAMc,OAEpBuM,EAAI,EACJC,EAAImW,EACJhW,EAAOiW,CAqBX,KALAvjB,EAAQH,EAAMyd,YAAYzP,GACtB7N,EAAQ,IACXA,EAAQ,GAGJF,EAAI,EAAGA,EAAIE,IAASF,EAEpBD,EAAMuf,WAAWtf,IAAM,KAC1BI,EAAM,aAEP8M,EAAOrI,KAAK9E,EAAMuf,WAAWtf,GAM9B,KAAKZ,EAAQc,EAAQ,EAAIA,EAAQ,EAAI,EAAGd,EAAQK,GAAwC,CAOvF,IAAKkB,EAAOyM,EAAGjN,EAAI,EAAGuL,EAAIc,EAErBpN,GAASK,GACZW,EAAM,iBAGPE,EAAQE,EAAaT,EAAMuf,WAAWlgB,OAElCkB,GAASkM,GAAQlM,EAAQoN,GAAOf,EAASS,GAAKjN,KACjDC,EAAM,YAGPgN,GAAK9M,EAAQH,EACbmM,EAAIZ,GAAK8B,EAAOZ,EAAQlB,GAAK8B,EAAOrB,EAAOA,EAAOT,EAAI8B,IAElDlN,EAAQgM,GAfuCZ,GAAKc,EAmBxDJ,EAAaI,EAAOF,EAChBnM,EAAIuN,EAAMf,EAASP,IACtBhM,EAAM,YAGPD,GAAKiM,CAINnM,GAAMiN,EAAOrM,OAAS,EACtB2M,EAAOnK,EAAM+J,EAAIzM,EAAMV,EAAa,GAARU,GAIxB+M,EAAMN,EAAInN,GAAO0M,EAASU,GAC7BjN,EAAM,YAGPiN,GAAKK,EAAMN,EAAInN,GACfmN,GAAKnN,EAGLiN,EAAO4K,OAAO1K,IAAK,EAAGC,GAIvB,MAAOhN,GAAW6M,GAUnB,QAAS/M,GAAOJ,GACf,GAAIE,GACAC,EACAG,EACAG,EACAG,EACAR,EACAuL,EACApL,EACAgM,EACAF,EACAc,EAGAzN,EAEA2N,EACAC,EACAG,EANAkW,IAoBJ,KAXA3jB,EAAQC,EAAWD,GAGnBN,EAAcM,EAAMc,OAGpBZ,EAAIujB,EACJtjB,EAAQ,EACRS,EAAO8iB,EAGFtjB,EAAI,EAAGA,EAAIV,IAAeU,EAC9B+M,EAAenN,EAAMI,GACjB+M,EAAe,KAClBwW,EAAO7e,KAAK8I,EAAmBT,GAejC,KAXA7M,EAAiBG,EAAckjB,EAAO7iB,OAMlCL,GACHkjB,EAAO7e,KAAKkJ,GAIN1N,EAAiBZ,GAAa,CAIpC,IAAKiM,EAAIiB,EAAQxM,EAAI,EAAGA,EAAIV,IAAeU,EAC1C+M,EAAenN,EAAMI,GACjB+M,GAAgBjN,GAAKiN,EAAexB,IACvCA,EAAIwB,EAcN,KARAE,EAAwB/M,EAAiB,EACrCqL,EAAIzL,EAAIyN,GAAOf,EAASzM,GAASkN,IACpChN,EAAM,YAGPF,IAAUwL,EAAIzL,GAAKmN,EACnBnN,EAAIyL,EAECvL,EAAI,EAAGA,EAAIV,IAAeU,EAO9B,GANA+M,EAAenN,EAAMI,GAEjB+M,EAAejN,KAAOC,EAAQyM,GACjCvM,EAAM,YAGH8M,GAAgBjN,EAAG,CAEtB,IAAKK,EAAIJ,EAAOoM,EAAIE,EACnBJ,EAAIE,GAAK3L,EAAOiM,EAAQN,GAAK3L,EAAOwL,EAAOA,EAAOG,EAAI3L,IAClDL,EAAI8L,GAFqCE,GAAKE,EAKlDgB,EAAUlN,EAAI8L,EACdiB,EAAab,EAAOJ,EACpBsX,EAAO7e,KACN8I,EAAmBvO,EAAagN,EAAIoB,EAAUH,EAAY,KAE3D/M,EAAIoN,EAAMF,EAAUH,EAGrBqW,GAAO7e,KAAK8I,EAAmBvO,EAAakB,EAAG,KAC/CK,EAAO0C,EAAMnD,EAAOkN,EAAuB/M,GAAkBG,GAC7DN,EAAQ,IACNG,IAIFH,IACAD,EAGH,MAAOyjB,GAAOnhB,KAAK,IAcpB,QAASmJ,GAAU3L,GAClB,MAAOG,GAAUH,EAAO,SAASA,GAChC,MAAO2jB,GAAcxhB,KAAKnC,GACvBY,EAAOZ,EAAO+M,MAAM,GAAGrJ,eACvB1D,IAeL,QAASO,GAAQP,GAChB,MAAOG,GAAUH,EAAO,SAASA,GAChC,MAAO+N,GAAc5L,KAAKnC,GACvB,OAASI,EAAOJ,GAChBA,IAvdL,GAAIuM,GAAgC,gBAAXjN,UAAuBA,UAC9CA,QAAQuY,UAAYvY,QAClB+M,EAA8B,gBAAV9M,SAAsBA,SAC5CA,OAAOsY,UAAYtY,OACjB4N,EAA8B,gBAAVvN,SAAsBA,MAE7CuN,GAAWvN,SAAWuN,GACtBA,EAAWxN,SAAWwN,GACtBA,EAAWtN,OAASsN,IAEpBnN,EAAOmN,EAQR,IAAIzN,GAiCJ2N,EA9BAT,EAAS,WAGTH,EAAO,GACPI,EAAO,EACPT,EAAO,GACPkB,EAAO,GACPG,EAAO,IACPiW,EAAc,GACdD,EAAW,IACXzV,EAAY,IAGZ2V,EAAgB,QAChB5V,EAAgB,eAChBwV,EAAkB,4BAGlBD,GACCM,SAAY,kDACZC,YAAa,iDACbC,gBAAiB,iBAIlBN,EAAgB/W,EAAOI,EACvBc,EAAQpF,KAAKC,MACboF,EAAqBwG,OAAOsK,YAyc5B,IA3BAhf,GAMCiL,QAAW,QAQXoZ,MACCC,OAAU/jB,EACVgkB,OAAU3jB,GAEX0jB,OAAUpjB,EACVqjB,OAAU7jB,EACV8jB,QAAW3jB,EACX4jB,UAAaxY,GAOI,kBAAVnM,SACc,gBAAdA,QAAOC,KACdD,OAAOC,IAEPD,OAAO,WAAY,WAClB,MAAOE,SAEF,IAAI6M,GAAeF,EACzB,GAAI9M,OAAOD,SAAWiN,EAErBF,EAAW/M,QAAUI,MAGrB,KAAK2N,IAAO3N,GACXA,EAASgN,eAAeW,KAASd,EAAYc,GAAO3N,EAAS2N,QAK/DrN,GAAKokB,SAAW1kB,GAGhBI,qKC/fF,YAKA,SAAS4M,gBAAevM,EAAKH,GAC3B,MAAO8B,QAAO2C,UAAUiI,eAAe7L,KAAKV,EAAKH,GAGnDT,OAAOD,QAAU,SAASa,EAAIH,EAAKC,EAAIC,GACrCF,EAAMA,GAAO,IACbC,EAAKA,GAAM,GACX,IAAII,KAEJ,IAAkB,gBAAPF,IAAiC,IAAdA,EAAGW,OAC/B,MAAOT,EAGT,IAAIE,GAAS,KACbJ,GAAKA,EAAGqD,MAAMxD,EAEd,IAAII,GAAU,GACVF,IAAsC,gBAApBA,GAAQmkB,UAC5BjkB,EAAUF,EAAQmkB,QAGpB,IAAI9X,GAAMpM,EAAGW,MAETV,GAAU,GAAKmM,EAAMnM,IACvBmM,EAAMnM,EAGR,KAAK,GAAIyM,GAAI,EAAGA,EAAIN,IAAOM,EAAG,CAC5B,GAEIvM,GAAMgD,EAAM7C,EAAGG,EAFfvB,EAAIc,EAAG0M,GAAGuI,QAAQ7U,EAAQ,OAC1B4M,EAAM9N,EAAEiC,QAAQrB,EAGhBkN,IAAO,GACT7M,EAAOjB,EAAEkE,OAAO,EAAG4J,GACnB7J,EAAOjE,EAAEkE,OAAO4J,EAAM,KAEtB7M,EAAOjB,EACPiE,EAAO,IAGT7C,EAAI6jB,mBAAmBhkB,GACvBM,EAAI0jB,mBAAmBhhB,GAElBoJ,eAAerM,EAAKI,GAEd0N,QAAQ9N,EAAII,IACrBJ,EAAII,GAAGqE,KAAKlE,GAEZP,EAAII,IAAMJ,EAAII,GAAIG,GAJlBP,EAAII,GAAKG,EAQb,MAAOP,GAGT,IAAI8N,SAAUrB,MAAMqB,SAAW,SAAUhO,GACvC,MAA8C,mBAAvC2B,OAAO2C,UAAUyF,SAASrJ,KAAKV,8CC7DxC,YAgDA,SAASsF,KAAKtF,EAAIH,GAChB,GAAIG,EAAGsF,IAAK,MAAOtF,GAAGsF,IAAIzF,EAE1B,KAAK,GADDC,MACKC,EAAI,EAAGA,EAAIC,EAAGW,OAAQZ,IAC7BD,EAAI6E,KAAK9E,EAAEG,EAAGD,GAAIA,GAEpB,OAAOD,GApDT,GAAIskB,oBAAqB,SAASpkB,GAChC,aAAeA,IACb,IAAK,SACH,MAAOA,EAET,KAAK,UACH,MAAOA,GAAI,OAAS,OAEtB,KAAK,SACH,MAAOmgB,UAASngB,GAAKA,EAAI,EAE3B,SACE,MAAO,IAIbZ,QAAOD,QAAU,SAASa,EAAKH,EAAKC,EAAIC,GAOtC,MANAF,GAAMA,GAAO,IACbC,EAAKA,GAAM,IACC,OAARE,IACFA,MAAM,IAGW,gBAARA,GACFsF,IAAI+e,WAAWrkB,GAAM,SAASD,GACnC,GAAIO,GAAKgkB,mBAAmBF,mBAAmBrkB,IAAMD,CACrD,OAAIkO,SAAQhO,EAAID,IACPuF,IAAItF,EAAID,GAAI,SAASC,GAC1B,MAAOM,GAAKgkB,mBAAmBF,mBAAmBpkB,MACjDqC,KAAKxC,GAEDS,EAAKgkB,mBAAmBF,mBAAmBpkB,EAAID,OAEvDsC,KAAKxC,GAILE,EACEukB,mBAAmBF,mBAAmBrkB,IAASD,EAC/CwkB,mBAAmBF,mBAAmBpkB,IAF3B,GAKpB,IAAIgO,SAAUrB,MAAMqB,SAAW,SAAUhO,GACvC,MAA8C,mBAAvC2B,OAAO2C,UAAUyF,SAASrJ,KAAKV,IAYpCqkB,WAAa1iB,OAAOC,MAAQ,SAAU5B,GACxC,GAAIH,KACJ,KAAK,GAAIC,KAAOE,GACV2B,OAAO2C,UAAUiI,eAAe7L,KAAKV,EAAKF,IAAMD,EAAI8E,KAAK7E,EAE/D,OAAOD,8CCnFT,YAEAV,SAAQ0kB,OAAS1kB,QAAQoD,MAAQlC,QAAQ,YACzClB,QAAQ2kB,OAAS3kB,QAAQ2I,UAAYzH,QAAQ,iFCkB7C,YAYA,SAASkkB,OACP5kB,KAAK6kB,SAAW,KAChB7kB,KAAK8kB,QAAU,KACf9kB,KAAK+kB,KAAO,KACZ/kB,KAAKglB,KAAO,KACZhlB,KAAKilB,KAAO,KACZjlB,KAAKklB,SAAW,KAChBllB,KAAKmlB,KAAO,KACZnlB,KAAKolB,OAAS,KACdplB,KAAK6C,MAAQ,KACb7C,KAAKqlB,SAAW,KAChBrlB,KAAK+Z,KAAO,KACZ/Z,KAAKslB,KAAO,KAwDd,QAASC,UAASplB,EAAKG,EAAkBJ,GACvC,GAAIC,GAAO4K,KAAKgG,SAAS5Q,IAAQA,YAAeykB,KAAK,MAAOzkB,EAE5D,IAAIoM,GAAI,GAAIqY,IAEZ,OADArY,GAAE3J,MAAMzC,EAAKG,EAAkBJ,GACxBqM,EAyQT,QAASiZ,WAAUrlB,GAMjB,MADI4K,MAAKmG,SAAS/Q,KAAMA,EAAMolB,SAASplB,IACjCA,YAAeykB,KACdzkB,EAAIslB,SADuBb,IAAIjgB,UAAU8gB,OAAO1kB,KAAKZ,GA4D9D,QAASulB,YAAWvlB,EAAQG,GAC1B,MAAOilB,UAASplB,GAAQ,GAAO,GAAMwlB,QAAQrlB,GAO/C,QAASslB,kBAAiBzlB,EAAQG,GAChC,MAAKH,GACEolB,SAASplB,GAAQ,GAAO,GAAM0lB,cAAcvlB,GAD/BA,EAvatB,GAAIgkB,UAAW5jB,QAAQ,YACnBqK,KAAOrK,QAAQ,SAEnBlB,SAAQoD,MAAQ2iB,SAChB/lB,QAAQmmB,QAAUD,WAClBlmB,QAAQqmB,cAAgBD,iBACxBpmB,QAAQimB,OAASD,UAEjBhmB,QAAQolB,IAAMA,GAqBd,IAAIkB,iBAAkB,oBAClBC,YAAc,WAGdC,kBAAoB,qCAIpBC,QAAU,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAG/CC,QAAU,IAAK,IAAK,IAAK,KAAM,IAAK,KAAK3e,OAAO0e,QAGhDE,YAAc,KAAM5e,OAAO2e,QAK3BE,cAAgB,IAAK,IAAK,IAAK,IAAK,KAAK7e,OAAO4e,YAChDE,iBAAmB,IAAK,IAAK,KAC7BC,eAAiB,IACjBC,oBAAsB,yBACtBC,kBAAoB,+BAEpBC,gBACEC,YAAc,EACdC,eAAe,GAGjBC,kBACEF,YAAc,EACdC,eAAe,GAGjBE,iBACEC,MAAQ,EACRC,OAAS,EACTC,KAAO,EACPC,QAAU,EACVC,MAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXC,SAAS,GAEXC,YAAc9mB,QAAQ,cAU1BkkB,KAAIjgB,UAAU/B,MAAQ,SAASzC,EAAKG,EAAkBJ,GACpD,IAAK6K,KAAKmG,SAAS/Q,GACjB,KAAM,IAAIwO,WAAU,+CAAkDxO,GAMxE,IAAIoM,GAAapM,EAAIqB,QAAQ,KACzBnB,EACKkM,KAAe,GAAMA,EAAapM,EAAIqB,QAAQ,KAAQ,IAAM,IACjEf,EAASN,EAAIuD,MAAMrD,GACnBE,EAAa,KACjBE,GAAO,GAAKA,EAAO,GAAG6U,QAAQ/U,EAAY,KAC1CJ,EAAMM,EAAOiC,KAAKrC,EAElB,IAAID,GAAOD,CAMX,IAFAC,EAAOA,EAAKwF,QAEP1F,GAA+C,IAA1BC,EAAIuD,MAAM,KAAK1C,OAAc,CAErD,GAAIL,GAAaqlB,kBAAkBlc,KAAK1J,EACxC,IAAIO,EAeF,MAdAX,MAAK+Z,KAAO3Z,EACZJ,KAAKslB,KAAOllB,EACZJ,KAAKqlB,SAAW1kB,EAAW,GACvBA,EAAW,IACbX,KAAKolB,OAASzkB,EAAW,GACrBL,EACFN,KAAK6C,MAAQ2kB,YAAY5kB,MAAM5C,KAAKolB,OAAO3hB,OAAO,IAElDzD,KAAK6C,MAAQ7C,KAAKolB,OAAO3hB,OAAO,IAEzBnD,IACTN,KAAKolB,OAAS,GACdplB,KAAK6C,UAEA7C,KAIX,GAAIc,GAAQglB,gBAAgBhc,KAAK1J,EACjC,IAAIU,EAAO,CACTA,EAAQA,EAAM,EACd,IAAIN,GAAaM,EAAM8C,aACvB5D,MAAK6kB,SAAWrkB,EAChBJ,EAAOA,EAAKqD,OAAO3C,EAAME,QAO3B,GAAId,GAAqBY,GAASV,EAAK0R,MAAM,wBAAyB,CACpE,GAAIrF,GAAgC,OAAtBrM,EAAKqD,OAAO,EAAG,IACzBgJ,GAAa3L,GAAS8lB,iBAAiB9lB,KACzCV,EAAOA,EAAKqD,OAAO,GACnBzD,KAAK8kB,SAAU,GAInB,IAAK8B,iBAAiB9lB,KACjB2L,GAAY3L,IAAU+lB,gBAAgB/lB,IAAU,CAmBnD,IAAK,GADD0C,IAAU,EACLjE,EAAI,EAAGA,EAAI8mB,gBAAgBrlB,OAAQzB,IAAK,CAC/C,GAAIiO,GAAMpN,EAAKoB,QAAQ6kB,gBAAgB9mB,GACnCiO,MAAQ,IAAOhK,KAAY,GAAMgK,EAAMhK,KACzCA,EAAUgK,GAKd,GAAIH,GAAMzN,CAGRA,GAFE4D,KAAY,EAELpD,EAAKud,YAAY,KAIjBvd,EAAKud,YAAY,IAAKna,GAK7B5D,KAAW,IACbyN,EAAOjN,EAAK6M,MAAM,EAAGrN,GACrBQ,EAAOA,EAAK6M,MAAMrN,EAAS,GAC3BI,KAAK+kB,KAAOP,mBAAmBnX,IAIjC7J,GAAU,CACV,KAAK,GAAIjE,GAAI,EAAGA,EAAI6mB,aAAaplB,OAAQzB,IAAK,CAC5C,GAAIiO,GAAMpN,EAAKoB,QAAQ4kB,aAAa7mB,GAChCiO,MAAQ,IAAOhK,KAAY,GAAMgK,EAAMhK,KACzCA,EAAUgK,GAGVhK,KAAY,IACdA,EAAUpD,EAAKY,QAEjBhB,KAAKglB,KAAO5kB,EAAK6M,MAAM,EAAGzJ,GAC1BpD,EAAOA,EAAK6M,MAAMzJ,GAGlBxD,KAAKynB,YAILznB,KAAKklB,SAAWllB,KAAKklB,UAAY,EAIjC,IAAInY,GAAoC,MAArB/M,KAAKklB,SAAS,IACe,MAA5CllB,KAAKklB,SAASllB,KAAKklB,SAASlkB,OAAS,EAGzC,KAAK+L,EAEH,IAAK,GADDe,GAAY9N,KAAKklB,SAASxhB,MAAM,MAC3BnE,EAAI,EAAGsM,EAAIiC,EAAU9M,OAAQzB,EAAIsM,EAAGtM,IAAK,CAChD,GAAI4O,GAAOL,EAAUvO,EACrB,IAAK4O,IACAA,EAAK2D,MAAMyU,qBAAsB,CAEpC,IAAK,GADD5Z,GAAU,GACLsB,EAAI,EAAGN,EAAIQ,EAAKnN,OAAQiN,EAAIN,EAAGM,IAKpCtB,GAJEwB,EAAKsR,WAAWxR,GAAK,IAIZ,IAEAE,EAAKF,EAIpB,KAAKtB,EAAQmF,MAAMyU,qBAAsB,CACvC,GAAIzZ,GAAagB,EAAUb,MAAM,EAAG1N,GAChCmoB,EAAU5Z,EAAUb,MAAM1N,EAAI,GAC9B+M,EAAM6B,EAAK2D,MAAM0U,kBACjBla,KACFQ,EAAW9H,KAAKsH,EAAI,IACpBob,EAAQC,QAAQrb,EAAI,KAElBob,EAAQ1mB,SACVZ,EAAO,IAAMsnB,EAAQhlB,KAAK,KAAOtC,GAEnCJ,KAAKklB,SAAWpY,EAAWpK,KAAK,IAChC,SAMJ1C,KAAKklB,SAASlkB,OAASslB,eACzBtmB,KAAKklB,SAAW,GAGhBllB,KAAKklB,SAAWllB,KAAKklB,SAASthB,cAG3BmJ,IAKH/M,KAAKklB,SAAWZ,SAASF,QAAQpkB,KAAKklB,UAGxC,IAAItB,GAAI5jB,KAAKilB,KAAO,IAAMjlB,KAAKilB,KAAO,GAClC1X,EAAIvN,KAAKklB,UAAY,EACzBllB,MAAKglB,KAAOzX,EAAIqW,EAChB5jB,KAAKslB,MAAQtlB,KAAKglB,KAIdjY,IACF/M,KAAKklB,SAAWllB,KAAKklB,SAASzhB,OAAO,EAAGzD,KAAKklB,SAASlkB,OAAS,GAC/C,MAAZZ,EAAK,KACPA,EAAO,IAAMA,IAOnB,IAAKqmB,eAAejmB,GAKlB,IAAK,GAAIjB,GAAI,EAAGsM,EAAIsa,WAAWnlB,OAAQzB,EAAIsM,EAAGtM,IAAK,CACjD,GAAI2O,GAAKiY,WAAW5mB,EACpB,IAAIa,EAAKoB,QAAQ0M,MAAQ,EAAzB,CAEA,GAAIyV,GAAMgB,mBAAmBzW,EACzByV,KAAQzV,IACVyV,EAAMiE,OAAO1Z,IAEf9N,EAAOA,EAAKsD,MAAMwK,GAAIxL,KAAKihB,IAM/B,GAAIkE,GAAOznB,EAAKoB,QAAQ,IACpBqmB,MAAS,IAEX7nB,KAAKmlB,KAAO/kB,EAAKqD,OAAOokB,GACxBznB,EAAOA,EAAK6M,MAAM,EAAG4a,GAEvB,IAAIpE,GAAKrjB,EAAKoB,QAAQ,IAoBtB,IAnBIiiB,KAAO,GACTzjB,KAAKolB,OAAShlB,EAAKqD,OAAOggB,GAC1BzjB,KAAK6C,MAAQzC,EAAKqD,OAAOggB,EAAK,GAC1BnjB,IACFN,KAAK6C,MAAQ2kB,YAAY5kB,MAAM5C,KAAK6C,QAEtCzC,EAAOA,EAAK6M,MAAM,EAAGwW,IACZnjB,IAETN,KAAKolB,OAAS,GACdplB,KAAK6C,UAEHzC,IAAMJ,KAAKqlB,SAAWjlB,GACtBymB,gBAAgBrmB,IAChBR,KAAKklB,WAAallB,KAAKqlB,WACzBrlB,KAAKqlB,SAAW,KAIdrlB,KAAKqlB,UAAYrlB,KAAKolB,OAAQ,CAChC,GAAIxB,GAAI5jB,KAAKqlB,UAAY,GACrBnZ,EAAIlM,KAAKolB,QAAU,EACvBplB,MAAK+Z,KAAO6J,EAAI1X,EAKlB,MADAlM,MAAKslB,KAAOtlB,KAAKylB,SACVzlB,MAcT4kB,IAAIjgB,UAAU8gB,OAAS,WACrB,GAAItlB,GAAOH,KAAK+kB,MAAQ,EACpB5kB,KACFA,EAAOwkB,mBAAmBxkB,GAC1BA,EAAOA,EAAKmV,QAAQ,OAAQ,KAC5BnV,GAAQ,IAGV,IAAIG,GAAWN,KAAK6kB,UAAY,GAC5B3kB,EAAWF,KAAKqlB,UAAY,GAC5B9Y,EAAOvM,KAAKmlB,MAAQ,GACpB9kB,GAAO,EACPI,EAAQ,EAERT,MAAKglB,KACP3kB,EAAOF,EAAOH,KAAKglB,KACVhlB,KAAKklB,WACd7kB,EAAOF,GAAQH,KAAKklB,SAAS1jB,QAAQ,QAAS,EAC1CxB,KAAKklB,SACL,IAAMllB,KAAKklB,SAAW,KACtBllB,KAAKilB,OACP5kB,GAAQ,IAAML,KAAKilB,OAInBjlB,KAAK6C,OACLkI,KAAKgG,SAAS/Q,KAAK6C,QACnBb,OAAOC,KAAKjC,KAAK6C,OAAO7B,SAC1BP,EAAQ+mB,YAAYrf,UAAUnI,KAAK6C,OAGrC,IAAItC,GAASP,KAAKolB,QAAW3kB,GAAU,IAAMA,GAAW,EAsBxD,OApBIH,IAAoC,MAAxBA,EAASmD,QAAO,KAAanD,GAAY,KAIrDN,KAAK8kB,WACHxkB,GAAYumB,gBAAgBvmB,KAAcD,KAAS,GACvDA,EAAO,MAAQA,GAAQ,IACnBH,GAAmC,MAAvBA,EAASiM,OAAO,KAAYjM,EAAW,IAAMA,IACnDG,IACVA,EAAO,IAGLkM,GAA2B,MAAnBA,EAAKJ,OAAO,KAAYI,EAAO,IAAMA,GAC7ChM,GAA+B,MAArBA,EAAO4L,OAAO,KAAY5L,EAAS,IAAMA,GAEvDL,EAAWA,EAASoV,QAAQ,QAAS,SAASnV,GAC5C,MAAOwkB,oBAAmBxkB,KAE5BI,EAASA,EAAO+U,QAAQ,IAAK,OAEtBhV,EAAWD,EAAOH,EAAWK,EAASgM,GAO/CqY,IAAIjgB,UAAUghB,QAAU,SAASxlB,GAC/B,MAAOH,MAAK6lB,cAAcN,SAASplB,GAAU,GAAO,IAAOslB,UAQ7Db,IAAIjgB,UAAUkhB,cAAgB,SAAS1lB,GACrC,GAAI4K,KAAKmG,SAAS/Q,GAAW,CAC3B,GAAIG,GAAM,GAAIskB,IACdtkB,GAAIsC,MAAMzC,GAAU,GAAO,GAC3BA,EAAWG,EAKb,IAAK,GAFDJ,GAAS,GAAI0kB,KACbrY,EAAQvK,OAAOC,KAAKjC,MACfK,EAAK,EAAGA,EAAKkM,EAAMvL,OAAQX,IAAM,CACxC,GAAII,GAAO8L,EAAMlM,EACjBH,GAAOO,GAAQT,KAAKS,GAQtB,GAHAP,EAAOilB,KAAOhlB,EAASglB,KAGD,KAAlBhlB,EAASmlB,KAEX,MADAplB,GAAOolB,KAAOplB,EAAOulB,SACdvlB,CAIT,IAAIC,EAAS2kB,UAAY3kB,EAAS0kB,SAAU,CAG1C,IAAK,GADDtkB,GAAQyB,OAAOC,KAAK9B,GACfC,EAAK,EAAGA,EAAKG,EAAMS,OAAQZ,IAAM,CACxC,GAAIO,GAAOJ,EAAMH,EACJ,cAATO,IACFT,EAAOS,GAAQR,EAASQ,IAU5B,MANIkmB,iBAAgB3mB,EAAO2kB,WACvB3kB,EAAOglB,WAAahlB,EAAOmlB,WAC7BnlB,EAAO6Z,KAAO7Z,EAAOmlB,SAAW,KAGlCnlB,EAAOolB,KAAOplB,EAAOulB,SACdvlB,EAGT,GAAIC,EAAS0kB,UAAY1kB,EAAS0kB,WAAa3kB,EAAO2kB,SAAU,CAS9D,IAAKgC,gBAAgB1mB,EAAS0kB,UAAW,CAEvC,IAAK,GADD/jB,GAAOkB,OAAOC,KAAK9B,GACdK,EAAI,EAAGA,EAAIM,EAAKE,OAAQR,IAAK,CACpC,GAAIiM,GAAI3L,EAAKN,EACbN,GAAOuM,GAAKtM,EAASsM,GAGvB,MADAvM,GAAOolB,KAAOplB,EAAOulB,SACdvlB,EAIT,GADAA,EAAO2kB,SAAW1kB,EAAS0kB,SACtB1kB,EAAS6kB,MAAS4B,iBAAiBzmB,EAAS0kB,UAS/C3kB,EAAOmlB,SAAWllB,EAASklB,aAT+B,CAE1D,IADA,GAAI7hB,IAAWrD,EAASklB,UAAY,IAAI3hB,MAAM,KACvCF,EAAQxC,UAAYb,EAAS6kB,KAAOxhB,EAAQskB,WAC9C3nB,EAAS6kB,OAAM7kB,EAAS6kB,KAAO,IAC/B7kB,EAAS+kB,WAAU/kB,EAAS+kB,SAAW,IACzB,KAAf1hB,EAAQ,IAAWA,EAAQmkB,QAAQ,IACnCnkB,EAAQxC,OAAS,GAAGwC,EAAQmkB,QAAQ,IACxCznB,EAAOmlB,SAAW7hB,EAAQd,KAAK,KAWjC,GAPAxC,EAAOklB,OAASjlB,EAASilB,OACzBllB,EAAO2C,MAAQ1C,EAAS0C,MACxB3C,EAAO8kB,KAAO7kB,EAAS6kB,MAAQ,GAC/B9kB,EAAO6kB,KAAO5kB,EAAS4kB,KACvB7kB,EAAOglB,SAAW/kB,EAAS+kB,UAAY/kB,EAAS6kB,KAChD9kB,EAAO+kB,KAAO9kB,EAAS8kB,KAEnB/kB,EAAOmlB,UAAYnlB,EAAOklB,OAAQ,CACpC,GAAI7lB,GAAIW,EAAOmlB,UAAY,GACvB7X,EAAItN,EAAOklB,QAAU,EACzBllB,GAAO6Z,KAAOxa,EAAIiO,EAIpB,MAFAtN,GAAO4kB,QAAU5kB,EAAO4kB,SAAW3kB,EAAS2kB,QAC5C5kB,EAAOolB,KAAOplB,EAAOulB,SACdvlB,EAGT,GAAImN,GAAenN,EAAOmlB,UAA0C,MAA9BnlB,EAAOmlB,SAASlZ,OAAO,GACzDvM,EACIO,EAAS6kB,MACT7kB,EAASklB,UAA4C,MAAhCllB,EAASklB,SAASlZ,OAAO,GAElDY,EAAcnN,GAAYyN,GACXnN,EAAO8kB,MAAQ7kB,EAASklB,SACvCvX,EAAgBf,EAChBlB,EAAU3L,EAAOmlB,UAAYnlB,EAAOmlB,SAAS3hB,MAAM,SACnDF,EAAUrD,EAASklB,UAAYllB,EAASklB,SAAS3hB,MAAM,SACvDyK,EAAYjO,EAAO2kB,WAAagC,gBAAgB3mB,EAAO2kB,SA2B3D,IApBI1W,IACFjO,EAAOglB,SAAW,GAClBhlB,EAAO+kB,KAAO,KACV/kB,EAAO8kB,OACU,KAAfnZ,EAAQ,GAAWA,EAAQ,GAAK3L,EAAO8kB,KACtCnZ,EAAQ8b,QAAQznB,EAAO8kB,OAE9B9kB,EAAO8kB,KAAO,GACV7kB,EAAS0kB,WACX1kB,EAAS+kB,SAAW,KACpB/kB,EAAS8kB,KAAO,KACZ9kB,EAAS6kB,OACQ,KAAfxhB,EAAQ,GAAWA,EAAQ,GAAKrD,EAAS6kB,KACxCxhB,EAAQmkB,QAAQxnB,EAAS6kB,OAEhC7kB,EAAS6kB,KAAO,MAElBjY,EAAaA,IAA8B,KAAfvJ,EAAQ,IAA4B,KAAfqI,EAAQ,KAGvDjM,EAEFM,EAAO8kB,KAAQ7kB,EAAS6kB,MAA0B,KAAlB7kB,EAAS6kB,KAC3B7kB,EAAS6kB,KAAO9kB,EAAO8kB,KACrC9kB,EAAOglB,SAAY/kB,EAAS+kB,UAAkC,KAAtB/kB,EAAS+kB,SAC/B/kB,EAAS+kB,SAAWhlB,EAAOglB,SAC7ChlB,EAAOklB,OAASjlB,EAASilB,OACzBllB,EAAO2C,MAAQ1C,EAAS0C,MACxBgJ,EAAUrI,MAEL,IAAIA,EAAQxC,OAGZ6K,IAASA,MACdA,EAAQrB,MACRqB,EAAUA,EAAQtE,OAAO/D,GACzBtD,EAAOklB,OAASjlB,EAASilB,OACzBllB,EAAO2C,MAAQ1C,EAAS0C,UACnB,KAAKkI,KAAKgd,kBAAkB5nB,EAASilB,QAAS,CAInD,GAAIjX,EAAW,CACbjO,EAAOglB,SAAWhlB,EAAO8kB,KAAOnZ,EAAQic,OAIxC,IAAInb,MAAazM,EAAO8kB,MAAQ9kB,EAAO8kB,KAAKxjB,QAAQ,KAAO,IAC1CtB,EAAO8kB,KAAKthB,MAAM,IAC/BiJ,KACFzM,EAAO6kB,KAAOpY,EAAWmb,QACzB5nB,EAAO8kB,KAAO9kB,EAAOglB,SAAWvY,EAAWmb,SAW/C,MARA5nB,GAAOklB,OAASjlB,EAASilB,OACzBllB,EAAO2C,MAAQ1C,EAAS0C,MAEnBkI,KAAKwF,OAAOrQ,EAAOmlB,WAActa,KAAKwF,OAAOrQ,EAAOklB,UACvDllB,EAAO6Z,MAAQ7Z,EAAOmlB,SAAWnlB,EAAOmlB,SAAW,KACpCnlB,EAAOklB,OAASllB,EAAOklB,OAAS,KAEjDllB,EAAOolB,KAAOplB,EAAOulB,SACdvlB,EAGT,IAAK2L,EAAQ7K,OAWX,MARAd,GAAOmlB,SAAW,KAEdnlB,EAAOklB,OACTllB,EAAO6Z,KAAO,IAAM7Z,EAAOklB,OAE3BllB,EAAO6Z,KAAO,KAEhB7Z,EAAOolB,KAAOplB,EAAOulB,SACdvlB,CAcT,KAAK,GARD+N,GAAOpC,EAAQoB,OAAM,GAAI,GACzBU,GACCzN,EAAO8kB,MAAQ7kB,EAAS6kB,MAAQnZ,EAAQ7K,OAAS,KACxC,MAATiN,GAAyB,OAATA,IAA2B,KAATA,EAInCnB,EAAK,EACA4a,EAAI7b,EAAQ7K,OAAQ0mB,GAAK,EAAGA,IACnCzZ,EAAOpC,EAAQ6b,GACF,MAATzZ,EACFpC,EAAQoM,OAAOyP,EAAG,GACA,OAATzZ,GACTpC,EAAQoM,OAAOyP,EAAG,GAClB5a,KACSA,IACTjB,EAAQoM,OAAOyP,EAAG,GAClB5a,IAKJ,KAAKC,IAAee,EAClB,KAAOhB,IAAMA,EACXjB,EAAQ8b,QAAQ,OAIhB5a,GAA6B,KAAflB,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGM,OAAO,IACpCN,EAAQ8b,QAAQ,IAGdha,GAAsD,MAAjC9B,EAAQnJ,KAAK,KAAKe,QAAO,IAChDoI,EAAQ7G,KAAK,GAGf,IAAIsH,GAA4B,KAAfT,EAAQ,IACpBA,EAAQ,IAA+B,MAAzBA,EAAQ,GAAGM,OAAO,EAGrC,IAAIgC,EAAW,CACbjO,EAAOglB,SAAWhlB,EAAO8kB,KAAO1Y,EAAa,GACbT,EAAQ7K,OAAS6K,EAAQic,QAAU,EAInE,IAAInb,MAAazM,EAAO8kB,MAAQ9kB,EAAO8kB,KAAKxjB,QAAQ,KAAO,IAC1CtB,EAAO8kB,KAAKthB,MAAM,IAC/BiJ,KACFzM,EAAO6kB,KAAOpY,EAAWmb,QACzB5nB,EAAO8kB,KAAO9kB,EAAOglB,SAAWvY,EAAWmb,SAyB/C,MArBA/a,GAAaA,GAAe7M,EAAO8kB,MAAQnZ,EAAQ7K,OAE/C+L,IAAeT,GACjBT,EAAQ8b,QAAQ,IAGb9b,EAAQ7K,OAIXd,EAAOmlB,SAAWxZ,EAAQnJ,KAAK,MAH/BxC,EAAOmlB,SAAW,KAClBnlB,EAAO6Z,KAAO,MAMXhP,KAAKwF,OAAOrQ,EAAOmlB,WAActa,KAAKwF,OAAOrQ,EAAOklB,UACvDllB,EAAO6Z,MAAQ7Z,EAAOmlB,SAAWnlB,EAAOmlB,SAAW,KACpCnlB,EAAOklB,OAASllB,EAAOklB,OAAS,KAEjDllB,EAAO6kB,KAAO5kB,EAAS4kB,MAAQ7kB,EAAO6kB,KACtC7kB,EAAO4kB,QAAU5kB,EAAO4kB,SAAW3kB,EAAS2kB,QAC5C5kB,EAAOolB,KAAOplB,EAAOulB,SACdvlB,GAGT0kB,IAAIjgB,UAAU8iB,UAAY,WACxB,GAAItnB,GAAOH,KAAKglB,KACZ1kB,EAAOylB,YAAYjc,KAAK3J,EACxBG,KACFA,EAAOA,EAAK,GACC,MAATA,IACFN,KAAKilB,KAAO3kB,EAAKmD,OAAO,IAE1BtD,EAAOA,EAAKsD,OAAO,EAAGtD,EAAKa,OAASV,EAAKU,SAEvCb,IAAMH,KAAKklB,SAAW/kB,oFC1tB5B,YAEAV,QAAOD,SACL0R,SAAU,SAAS9Q,GACjB,MAAuB,gBAAVA,IAEf2Q,SAAU,SAAS3Q,GACjB,MAAuB,gBAAVA,IAA8B,OAARA,GAErCmQ,OAAQ,SAASnQ,GACf,MAAe,QAARA,GAET2nB,kBAAmB,SAAS3nB,GAC1B,MAAc,OAAPA",
  "file": "postman-bdd.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nvar isIP = require('is-ip');\nvar url = require('url');\nvar cookies = require('./cookies');\n\nvar contentTypes = {\n  json: 'application/json',\n  text: 'text/plain',\n  html: 'text/html',\n};\n\nmodule.exports = chaiHttp;\n\n/**\n * This module is based on chai-http\n * https://github.com/chaijs/chai-http\n *\n * Copyright(c) 2011-2012 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nfunction chaiHttp (chai, _) {\n  var Assertion = chai.Assertion;\n\n  /**\n   * Assert that a response has a supplied status.\n   *\n   * @example\n   * expect(res).to.have.status(200);\n   *\n   * @param {Number} status number\n   * @name status\n   */\n  Assertion.addMethod('status', function (code) {\n    new Assertion(this._obj).to.have.property('status');\n    var status = this._obj.status;\n\n    this.assert(\n      status === code,\n      'expected the response to have status code #{exp} but got #{act}',\n      'expected the response to not have status code #{act}',\n      code,\n      status\n    );\n  });\n\n  /**\n   * Assert that a `Response` or `Request` object has headers.\n   *\n   * @example:\n   * expect(req).to.have.headers;\n   *\n   * @name headers\n   */\n  Assertion.addProperty('headers', function () {\n    var type = this._obj.method ? 'request' : 'response';\n\n    this.assert(\n      Object.keys(this._obj.headers || {}).length > 0,\n      'expected the ' + type + ' to have headers',\n      'expected the ' + type + ' to not have any headers'\n    );\n  });\n\n  /**\n   * Assert that a `Response` or `Request` object has a header.\n   * If a value is provided, equality to value will be asserted.\n   * You may also pass a regular expression to check.\n   *\n   * @example:\n   * expect(req).to.have.header('x-api-key');\n   * expect(req).to.have.header('content-type', 'text/plain');\n   * expect(req).to.have.header('content-type', /^text/);\n   *\n   * @param {String} header key (case insensitive)\n   * @param {String|RegExp} header value (optional)\n   * @name header\n   */\n  Assertion.addMethod('header', function (key, value) {\n    var header = getHeader(this._obj, key);\n    var headerExists = header !== undefined && header !== null;\n\n    if (arguments.length < 2) {\n      this.assert(\n        headerExists,\n        'expected header #{exp} to exist',\n        'expected header #{exp} to not exist',\n        key,\n        header\n      );\n    }\n    else if (value instanceof RegExp) {\n      this.assert(\n        headerExists && value.test(header),\n        \"expected header '\" + key + \"' to match #{exp} but got #{act}\",\n        \"expected header '\" + key + \"' to not match #{exp} but got #{act}\",\n        value,\n        headerExists ? header : '<header-not-set>'\n      );\n    }\n    else {\n      this.assert(\n        headerExists && header === value,\n        \"expected header '\" + key + \"' to have value #{exp} but got #{act}\",\n        \"expected header '\" + key + \"' to not have value #{exp}\",\n        value,\n        headerExists ? header : '<header-not-set>'\n      );\n    }\n  });\n\n  /**\n   * Assert that a string represents valid ip address.\n   *\n   * @example:\n   * expect('127.0.0.1').to.be.an.ip;\n   * expect('2001:0db8:85a3:0000:0000:8a2e:0370:7334').to.be.an.ip;\n   *\n   * @name ip\n   */\n  Assertion.addProperty('ip', function () {\n    this.assert(\n      isIP(this._obj),\n      'expected #{this} to be an ip',\n      'expected #{this} to not be an ip'\n    );\n  });\n\n  /**\n   * Assert that a `Response` or `Request` object has a given content-type.\n   *\n   * @example:\n   * expect(req).to.be.json;\n   * expect(req).to.be.html;\n   * expect(req).to.be.text;\n   *\n   * @name json\n   * @name html\n   * @name text\n   */\n  function checkContentType (name) {\n    var val = contentTypes[name];\n\n    Assertion.addProperty(name, function () {\n      var contentType = getHeader(this._obj, 'content-type');\n\n      this.assert(\n        contentType && contentType.indexOf(val) >= 0,\n        'expected the response type to be #{exp} but got #{act}',\n        'expected the response type to not be #{exp} (#{act})',\n        name,\n        contentType || '<content-type-not-set>'\n      );\n    });\n  }\n\n  Object\n    .keys(contentTypes)\n    .forEach(checkContentType);\n\n  /**\n   * Assert that a `Response` object has a redirect status code.\n   *\n   * @example:\n   * expect(res).to.redirect;\n   *\n   * @name redirect\n   */\n  Assertion.addProperty('redirect', function () {\n    var status = this._obj.status;\n\n    this.assert(\n      wasRedirected(this._obj),\n      'expected redirect status code but got ' + status,\n      'expected not to redirect but got ' + status + ' status'\n    );\n  });\n\n  /**\n   * ### .redirectTo\n   *\n   * Assert that a `Response` object redirects to the supplied location.\n   *\n   * ```js\n   * expect(res).to.redirectTo('http://example.com');\n   * ```\n   *\n   * @param {String} location url\n   * @name redirectTo\n   */\n  Assertion.addMethod('redirectTo', function (destination) {\n    var redirects = this._obj.redirects;\n    var isARedirect = wasRedirected(this._obj);\n    var status = this._obj.status;\n    var location = getHeader(this._obj, 'location');\n\n    if (redirects && redirects.length) {\n      this.assert(\n        redirects.indexOf(destination) > -1,\n        'expected redirect to ' + destination + ' but got ' + redirects.join(' then '),\n        'expected not to redirect to ' + destination + ' but got ' + redirects.join(' then ')\n      );\n    }\n    else {\n      this.assert(\n        isARedirect && location === destination,\n        'expected redirect to #{exp} but got #{act}',\n        'expected not to redirect to #{exp}',\n        destination,\n        isARedirect ? location : status\n      );\n    }\n  });\n\n  /**\n   * Assert that a `Response` or `Request` object has query string parameters.\n   *\n   * @example:\n   * expect(req).to.have.params;\n   *\n   * @name params\n   */\n  Assertion.addProperty('params', function () {\n    var params = url.parse(this._obj.url, true).query;\n\n    this.assert(\n      Object.keys(params).length > 0,\n      'expected the request to have query parameters',\n      'expected the request to not have any query parameters'\n    );\n  });\n\n  /**\n   * Assert that a `Request` object has a query string parameter with a given\n   * key, (optionally) equal to value\n   *\n   * @example:\n   * expect(req).to.have.param('orderby');\n   * expect(req).to.have.param('orderby', 'date');\n   * expect(req).to.not.have.param('limit');\n   *\n   * @param {String} parameter name\n   * @param {String} parameter value\n   * @name param\n   */\n  Assertion.addMethod('param', function (name, value) {\n    var params = url.parse(this._obj.url, true).query;\n    var param = params[name];\n    var paramExists = param !== undefined && param !== null;\n\n    if (arguments.length < 2) {\n      this.assert(\n        paramExists,\n        'expected query parameter #{exp} to exist',\n        'expected query parameter #{exp} to not exist',\n        name,\n        param\n      );\n    }\n    else if (value instanceof RegExp) {\n      this.assert(\n        paramExists && value.test(param),\n        \"expected query parameter '\" + name + \"' to match #{exp} but got #{act}\",\n        \"expected query parameter '\" + name + \"' to not match #{exp} but got #{act}\",\n        value,\n        paramExists ? param : '<parameter-does-not-exist>'\n      );\n    }\n    else {\n      this.assert(\n        paramExists && param === value,\n        \"expected query parameter '\" + name + \"' to have value #{exp} but got #{act}\",\n        \"expected query parameter '\" + name + \"' to not have value #{exp}\",\n        value,\n        paramExists ? param : '<parameter-does-not-exist>'\n      );\n    }\n  });\n\n  /**\n   * Assert that a `Response` or `Request` object has cookies.\n   *\n   * @example:\n   * expect(req).to.have.cookies;\n   *\n   * @name cookies\n   */\n  Assertion.addProperty('cookies', function () {\n    var type = this._obj.method ? 'request' : 'response';\n    var allCookies = getCookies(this._obj);\n\n    this.assert(\n      allCookies.length > 0,\n      'expected the ' + type + ' to have cookies',\n      'expected the ' + type + ' to not have any cookies'\n    );\n  });\n\n  /**\n   * Assert that a `Request` or `Response` object has a cookie header with a\n   * given key, (optionally) equal to value\n   *\n   * @example:\n   * expect(req).to.have.cookie('session_id');\n   * expect(req).to.have.cookie('session_id', '1234');\n   * expect(req).to.not.have.cookie('PHPSESSID');\n   * expect(res).to.have.cookie('session_id');\n   * expect(res).to.have.cookie('session_id', '1234');\n   * expect(res).to.not.have.cookie('PHPSESSID');\n   *\n   * @param {String} parameter name\n   * @param {String} parameter value\n   * @name cookie\n   */\n  Assertion.addMethod('cookie', function (name, value) {\n    var cookie = getCookie(this._obj, name) || {};\n    var cookieExists = cookie.value !== undefined && cookie.value !== null;\n\n    if (arguments.length < 2) {\n      this.assert(\n        cookieExists,\n        'expected cookie #{exp} to exist',\n        'expected cookie #{exp} to not exist',\n        name,\n        cookie.value\n      );\n    }\n    else if (value instanceof RegExp) {\n      this.assert(\n        cookieExists && value.test(cookie.value),\n        \"expected cookie '\" + name + \"' to match #{exp} but got #{act}\",\n        \"expected cookie '\" + name + \"' to not match #{exp} but got #{act}\",\n        value,\n        cookieExists ? cookie.value : '<cookie-not-set>'\n      );\n    }\n    else {\n      this.assert(\n        cookieExists && cookie.value === value,\n        \"expected cookie '\" + name + \"' to have value #{exp} but got #{act}\",\n        \"expected cookie '\" + name + \"' to not have value #{exp}\",\n        value,\n        cookieExists ? cookie.value : '<cookie-not-set>'\n      );\n    }\n  });\n\n  /**\n   * Asserts that the object matches the given JSON schema\n   *\n   * @example:\n   * expect(req.body).to.have.scheam(myJsonSchema);\n   *\n   * @param {object} The JSON schema to validate against\n   * @name schema\n   */\n  chai.Assertion.addMethod('schema', function (schema) {\n    var valid = tv4.validate(this._obj, schema);\n    var negate = _.flag(this, 'negate');\n\n    if ((valid && negate) || (!valid && !negate)) {\n      var dataPath = tv4.error.dataPath;\n      var schemaPath = tv4.error.schemaPath;\n      var message = tv4.error.message;\n\n      if (dataPath) {\n        var propPath = dataPath.substr(1).split('/').join('.');\n        message = propPath + ' is invalid. ' + message;\n      }\n\n      var error = new SyntaxError(message);\n      error.dataPath = dataPath;\n      error.schemaPath = schemaPath;\n      throw error;\n    }\n  });\n}\n\n/**\n * Return a header from `Request` or `Response` object.\n *\n * @param {Request|Response} object\n * @param {String} Header\n * @returns {String|Undefined}\n */\nfunction getHeader (obj, key) {\n  // SuperAgent `response` object\n  if (obj.getHeader) {\n    return obj.getHeader(key);\n  }\n\n  // Postman `request` object\n  key = (key || '').toLowerCase();\n  var keys = Object.keys(obj.headers);\n  for (var i = 0; i < keys.length; i++) {\n    if (keys[i].toLowerCase() === key) {\n      return obj.headers[keys[i]];\n    }\n  }\n}\n\n/**\n * Returns ALL cookies from a `Request` or `Response` object.\n *\n * @param {Request|Response} object\n * @returns {object[]}\n */\nfunction getCookies (obj) {\n  // SuperAgent `response` object\n  if (obj.cookies) {\n    return obj.cookies;\n  }\n\n  // Postman `request` object\n  var header = getHeader(obj, 'cookie');\n  return cookies.parseRequestCookies(header);\n}\n\n/**\n * Returns a cookie from `Request` or `Response` object.\n *\n * @param {Request|Response} object\n * @param {String} name\n * @returns {String|Undefined}\n */\nfunction getCookie (obj, name) {\n  // SuperAgent `response` object\n  if (obj.getCookie) {\n    return obj.getCookie(name);\n  }\n\n  // Postman `request` object\n  var allCookies = getCookies(obj);\n  return cookies.getCookie(allCookies, name);\n}\n\n/**\n * Determines whether a `Request` or `Response` object has been redirected.\n *\n * @param {Request|Response} object\n * @returns {Boolean}\n */\nfunction wasRedirected (obj) {\n  var redirectCodes = [301, 302, 303, 307, 308];\n  var redirects = obj.redirects;\n  var status = obj.status;\n\n  return redirectCodes.indexOf(status) >= 0 || redirects && redirects.length;\n}\n",
    "'use strict';\n\nvar Runnable = require('./runnable');\nvar Hook = require('./hook');\nvar State = require('./state');\n\nmodule.exports = PostmanBDD;\n\n/**\n * The Postman BDD runtime\n */\nfunction PostmanBDD () {\n  var state = this.state = new State();\n\n  this.hooks = {\n    before: new Hook('before', state),\n    after: new Hook('after', state),\n    beforeEach: new Hook('beforeEach', state),\n    afterEach: new Hook('afterEach', state),\n  };\n\n  this.before = PostmanBDD.prototype.before.bind(this);\n  this.after = PostmanBDD.prototype.after.bind(this);\n  this.beforeEach = PostmanBDD.prototype.beforeEach.bind(this);\n  this.afterEach = PostmanBDD.prototype.afterEach.bind(this);\n  this.describe = PostmanBDD.prototype.describe.bind(this);\n  this.it = PostmanBDD.prototype.it.bind(this);\n}\n\n/**\n * Registers a function to be called before any tests for a request.\n *\n * @param {string} [title] - Optinoal title for this hook\n * @param {function} fn - The hook to run\n */\nPostmanBDD.prototype.before = function (title, fn) {\n  this.hooks.before.push(title, fn);\n};\n\n/**\n * Registers a function to be called after all tests for a request.\n *\n * @param {string} [title] - Optinoal title for this hook\n * @param {function} fn - The hook to run\n */\nPostmanBDD.prototype.after = function (title, fn) {\n  this.hooks.after.push(title, fn);\n};\n\n/**\n * Registers a function to be called before each test.\n *\n * @param {string} [title] - Optinoal title for this hook\n * @param {function} fn - The hook to run\n */\nPostmanBDD.prototype.beforeEach = function (title, fn) {\n  this.hooks.beforeEach.push(title, fn);\n};\n\n/**\n * Registers a function to be called after each test.\n *\n * @param {string} [title] - Optinoal title for this hook\n * @param {function} fn - The hook to run\n */\nPostmanBDD.prototype.afterEach = function (title, fn) {\n  this.hooks.afterEach.push(title, fn);\n};\n\n/**\n * Runs a test suite.\n *\n * Any \"before\" hooks are run first.  Any \"after\" hooks are run afterward.\n *\n * @param {string} [title] - Optional title for this test suite\n * @param {function} fn - The test suite to run\n * @returns {object} - An object with test names as keys, and boolean results as values\n */\nPostmanBDD.prototype.describe = function (title, fn) {\n  this.oneTimeInitialization();\n\n  var runnable = new Runnable('describe', this.state, title, fn);\n  runnable.run();\n\n  if (this.state.isFinished()) {\n    // This is a top-level `describe` block, so run any `after` hooks\n    this.hooks.after.run();\n  }\n\n  return this.state.results;\n};\n\n/**\n * Runs a single test\n *\n * Any \"beforeEach\" hooks are run first.  Any \"afterEach\" hooks are run after.\n *\n * @param {string} [title] - Optional title for this test\n * @param {function} fn - The test to run\n * @returns {boolean} - The boolean result of the test\n */\nPostmanBDD.prototype.it = function (title, fn) {\n  this.oneTimeInitialization();\n  this.hooks.beforeEach.run();\n\n  var runnable = new Runnable('it', this.state, title, fn);\n  runnable.run();\n\n  this.hooks.afterEach.run();\n  return runnable.result;\n};\n\n/**\n * Inititializes state and runs `before` hooks before the first Runnable\n * in a new test script.\n */\nPostmanBDD.prototype.oneTimeInitialization = function () {\n  if (!this.state.isStarted()) {\n    // This is the first Runnable in a new test script,\n    // so reset all state and run any `before` hooks\n    this.hooks.before.run();\n  }\n};\n\n",
    "'use strict';\n\nvar CookieJar = require('cookiejar').CookieJar;\nvar CookieAccessInfo = require('cookiejar').CookieAccessInfo;\n\nmodule.exports = {\n  /**\n   * Returns the cookie with the specified name from an array of cookies.\n   *\n   * @param {object[]} allCookies\n   * @param {string} name\n   * @returns {object|undefined}\n   */\n  getCookie: function (allCookies, name) {\n    name = (name || '').toLowerCase();\n\n    var foundCookie = allCookies.find(function (cookie) {\n      return cookie && cookie.name.toLowerCase() === name;\n    });\n\n    return foundCookie;\n  },\n\n  /**\n   * Parses a \"Cookie\" header and returns an array of cookie objects.\n   *\n   * @param {string} [header]\n   * @returns {object[]}\n   */\n  parseRequestCookies: function (header) {\n    var cookieJar = new CookieJar();\n\n    if (header) {\n      var cookies = header\n        .split(';')\n        .map(function (cookie) {\n          return cookie.trim();\n        });\n\n      cookieJar.setCookies(cookies);\n    }\n\n    var allCookies = cookieJar.getCookies(CookieAccessInfo.All);\n    return allCookies;\n  },\n\n  /**\n   * Parses one or more \"Set-Cookie\" headers and returns an array of cookie objects.\n   *\n   * @param {string|string[]} [headers] - The value of the \"Set-Cookie\" header(s)\n   * @returns {object[]}\n   */\n  parseResponseCookies: function (headers) {\n    var cookieJar = new CookieJar();\n\n    if (headers) {\n      // The `setCookies` method supports a string or array of strings\n      cookieJar.setCookies(headers);\n    }\n\n    var allCookies = cookieJar.getCookies(CookieAccessInfo.All);\n    return allCookies;\n  },\n};\n",
    "'use strict';\n\nvar Runnable = require('./runnable');\n\nmodule.exports = Hook;\n\n/**\n * A hook is a list of runnables to run before/after a `describe` or `it` block.\n *\n * @param {string} type - The type of the hook (e.g. \"before\", \"afterEach\", etc)\n * @param {State} state - An object containing the state of the current test script\n */\nfunction Hook (type, state) {\n  this.type = type;\n  this.state = state;\n  this.runnables = [];\n}\n\n/**\n * Runs all of this hook's runnables\n */\nHook.prototype.run = function () {\n  // Don't run if we're already in a hook\n  if (!this.state.inAHook()) {\n    this.runnables.forEach(function (runnable) {\n      runnable.run();\n    });\n  }\n};\n\n/**\n * Adds a new runnable for this hook\n *\n * @param {string} [title] - Optional title for the runnable\n * @param {function} [fn] - The function to run\n */\nHook.prototype.push = function (title, fn) {\n  var runnable = new Runnable(this.type, this.state, title, fn);\n  runnable.isHook = true;\n  this.runnables.push(runnable);\n};\n",
    "// Disable \"strict mode\" for this file,\n// so we can define variables with global scope\n/* eslint strict:off */\n\nvar PostmanBDD = require('./bdd');\nvar SuperAgent = require('./response');\nvar assertions = require('./assertions');\nvar options = require('./options');\nvar log = require('./log');\n\n// Expose the Postman BDD options\nmodule.exports = options;\n\n// Expose a `reset()` method for testing purposes\nmodule.exports.reset = initPostmanBDD;\n\n// Initialize Postman BDD\ninitPostmanBDD();\n\n/**\n * Defines (or redefines) all Postman BDD globals\n */\nfunction initPostmanBDD () {\n  log.info('Using Postman BDD');\n  initBDD();\n  initSuperAgent();\n  initChai();\n}\n\n/**\n * Defines (or redefines) BDD globals\n */\nfunction initBDD () {\n  var postmanBDD = new PostmanBDD();\n  before = postmanBDD.before;\n  after = postmanBDD.after;\n  beforeEach = postmanBDD.beforeEach;\n  afterEach = postmanBDD.afterEach;\n  describe = postmanBDD.describe;\n  it = postmanBDD.it;\n}\n\n/**\n * Defines (or redefines) SuperAgent globals\n */\nfunction initSuperAgent () {\n  var superAgent = new SuperAgent();\n  response = superAgent.response;\n}\n\n/**\n * Defines (or redefines) Chai.js globals\n */\nfunction initChai () {\n  chai = require('chai');\n  assert = chai.assert;\n  expect = chai.expect;\n  chai.should();\n\n  // Chai-HTTP Assertions\n  chai.use(assertions);\n}\n",
    "'use strict';\n\nvar options = require('./options');\n\nvar levels = ['silent', 'error', 'warn', 'info', 'debug'];\n\nvar log = module.exports = {\n  /**\n   * Determines whether the given logging level is enabled\n   *\n   * @param {string} level\n   * @returns {boolean}\n   */\n  isEnabled: function (level) {\n    return levels.indexOf(options.logLevel) >= levels.indexOf(level);\n  },\n\n  /**\n   * Returns a POJO containing all the properties of the given Error object.\n   * This is necessary because Postman's `console.log()` methods don't include\n   * properties from the Error prototype.\n   *\n   * @param {Error} err\n   * @returns {object|undefined}\n   */\n  errorToPOJO: function (err) {\n    if (err && typeof err === 'object') {\n      return Object.keys(err).concat(['name', 'message', 'stack']).reduce(function (pojo, key) {\n        pojo[key] = err[key];\n        return pojo;\n      }, {});\n    }\n  },\n};\n\nlevels.forEach(function (level) {\n  log[level] = function () {\n    if (this.isEnabled(level)) {\n      var logMethod = console.log;\n      if (typeof console[level] === 'function') {\n        logMethod = console[level];\n      }\n\n      logMethod.apply(console, arguments);\n    }\n  };\n});\n",
    "'use strict';\n\nmodule.exports = {\n  /**\n   * The logging level (silent, error, warn, info, debug)\n   *\n   * @type {string}\n   */\n  logLevel: 'warn',\n};\n",
    "'use strict';\n\nvar log = require('./log');\nvar cookies = require('./cookies');\n\n/**\n * SuperAgent's Response API\n *\n * For more info, see:\n * https://visionmedia.github.io/superagent/#response-properties\n */\nmodule.exports = function SuperAgent () {\n  var superAgent = this;\n\n  superAgent.response = {\n    /**\n     * Returns the value of the given header.  Header names are case insensitive.\n     *\n     * https://visionmedia.github.io/superagent/#response-content-type\n     *\n     * @param {string} name\n     * @returns {?string}\n     */\n    getHeader: function (name) {\n      if (typeof postman === 'object' && typeof postman.getResponseHeader === 'function') {\n        return postman.getResponseHeader(name);\n      }\n      else {\n        name = (name || '').toLowerCase();\n        return this.headers[name];\n      }\n    },\n\n    /**\n     * Returns the value of the given cookie.\n     *\n     * @param {string} name\n     * @returns {?string}\n     */\n    getCookie: function (name) {\n      if (typeof postman === 'object' && typeof postman.getResponseCookie === 'function') {\n        return postman.getResponseCookie(name);\n      }\n      else {\n        return cookies.getCookie(this.cookies, name);\n      }\n    },\n  };\n\n  defineProperties(superAgent.response, {\n    /**\n     * Returns the HTTP response status code\n     * @type {number}\n     */\n    status: function () {\n      return typeof responseCode === 'object' ? responseCode.code : 0;\n    },\n\n    /**\n     * Returns the HTTP response status type (1, 2, 3, 4, or 5)\n     * @type {number}\n     */\n    statusType: function () {\n      return Math.floor(this.status / 100);\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"info\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    info: function () {\n      return this.statusType === 1;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"ok\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    ok: function () {\n      return this.statusType === 2;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"redirect\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    redirect: function () {\n      return this.statusType === 3;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"client error\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    clientError: function () {\n      return this.statusType === 4;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"server error\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    serverError: function () {\n      return this.statusType === 5;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP error status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    error: function () {\n      return this.clientError || this.serverError;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"accepted\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    accepted: function () {\n      return this.status === 202;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"no content\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    noContent: function () {\n      return this.status === 204 || this.status === 1223;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"bad request\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    badRequest: function () {\n      return this.status === 400;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"unauthorized\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    unauthorized: function () {\n      return this.status === 401;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"not acceptable\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    notAcceptable: function () {\n      return this.status === 406;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"not found\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    notFound: function () {\n      return this.status === 404;\n    },\n\n    /**\n     * Indicates whether the response is an HTTP \"forbidden\" status\n     *\n     * https://visionmedia.github.io/superagent/#response-status\n     *\n     * @type {boolean}\n     */\n    forbidden: function () {\n      return this.status === 403;\n    },\n\n    /**\n     * Returns the unparsed response body string\n     * @type {string}\n     */\n    text: function () {\n      return typeof responseBody === 'string' ? responseBody : '';\n    },\n\n    /**\n     * The parsed response body.\n     * @type {object}\n     */\n    body: function () {\n      var parsedBody = parseResponeBody(this);\n\n      // Replace this getter function with the parsed response body\n      Object.defineProperty(this, 'body', {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: parsedBody,\n      });\n\n      return parsedBody;\n    },\n\n    /**\n     * The parsed response headers, with lowercased field names.\n     *\n     * NOTE: SuperAgent exposes this property as both `header` and `headers`\n     *\n     * @type {object}\n     */\n    header: function () {\n      return typeof responseHeaders === 'object' ? responseHeaders : {};\n    },\n\n    /**\n     * The parsed response headers, with lowercased field names.\n     *\n     * NOTE: SuperAgent exposes this property as both `header` and `headers`\n     *\n     * @type {object}\n     */\n    headers: function () {\n      return typeof responseHeaders === 'object' ? responseHeaders : {};\n    },\n\n    /**\n     * The response time, in milliseconds\n     * @type {number}\n     */\n    time: function () {\n      return typeof responseTime === 'number' ? responseTime : 0;\n    },\n\n    /**\n     * Returns the value of the Content-Type header without the charset (e.g. \"text/html\")\n     * @type {string}\n     */\n    type: function () {\n      var contentType = this.getHeader('content-type') || '';\n      return contentType.split(';')[0];\n    },\n\n    /**\n     * Returns the value of the Content-Type header without the MIME type (e.g. \"utf8\")\n     * @type {string}\n     */\n    charset: function () {\n      var contentType = this.getHeader('content-type') || '';\n      var match = /charset=([a-zA-Z0-9_-]+)/i.exec(contentType);\n      if (!match) { return ''; }\n      return match[1];\n    },\n\n    /**\n     * The parsed response cookies.\n     *\n     * @type {object[]}\n     */\n    cookies: function () {\n      if (typeof responseCookies === 'object' && responseCookies.length > 0) {\n        return responseCookies;\n      }\n\n      var header = this.getHeader('set-cookie');\n      return cookies.parseResponseCookies(header);\n    },\n  });\n};\n\n/**\n * Defines the read-only property getters on the given object\n *\n * @param {object} getters\n */\nfunction defineProperties (obj, getters) {\n  Object.keys(getters).forEach(function (name) {\n    Object.defineProperty(obj, name, {\n      configurable: true,\n      enumerable: true,\n      get: getters[name],\n    });\n  });\n}\n\n/**\n * Parses the response body as JSON, XML, or plain-text\n *\n * @param {object} response\n * @returns {object|string}\n */\nfunction parseResponeBody (response) {\n  if (response.type.indexOf('json') >= 0) {\n    // The response looks like a JSON mime type (e.g. \"text/json\", \"application/hal+json\", etc.)\n    try {\n      return JSON.parse(response.text);\n    }\n    catch (err) {\n      log.error('Unable to parse the response body as JSON', log.errorToPOJO(err));\n    }\n  }\n\n  if (response.type.indexOf('xml') >= 0) {\n    // The response looks like an XML mime type (e.g. \"text/xml\", \"application/soap+xml\", etc.)\n    try {\n      var json = xml2Json(response.text);\n\n      // NOTE: The objects that xml2Json returns don't inherit from the Object prototype,\n      // which means they don't work with Chai's `should` syntax.  So we re-parse the JSON\n      // structure to convert the objects to \"normal\" objects that work with Chai.\n      return JSON.parse(JSON.stringify(json));\n    }\n    catch (err) {\n      log.error('Unable to parse the response body as XML', log.errorToPOJO(err));\n    }\n  }\n\n  // If all else fails, just return the response body as plain-text\n  return response.text;\n}\n",
    "'use strict';\n\nvar log = require('./log');\n\nmodule.exports = Runnable;\n\n/**\n * Runs a user-defined function, and captures the results.\n * Runnables include test suites (describe), tests (it), and hooks (before, after, beforeEach, afterEach)\n *\n * @param {string} type - The type of runnable (\"describe\", \"it\", \"before\", \"afterEach\", etc.)\n * @param {State} state - An object containing the state of the current test script\n * @param {string} [title] - Optional title for the runnable\n * @param {function} [fn] - The function to run\n * @class\n */\nfunction Runnable (type, state, title, fn) {\n  if (typeof title === 'function') {\n    fn = title;\n    title = '';\n  }\n\n  this.type = type;\n  this.state = state;\n  this.isHook = false;\n  this.title = title;\n  this.fn = fn;\n  this.result = null;\n  this.error = null;\n}\n\n/**\n * Runs the user-defined function and captures the results.\n *\n * The result is a boolean value, which can be accessed at {@link Runnable#result}.\n * If no error occurrs, then the result is `true`.  For \"it\" tests, this result is also added\n * to {@link State.results}, so it can be returned to the Postman Collection Runner.\n * If an error DOES occur, then the result is `false`, and the result is ALWAYS added to\n * {@link State.results}, even for hooks and test suites.\n */\nRunnable.prototype.run = function run () {\n  this.state.counters[this.type]++;\n  this.title = this.title ||\n    ((this.type === 'it' ? 'test' : this.type) + ' #' + this.state.counters[this.type]);\n\n  this.state.stack.push(this);\n  var fullTitle = this.state.stack.toString();\n  log.debug('Running ' + fullTitle);\n\n  try {\n    this.fn();\n    this.success(fullTitle);\n  }\n  catch (e) {\n    this.failure(e, fullTitle);\n  }\n  finally {\n    this.state.stack.pop();\n  }\n};\n\n/**\n * Records a successful result for this runnable.\n *\n * @param {string} [fullTitle] - The full title (including any parent Runnables)\n */\nRunnable.prototype.success = function (fullTitle) {\n  log.info('passed: ' + fullTitle);\n\n  this.result = true;\n\n  if (this.type === 'it') {\n    this.state.results[fullTitle || this.title] = true;\n  }\n};\n\n/**\n * Records a failure result for this runnable.\n *\n * @param {Error} err - The error that occurred\n * @param {string} [fullTitle] - The full title (including any parent Runnables)\n */\nRunnable.prototype.failure = function (err, fullTitle) {\n  fullTitle = fullTitle || this.title;\n  log.error('failed: ' + fullTitle, log.errorToPOJO(err));\n\n  this.result = false;\n  this.error = err;\n  this.state.results[fullTitle + ' (' + err.message + ')'] = false;\n};\n",
    "'use strict';\n\nmodule.exports = State;\n\n/**\n * Keeps track of the state for a single Postman test script.\n */\nfunction State () {\n  /**\n   * Postman's global `tests` variable.\n   * All test results must be stored on this object as boolean properties\n   */\n  this.results = resetTests();\n\n  /**\n   * The stack of runnables that are currently running\n   */\n  this.stack = [];\n\n  /**\n   * Keeps track of how many runnables of each type are currently running.\n   */\n  this.counters = {\n    describe: 0,\n    it: 0,\n    before: 0,\n    after: 0,\n    beforeEach: 0,\n    afterEach: 0,\n  };\n\n  /**\n   * Pretty formatting for the stack\n   */\n  this.stack.toString = function () {\n    return this.map(function (r) { return r.title; }).join(' ');\n  };\n}\n\n/**\n * Determines whether the test script has started\n * (i.e. at least one `describe`, `it`, or hook has started)\n *\n * @returns {boolean}\n */\nState.prototype.isStarted = function () {\n  var me = this;\n\n  if (this.stack.length > 0) {\n    // We're currently in a Runnable\n    return true;\n  }\n  else {\n    // Have any Runnables ran yet?\n    return Object.keys(this.counters).some(function (key) {\n      return me.counters[key] > 0;\n    });\n  }\n};\n\n/**\n * Determines whether the test script has finished\n * (i.e. the top-level `describe` block has finished running)\n *\n * @returns {boolean}\n */\nState.prototype.isFinished = function () {\n  return this.stack.length === 0 && this.counters.describe > 0;\n};\n\n/**\n * Determines whether we are currently inside a hook\n *\n * @returns {boolean}\n */\nState.prototype.inAHook = function () {\n  return this.stack.some(function (runnable) {\n    return runnable.isHook;\n  });\n};\n\n/**\n * Deletes all properties of the Postman `tests` object, to reset any previous\n * test state. This is necessary when the user clicks the \"Send\" button multiple\n * times in Request Builder, which re-uses the same `tests` object each time.\n *\n * @reeturns {object} - Returns the empty `tests` object\n */\nfunction resetTests () {\n  if (typeof tests !== 'object') {\n    throw new Error(\n      'Postman BDD can only run inside the Postman scripting runtime ' +\n      '(the \"tests\" global variable is missing)'\n    );\n  }\n\n  // Clear any results from a previous test run\n  // (this happens when the user user clicks the \"send\" button multiple times in Request Builder)\n  Object.keys(tests).forEach(function (key) {\n    delete tests[key];\n  });\n\n  return tests;\n}\n",
    "module.exports = require('./lib/chai');\n",
    "/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = []\n  , exports = module.exports = {};\n\n/*!\n * Chai version\n */\n\nexports.version = '3.5.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(this, util);\n    used.push(fn);\n  }\n\n  return this;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n",
    "/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * @api private\n   */\n\n  function Assertion (obj, msg, stack) {\n    flag(this, 'ssfi', stack || arguments.callee);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (true !== showDiff) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      var msg = util.getMessage(this, arguments)\n        , actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n",
    "module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n   includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40\n\n};\n",
    "/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , toString = Object.prototype.toString\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to\n   * improve the readability of your assertions. They\n   * do not provide testing capabilities unless they\n   * have been overwritten by a plugin.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same' ].forEach(function (chain) {\n    Assertion.addProperty(chain, function () {\n      return this;\n    });\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates any of assertions following in the chain.\n   *\n   *     expect(foo).to.not.equal('bar');\n   *     expect(goodFn).to.not.throw(Error);\n   *     expect({ foo: 'baz' }).to.have.property('foo')\n   *       .and.not.equal('bar');\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Sets the `deep` flag, later used by the `equal` and\n   * `property` assertions.\n   *\n   *     expect(foo).to.deep.equal({ bar: 'baz' });\n   *     expect({ foo: { bar: { baz: 'quux' } } })\n   *       .to.have.deep.property('foo.bar.baz', 'quux');\n   *\n   * `.deep.property` special characters can be escaped\n   * by adding two slashes before the `.` or `[]`.\n   *\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Sets the `any` flag, (opposite of the `all` flag)\n   * later used in the `keys` assertion.\n   *\n   *     expect(foo).to.have.any.keys('bar', 'baz');\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false)\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Sets the `all` flag (opposite of the `any` flag)\n   * later used by the `keys` assertion.\n   *\n   *     expect(foo).to.have.all.keys('bar', 'baz');\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type)\n   *\n   * The `a` and `an` assertions are aliases that can be\n   * used either as language chains or to assert a value's\n   * type.\n   *\n   *     // typeof\n   *     expect('test').to.be.a('string');\n   *     expect({ foo: 'bar' }).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(new Promise).to.be.a('promise');\n   *     expect(new Float32Array()).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   *     // es6 overrides\n   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');\n   *\n   *     // language chain\n   *     expect(foo).to.be.an.instanceof(Foo);\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj)\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(value)\n   *\n   * The `include` and `contain` assertions can be used as either property\n   * based language chains or as methods to assert the inclusion of an object\n   * in an array or a substring in a string. When used as language chains,\n   * they toggle the `contains` flag for the `keys` assertion.\n   *\n   *     expect([1,2,3]).to.include(2);\n   *     expect('foobar').to.contain('foo');\n   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Object|String|Number} obj\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    _.expectTypes(this, ['array', 'object', 'string']);\n\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var expected = false;\n\n    if (_.type(obj) === 'array' && _.type(val) === 'object') {\n      for (var i in obj) {\n        if (_.eql(obj[i], val)) {\n          expected = true;\n          break;\n        }\n      }\n    } else if (_.type(val) === 'object') {\n      if (!flag(this, 'negate')) {\n        for (var k in val) new Assertion(obj).property(k, val[k]);\n        return;\n      }\n      var subset = {};\n      for (var k in val) subset[k] = obj[k];\n      expected = _.eql(subset, val);\n    } else {\n      expected = (obj != undefined) && ~obj.indexOf(val);\n    }\n    this.assert(\n        expected\n      , 'expected #{this} to include ' + _.inspect(val)\n      , 'expected #{this} to not include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is truthy.\n   *\n   *     expect('everything').to.be.ok;\n   *     expect(1).to.be.ok;\n   *     expect(false).to.not.be.ok;\n   *     expect(undefined).to.not.be.ok;\n   *     expect(null).to.not.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is `true`.\n   *\n   *     expect(true).to.be.true;\n   *     expect(1).to.not.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , this.negate ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is `false`.\n   *\n   *     expect(false).to.be.false;\n   *     expect(0).to.not.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , this.negate ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is `null`.\n   *\n   *     expect(null).to.be.null;\n   *     expect(undefined).to.not.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *     expect(null).to.not.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   * Asserts that the target is `NaN`.\n   *\n   *     expect('foo').to.be.NaN;\n   *     expect(4).not.to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi'\n   *       , bar = null\n   *       , baz;\n   *\n   *     expect(foo).to.exist;\n   *     expect(bar).to.not.exist;\n   *     expect(baz).to.not.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    this.assert(\n        null != flag(this, 'object')\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n\n  /**\n   * ### .empty\n   *\n   * Asserts that the target's length is `0`. For arrays and strings, it checks\n   * the `length` property. For objects, it gets the count of\n   * enumerable keys.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *     expect({}).to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var obj = flag(this, 'object')\n      , expected = obj;\n\n    if (Array.isArray(obj) || 'string' === typeof object) {\n      expected = obj.length;\n    } else if (typeof obj === 'object') {\n      expected = Object.keys(obj).length;\n    }\n\n    this.assert(\n        !expected\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an arguments object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = Object.prototype.toString.call(obj);\n    this.assert(\n        '[object Arguments]' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(value)\n   *\n   * Asserts that the target is strictly equal (`===`) to `value`.\n   * Alternately, if the `deep` flag is set, asserts that\n   * the target is deeply equal to `value`.\n   *\n   *     expect('hello').to.equal('hello');\n   *     expect(42).to.equal(42);\n   *     expect(1).to.not.equal(true);\n   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @alias deep.equal\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(value)\n   *\n   * Asserts that the target is deeply equal to `value`.\n   *\n   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(value)\n   *\n   * Asserts that the target is greater than `value`.\n   *\n   *     expect(10).to.be.above(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above ' + n\n        , 'expected #{this} to be at most ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(value)\n   *\n   * Asserts that the target is greater than or equal to `value`.\n   *\n   *     expect(10).to.be.at.least(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.least(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least ' + n\n        , 'expected #{this} to be below ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(value)\n   *\n   * Asserts that the target is less than `value`.\n   *\n   *     expect(5).to.be.below(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below ' + n\n        , 'expected #{this} to be at least ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(value)\n   *\n   * Asserts that the target is less than or equal to `value`.\n   *\n   *     expect(5).to.be.at.most(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.most(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most ' + n\n        , 'expected #{this} to be above ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish)\n   *\n   * Asserts that the target is within a range.\n   *\n   *     expect(7).to.be.within(5,10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a length range. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name within\n   * @param {Number} start lowerbound inclusive\n   * @param {Number} finish upperbound inclusive\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , range = start + '..' + finish;\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor)\n   *\n   * Asserts that the target is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , Chai = new Tea('chai');\n   *\n   *     expect(Chai).to.be.an.instanceof(Tea);\n   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} message _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var name = _.getName(constructor);\n    this.assert(\n        flag(this, 'object') instanceof constructor\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name, [value])\n   *\n   * Asserts that the target has a property `name`, optionally asserting that\n   * the value of that property is strictly equal to  `value`.\n   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n   * references into objects and arrays.\n   *\n   *     // simple referencing\n   *     var obj = { foo: 'bar' };\n   *     expect(obj).to.have.property('foo');\n   *     expect(obj).to.have.property('foo', 'bar');\n   *\n   *     // deep referencing\n   *     var deepObj = {\n   *         green: { tea: 'matcha' }\n   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n   *     };\n   *\n   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n   *\n   * You can also use an array as the starting point of a `deep.property`\n   * assertion, or traverse nested arrays.\n   *\n   *     var arr = [\n   *         [ 'chai', 'matcha', 'konacha' ]\n   *       , [ { tea: 'chai' }\n   *         , { tea: 'matcha' }\n   *         , { tea: 'konacha' } ]\n   *     ];\n   *\n   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n   *\n   * Furthermore, `property` changes the subject of the assertion\n   * to be the value of that property from the original object. This\n   * permits for further chainable assertions on that property.\n   *\n   *     expect(obj).to.have.property('foo')\n   *       .that.is.a('string');\n   *     expect(deepObj).to.have.property('green')\n   *       .that.is.an('object')\n   *       .that.deep.equals({ tea: 'matcha' });\n   *     expect(deepObj).to.have.property('teas')\n   *       .that.is.an('array')\n   *       .with.deep.property('[2]')\n   *         .that.deep.equals({ tea: 'konacha' });\n   *\n   * Note that dots and bracket in `name` must be backslash-escaped when\n   * the `deep` flag is set, while they must NOT be escaped when the `deep`\n   * flag is not set.\n   *\n   *     // simple referencing\n   *     var css = { '.link[target]': 42 };\n   *     expect(css).to.have.property('.link[target]', 42);\n   *\n   *     // deep referencing\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name property\n   * @alias deep.property\n   * @param {String} name\n   * @param {Mixed} value (optional)\n   * @param {String} message _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('property', function (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isDeep = !!flag(this, 'deep')\n      , descriptor = isDeep ? 'deep property ' : 'property '\n      , negate = flag(this, 'negate')\n      , obj = flag(this, 'object')\n      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null\n      , hasProperty = isDeep\n        ? pathInfo.exists\n        : _.hasProperty(name, obj)\n      , value = isDeep\n        ? pathInfo.value\n        : obj[name];\n\n    if (negate && arguments.length > 1) {\n      if (undefined === value) {\n        msg = (msg != null) ? msg + ': ' : '';\n        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n      }\n    } else {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          val === value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  });\n\n\n  /**\n   * ### .ownProperty(name)\n   *\n   * Asserts that the target has an own property `name`.\n   *\n   *     expect('test').to.have.ownProperty('length');\n   *\n   * @name ownProperty\n   * @alias haveOwnProperty\n   * @param {String} name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnProperty (name, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        obj.hasOwnProperty(name)\n      , 'expected #{this} to have own property ' + _.inspect(name)\n      , 'expected #{this} to not have own property ' + _.inspect(name)\n    );\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, message]])\n   *\n   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.\n   *\n   *     expect('test').to.have.ownPropertyDescriptor('length');\n   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });\n   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });\n   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);\n   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .length\n   *\n   * Sets the `doLength` flag later used as a chain precursor to a value\n   * comparison for the `length` property.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * *Deprecation notice:* Using `length` as an assertion will be deprecated\n   * in version 2.4.0 and removed in 3.0.0. Code using the old style of\n   * asserting for `length` property value using `length(value)` should be\n   * switched to use `lengthOf(value)` instead.\n   *\n   * @name length\n   * @namespace BDD\n   * @api public\n   */\n\n  /**\n   * ### .lengthOf(value[, message])\n   *\n   * Asserts that the target's `length` property has\n   * the expected value.\n   *\n   *     expect([ 1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foobar').to.have.lengthOf(6);\n   *\n   * @name lengthOf\n   * @param {Number} length\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addMethod('lengthOf', assertLength);\n\n  /**\n   * ### .match(regexp)\n   *\n   * Asserts that the target matches a regular expression.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} RegularExpression\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(string)\n   *\n   * Asserts that the string target contains another string.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * @name string\n   * @param {String} string\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n\n  /**\n   * ### .keys(key1, [key2], [...])\n   *\n   * Asserts that the target contains any or all of the passed-in keys.\n   * Use in combination with `any`, `all`, `contains`, or `have` will affect\n   * what will pass.\n   *\n   * When used in conjunction with `any`, at least one key that is passed\n   * in must exist in the target object. This is regardless whether or not\n   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`\n   * should be used in the assertion. If neither are used, the assertion is\n   * defaulted to `all`.\n   *\n   * When both `all` and `contain` are used, the target object must have at\n   * least all of the passed-in keys but may have more keys not listed.\n   *\n   * When both `all` and `have` are used, the target object must both contain\n   * all of the passed-in keys AND the number of keys in the target object must\n   * match the number of keys passed in (in other words, a target object must\n   * have all and only all of the passed-in keys).\n   *\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});\n   *\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , str\n      , ok = true\n      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';\n\n    switch (_.type(keys)) {\n      case \"array\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        break;\n      case \"object\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        keys = Object.keys(keys);\n        break;\n      default:\n        keys = Array.prototype.slice.call(arguments);\n    }\n\n    if (!keys.length) throw new Error('keys required');\n\n    var actual = Object.keys(obj)\n      , expected = keys\n      , len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all');\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      var intersection = expected.filter(function(key) {\n        return ~actual.indexOf(key);\n      });\n      ok = intersection.length > 0;\n    }\n\n    // Has all\n    if (all) {\n      ok = keys.every(function(key){\n        return ~actual.indexOf(key);\n      });\n      if (!flag(this, 'negate') && !flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key){\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + str\n      , 'expected #{this} to not ' + str\n      , expected.slice(0).sort()\n      , actual.sort()\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw(constructor)\n   *\n   * Asserts that the function target will throw a specific error, or specific type of error\n   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n   * for the error's message.\n   *\n   *     var err = new ReferenceError('This is a bad function.');\n   *     var fn = function () { throw err; }\n   *     expect(fn).to.throw(ReferenceError);\n   *     expect(fn).to.throw(Error);\n   *     expect(fn).to.throw(/bad function/);\n   *     expect(fn).to.not.throw('good function');\n   *     expect(fn).to.throw(ReferenceError, /bad function/);\n   *     expect(fn).to.throw(err);\n   *\n   * Please note that when a throw expectation is negated, it will check each\n   * parameter independently, starting with error constructor type. The appropriate way\n   * to check for the existence of a type of error but for a message that does not match\n   * is to use `and`.\n   *\n   *     expect(fn).to.throw(ReferenceError)\n   *        .and.not.throw(/good function/);\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {ErrorConstructor} constructor\n   * @param {String|RegExp} expected error message\n   * @param {String} message _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (constructor, errMsg, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('function');\n\n    var thrown = false\n      , desiredError = null\n      , name = null\n      , thrownError = null;\n\n    if (arguments.length === 0) {\n      errMsg = null;\n      constructor = null;\n    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n      errMsg = constructor;\n      constructor = null;\n    } else if (constructor && constructor instanceof Error) {\n      desiredError = constructor;\n      constructor = null;\n      errMsg = null;\n    } else if (typeof constructor === 'function') {\n      name = constructor.prototype.name;\n      if (!name || (name === 'Error' && constructor !== Error)) {\n        name = constructor.name || (new constructor()).name;\n      }\n    } else {\n      constructor = null;\n    }\n\n    try {\n      obj();\n    } catch (err) {\n      // first, check desired error\n      if (desiredError) {\n        this.assert(\n            err === desiredError\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp}'\n          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        flag(this, 'object', err);\n        return this;\n      }\n\n      // next, check constructor\n      if (constructor) {\n        this.assert(\n            err instanceof constructor\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n          , name\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        if (!errMsg) {\n          flag(this, 'object', err);\n          return this;\n        }\n      }\n\n      // next, check message\n      var message = 'error' === _.type(err) && \"message\" in err\n        ? err.message\n        : '' + err;\n\n      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n        this.assert(\n            errMsg.exec(message)\n          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n          , 'expected #{this} to throw error not matching #{exp}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n        this.assert(\n            ~message.indexOf(errMsg)\n          , 'expected #{this} to throw error including #{exp} but got #{act}'\n          , 'expected #{this} to throw error not including #{act}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else {\n        thrown = true;\n        thrownError = err;\n      }\n    }\n\n    var actuallyGot = ''\n      , expectedThrown = name !== null\n        ? name\n        : desiredError\n          ? '#{exp}' //_.inspect(desiredError)\n          : 'an error';\n\n    if (thrown) {\n      actuallyGot = ' but #{act} was thrown'\n    }\n\n    this.assert(\n        thrown === true\n      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n    );\n\n    flag(this, 'object', thrownError);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method)\n   *\n   * Asserts that the object or class target will respond to a method.\n   *\n   *     Klass.prototype.bar = function(){};\n   *     expect(Klass).to.respondTo('bar');\n   *     expect(obj).to.respondTo('bar');\n   *\n   * To check if a constructor will respond to a static function,\n   * set the `itself` flag.\n   *\n   *     Klass.baz = function(){};\n   *     expect(Klass).itself.to.respondTo('baz');\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === _.type(obj) && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Sets the `itself` flag, later used by the `respondTo` assertion.\n   *\n   *     function Foo() {}\n   *     Foo.bar = function() {}\n   *     Foo.prototype.baz = function() {}\n   *\n   *     expect(Foo).itself.to.respondTo('bar');\n   *     expect(Foo).itself.not.to.respondTo('baz');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(method)\n   *\n   * Asserts that the target passes a given truth test.\n   *\n   *     expect(1).to.satisfy(function(num) { return num > 0; });\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , this.negate ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta)\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj, msg).is.a('number');\n    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {\n      throw new Error('the arguments to closeTo or approximately must be numbers');\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  function isSubsetOf(subset, superset, cmp) {\n    return subset.every(function(elem) {\n      if (!cmp) return superset.indexOf(elem) !== -1;\n\n      return superset.some(function(elem2) {\n        return cmp(elem, elem2);\n      });\n    })\n  }\n\n  /**\n   * ### .members(set)\n   *\n   * Asserts that the target is a superset of `set`,\n   * or that the target and `set` have the same strictly-equal (===) members.\n   * Alternately, if the `deep` flag is set, set members are compared for deep\n   * equality.\n   *\n   *     expect([1, 2, 3]).to.include.members([3, 2]);\n   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n   *\n   *     expect([4, 2]).to.have.members([2, 4]);\n   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n   *\n   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj).to.be.an('array');\n    new Assertion(subset).to.be.an('array');\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    if (flag(this, 'contains')) {\n      return this.assert(\n          isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to be a superset of #{act}'\n        , 'expected #{this} to not be a superset of #{act}'\n        , obj\n        , subset\n      );\n    }\n\n    this.assert(\n        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to have the same members as #{act}'\n        , 'expected #{this} to not have the same members as #{act}'\n        , obj\n        , subset\n    );\n  });\n\n  /**\n   * ### .oneOf(list)\n   *\n   * Assert that a value appears somewhere in the top level of array `list`.\n   *\n   *     expect('a').to.be.oneOf(['a', 'b', 'c']);\n   *     expect(9).to.not.be.oneOf(['z']);\n   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);\n   *\n   *     var three = [3];\n   *     // for object-types, contents are not compared\n   *     expect(three).to.not.be.oneOf([1, 2, [3]]);\n   *     // comparing references works\n   *     expect(three).to.be.oneOf([1, 2, three]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object');\n    new Assertion(list).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(function)\n   *\n   * Asserts that a function changes an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 3 };\n   *     var noChangeFn = function() { return 'foo' + 'bar'; }\n   *     expect(fn).to.change(obj, 'val');\n   *     expect(noChangeFn).to.not.change(obj, 'val')\n   *\n   * @name change\n   * @alias changes\n   * @alias Change\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      initial !== object[prop]\n      , 'expected .' + prop + ' to change'\n      , 'expected .' + prop + ' to not change'\n    );\n  }\n\n  Assertion.addChainableMethod('change', assertChanges);\n  Assertion.addChainableMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(function)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     expect(fn).to.increase(obj, 'val');\n   *\n   * @name increase\n   * @alias increases\n   * @alias Increase\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial > 0\n      , 'expected .' + prop + ' to increase'\n      , 'expected .' + prop + ' to not increase'\n    );\n  }\n\n  Assertion.addChainableMethod('increase', assertIncreases);\n  Assertion.addChainableMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(function)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     expect(fn).to.decrease(obj, 'val');\n   *\n   * @name decrease\n   * @alias decreases\n   * @alias Decrease\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial < 0\n      , 'expected .' + prop + ' to decrease'\n      , 'expected .' + prop + ' to not decrease'\n    );\n  }\n\n  Assertion.addChainableMethod('decrease', assertDecreases);\n  Assertion.addChainableMethod('decreases', assertDecreases);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible (can have new properties added to\n   * it).\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect({}).to.be.extensible;\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isExtensible;\n\n    try {\n      isExtensible = Object.isExtensible(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isExtensible = false;\n      else throw err;\n    }\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect({}).to.not.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isSealed;\n\n    try {\n      isSealed = Object.isSealed(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isSealed = true;\n      else throw err;\n    }\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect({}).to.not.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isFrozen;\n\n    try {\n      isFrozen = Object.isFrozen(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isFrozen = true;\n      else throw err;\n    }\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n};\n",
    "/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   * Asserts that value is NaN\n   *\n   *    assert.isNaN('foo', 'foo is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   * Asserts that value is not NaN\n   *\n   *    assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg).not.to.be.NaN;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('number');\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude).not.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop);\n  };\n\n  /**\n   * ### .deepProperty(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`, which can be a\n   * string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name deepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop);\n  };\n\n  /**\n   * ### .notDeepProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notDeepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`.\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.property(prop, val);\n  };\n\n  /**\n   * ### .propertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`.\n   *\n   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n   *\n   * @name propertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for deep\n   * reference.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`. `property` can use dot- and\n   * bracket-notation for deep reference.\n   *\n   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *\n   * @name deepPropertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg).to.have.length(len);\n  };\n\n  /**\n   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n   *\n   * Asserts that `function` will throw an error that is an instance of\n   * `constructor`, or alternately that it will throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, ReferenceError, 'function throws a reference error');\n   *     assert.throws(fn, ReferenceError, /function throws a reference error/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errt, errs, msg) {\n    if ('string' === typeof errt || errt instanceof RegExp) {\n      errs = errt;\n      errt = null;\n    }\n\n    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(function, [constructor/regexp], [message])\n   *\n   * Asserts that `function` will _not_ throw an error that is an instance of\n   * `constructor`, or alternately that it will not throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n   *\n   * @name doesNotThrow\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, type, msg) {\n    if ('string' === typeof type) {\n      msg = type;\n      type = null;\n    }\n\n    new Assertion(fn, msg).to.not.Throw(type);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        throw new Error('Invalid operator \"' + operator + '\"');\n    }\n    var test = new Assertion(ok, msg);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members.\n   * Order is not taken into account.\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.\n   * Order is not taken into account.\n   *\n   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset`.\n   * Order is not taken into account.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` - using deep equality checking.\n   * Order is not taken into account.\n   * Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ {a: 1}, {b: 2}, {c: 3} ], [ {b: 2}, {a: 1}, {b: 2} ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg).to.be.oneOf(list);\n  }\n\n   /**\n   * ### .changes(function, object, property)\n   *\n   * Asserts that a function changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop) {\n    new Assertion(fn).to.change(obj, prop);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property)\n   *\n   * Asserts that a function does not changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop) {\n    new Assertion(fn).to.not.change(obj, prop);\n  }\n\n   /**\n   * ### .increases(function, object, property)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop) {\n    new Assertion(fn).to.increase(obj, prop);\n  }\n\n   /**\n   * ### .doesNotIncrease(function, object, property)\n   *\n   * Asserts that a function does not increase object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.increase(obj, prop);\n  }\n\n   /**\n   * ### .decreases(function, object, property)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop) {\n    new Assertion(fn).to.decrease(obj, prop);\n  }\n\n   /**\n   * ### .doesNotDecrease(function, object, property)\n   *\n   * Asserts that a function does not decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.decrease(obj, prop);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freese({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.frozen;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen');\n};\n",
    "/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Expect\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n",
    "/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace Should\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n",
    "/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar transferFlags = require('./transferFlags');\nvar flag = require('./flag');\nvar config = require('../config');\n\n/*!\n * Module variables\n */\n\n// Check whether `__proto__` is supported\nvar hasProtoSupport = '__proto__' in Object;\n\n// Without `__proto__` support, this module will need to add properties to a function.\n// However, some Function.prototype methods cannot be overwritten,\n// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\nvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### addChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var assert = function assert() {\n          var old_ssfi = flag(this, 'ssfi');\n          if (old_ssfi && config.includeStack === false)\n            flag(this, 'ssfi', assert);\n          var result = chainableBehavior.method.apply(this, arguments);\n          return result === undefined ? this : result;\n        };\n\n        // Use `__proto__` if available\n        if (hasProtoSupport) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = assert.__proto__ = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (!excludeNames.test(asserterName)) {\n              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n              Object.defineProperty(assert, asserterName, pd);\n            }\n          });\n        }\n\n        transferFlags(this, assert);\n        return assert;\n      }\n    , configurable: true\n  });\n};\n",
    "/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\n\n/**\n * ### .addMethod (ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\nvar flag = require('./flag');\n\nmodule.exports = function (ctx, name, method) {\n  ctx[name] = function () {\n    var old_ssfi = flag(this, 'ssfi');\n    if (old_ssfi && config.includeStack === false)\n      flag(this, 'ssfi', ctx[name]);\n    var result = method.apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n",
    "/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\nvar flag = require('./flag');\n\n/**\n * ### addProperty (ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  Object.defineProperty(ctx, name,\n    { get: function addProperty() {\n        var old_ssfi = flag(this, 'ssfi');\n        if (old_ssfi && config.includeStack === false)\n          flag(this, 'ssfi', addProperty);\n\n        var result = getter.call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n",
    "/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function (obj, types) {\n  var obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  if (!types.some(function (expected) { return type(obj) === expected; })) {\n    throw new AssertionError(\n      'object tested must be ' + str + ', but ' + type(obj) + ' given'\n    );\n  }\n};\n",
    "/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function (obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n",
    "/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function (obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n",
    "/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n",
    "/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n",
    "/*!\n * Chai - getName utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getName(func)\n *\n * Gets the name of a function, in a cross-browser way.\n *\n * @param {Function} a function (usually a constructor)\n * @namespace Utils\n * @name getName\n */\n\nmodule.exports = function (func) {\n  if (func.name) return func.name;\n\n  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n  return match && match[1] ? match[1] : \"\";\n};\n",
    "/*!\n * Chai - getPathInfo utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar hasProperty = require('./hasProperty');\n\n/**\n * ### .getPathInfo(path, object)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nmodule.exports = function getPathInfo(path, obj) {\n  var parsed = parsePath(path),\n      last = parsed[parsed.length - 1];\n\n  var info = {\n    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: _getPathValue(parsed, obj)\n  };\n  info.exists = hasProperty(info.name, info.parent);\n\n  return info;\n};\n\n\n/*!\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `_getPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be as near infinitely deep and nested\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath (path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[')\n    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function (value) {\n    var re = /^\\[(\\d+)\\]$/\n      , mArr = re.exec(value);\n    if (mArr) return { i: parseFloat(mArr[1]) };\n    else return { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n  });\n}\n\n\n/*!\n * ## _getPathValue(parsed, obj)\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(parsed, obj);\n *\n * @param {Object} parsed definition from `parsePath`.\n * @param {Object} object to search against\n * @param {Number} object to search against\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction _getPathValue (parsed, obj, index) {\n  var tmp = obj\n    , res;\n\n  index = (index === undefined ? parsed.length : index);\n\n  for (var i = 0, l = index; i < l; i++) {\n    var part = parsed[i];\n    if (tmp) {\n      if ('undefined' !== typeof part.p)\n        tmp = tmp[part.p];\n      else if ('undefined' !== typeof part.i)\n        tmp = tmp[part.i];\n      if (i == (l - 1)) res = tmp;\n    } else {\n      res = undefined;\n    }\n  }\n  return res;\n}\n",
    "/*!\n * Chai - getPathValue utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\nvar getPathInfo = require('./getPathInfo');\n\n/**\n * ### .getPathValue(path, object)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue('prop1.str', obj); // Hello\n *     getPathValue('prop1.att[2]', obj); // b\n *     getPathValue('prop2.arr[0].nested', obj); // Universe\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\nmodule.exports = function(path, obj) {\n  var info = getPathInfo(path, obj);\n  return info.value;\n};\n",
    "/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n",
    "/*!\n * Chai - hasProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has\n * named property or numeric array index.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with natives\n * and null/undefined values.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty('str', obj);  // true\n *     hasProperty('constructor', obj);  // true\n *     hasProperty('bar', obj);  // false\n *\n *     hasProperty('length', obj.str); // true\n *     hasProperty(1, obj.str);  // true\n *     hasProperty(5, obj.str);  // false\n *\n *     hasProperty('length', obj.arr);  // true\n *     hasProperty(2, obj.arr);  // true\n *     hasProperty(3, obj.arr);  // false\n *\n * @param {Objuect} object\n * @param {String|Number} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nvar literals = {\n    'number': Number\n  , 'string': String\n};\n\nmodule.exports = function hasProperty(name, obj) {\n  var ot = type(obj);\n\n  // Bad Object, obviously no props at all\n  if(ot === 'null' || ot === 'undefined')\n    return false;\n\n  // The `in` operator does not work with certain literals\n  // box these before the check\n  if(literals[ot] && typeof obj !== 'object')\n    obj = new literals[ot](obj);\n\n  return name in obj;\n};\n",
    "/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main exports\n */\n\nvar exports = module.exports = {};\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path value\n */\n\nexports.getPathValue = require('./getPathValue');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = require('./getPathInfo');\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = require('./hasProperty');\n\n/*!\n * Function name\n */\n\nexports.getName = require('./getName');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n",
    "// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('./getName');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\nmodule.exports = inspect;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      var name = getName(value);\n      var nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    var name = getName(value);\n    var nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str;\n  if (value.__lookupGetter__) {\n    if (value.__lookupGetter__(key)) {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n",
    "/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay (object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function (obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n",
    "/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.length(3);\n *     expect(myFoo).to.have.length.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function () {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    return result === undefined ? this : result;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function () {\n    var result = method(_method).apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n",
    "/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteMethod (ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () { return this; };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  ctx[name] = function () {\n    var result = method(_super).apply(this, arguments);\n    return result === undefined ? this : result;\n  }\n};\n",
    "/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteProperty (ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter(_super).call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n",
    "/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * # test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n",
    "/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, and `message`)\n * will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function (assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n",
    "/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n",
    "module.exports = require('./lib/eql');\n",
    "/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar type = require('type-detect');\n\n/*!\n * Buffer.isBuffer browser shim\n */\n\nvar Buffer;\ntry { Buffer = require('buffer').Buffer; }\ncatch(ex) {\n  Buffer = {};\n  Buffer.isBuffer = function() { return false; }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\n\n/**\n * Assert super-strict (egal) equality between\n * two objects of any type.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @param {Array} memoised (optional)\n * @return {Boolean} equal match\n */\n\nfunction deepEqual(a, b, m) {\n  if (sameValue(a, b)) {\n    return true;\n  } else if ('date' === type(a)) {\n    return dateEqual(a, b);\n  } else if ('regexp' === type(a)) {\n    return regexpEqual(a, b);\n  } else if (Buffer.isBuffer(a)) {\n    return bufferEqual(a, b);\n  } else if ('arguments' === type(a)) {\n    return argumentsEqual(a, b, m);\n  } else if (!typeEqual(a, b)) {\n    return false;\n  } else if (('object' !== type(a) && 'object' !== type(b))\n  && ('array' !== type(a) && 'array' !== type(b))) {\n    return sameValue(a, b);\n  } else {\n    return objectEqual(a, b, m);\n  }\n}\n\n/*!\n * Strict (egal) equality test. Ensures that NaN always\n * equals NaN and `-0` does not equal `+0`.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} equal match\n */\n\nfunction sameValue(a, b) {\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  return a !== a && b !== b;\n}\n\n/*!\n * Compare the types of two given objects and\n * return if they are equal. Note that an Array\n * has a type of `array` (not `object`) and arguments\n * have a type of `arguments` (not `array`/`object`).\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction typeEqual(a, b) {\n  return type(a) === type(b);\n}\n\n/*!\n * Compare two Date objects by asserting that\n * the time values are equal using `saveValue`.\n *\n * @param {Date} a\n * @param {Date} b\n * @return {Boolean} result\n */\n\nfunction dateEqual(a, b) {\n  if ('date' !== type(b)) return false;\n  return sameValue(a.getTime(), b.getTime());\n}\n\n/*!\n * Compare two regular expressions by converting them\n * to string and checking for `sameValue`.\n *\n * @param {RegExp} a\n * @param {RegExp} b\n * @return {Boolean} result\n */\n\nfunction regexpEqual(a, b) {\n  if ('regexp' !== type(b)) return false;\n  return sameValue(a.toString(), b.toString());\n}\n\n/*!\n * Assert deep equality of two `arguments` objects.\n * Unfortunately, these must be sliced to arrays\n * prior to test to ensure no bad behavior.\n *\n * @param {Arguments} a\n * @param {Arguments} b\n * @param {Array} memoize (optional)\n * @return {Boolean} result\n */\n\nfunction argumentsEqual(a, b, m) {\n  if ('arguments' !== type(b)) return false;\n  a = [].slice.call(a);\n  b = [].slice.call(b);\n  return deepEqual(a, b, m);\n}\n\n/*!\n * Get enumerable properties of a given object.\n *\n * @param {Object} a\n * @return {Array} property names\n */\n\nfunction enumerable(a) {\n  var res = [];\n  for (var key in a) res.push(key);\n  return res;\n}\n\n/*!\n * Simple equality for flat iterable objects\n * such as Arrays or Node.js buffers.\n *\n * @param {Iterable} a\n * @param {Iterable} b\n * @return {Boolean} result\n */\n\nfunction iterableEqual(a, b) {\n  if (a.length !==  b.length) return false;\n\n  var i = 0;\n  var match = true;\n\n  for (; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      match = false;\n      break;\n    }\n  }\n\n  return match;\n}\n\n/*!\n * Extension to `iterableEqual` specifically\n * for Node.js Buffers.\n *\n * @param {Buffer} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction bufferEqual(a, b) {\n  if (!Buffer.isBuffer(b)) return false;\n  return iterableEqual(a, b);\n}\n\n/*!\n * Block for `objectEqual` ensuring non-existing\n * values don't get in.\n *\n * @param {Mixed} object\n * @return {Boolean} result\n */\n\nfunction isValue(a) {\n  return a !== null && a !== undefined;\n}\n\n/*!\n * Recursively check the equality of two objects.\n * Once basic sameness has been established it will\n * defer to `deepEqual` for each enumerable key\n * in the object.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction objectEqual(a, b, m) {\n  if (!isValue(a) || !isValue(b)) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  var i;\n  if (m) {\n    for (i = 0; i < m.length; i++) {\n      if ((m[i][0] === a && m[i][1] === b)\n      ||  (m[i][0] === b && m[i][1] === a)) {\n        return true;\n      }\n    }\n  } else {\n    m = [];\n  }\n\n  try {\n    var ka = enumerable(a);\n    var kb = enumerable(b);\n  } catch (ex) {\n    return false;\n  }\n\n  ka.sort();\n  kb.sort();\n\n  if (!iterableEqual(ka, kb)) {\n    return false;\n  }\n\n  m.push([ a, b ]);\n\n  var key;\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], m)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n",
    "module.exports = require('./lib/type');\n",
    "/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/*!\n * Detectable javascript natives\n */\n\nvar natives = {\n    '[object Array]': 'array'\n  , '[object RegExp]': 'regexp'\n  , '[object Function]': 'function'\n  , '[object Arguments]': 'arguments'\n  , '[object Date]': 'date'\n};\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\n\nfunction getType (obj) {\n  var str = Object.prototype.toString.call(obj);\n  if (natives[str]) return natives[str];\n  if (obj === null) return 'null';\n  if (obj === undefined) return 'undefined';\n  if (obj === Object(obj)) return 'object';\n  return typeof obj;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library () {\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function (type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function (obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n",
    "/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nvar objectTypeRegexp = /^\\[object (.*)\\]$/;\n\nfunction getType(obj) {\n  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();\n  // Let \"new String('')\" return 'object'\n  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';\n  // PhantomJS has type \"DOMWindow\" for null\n  if (obj === null) return 'null';\n  // PhantomJS has type \"DOMWindow\" for undefined\n  if (obj === undefined) return 'undefined';\n  return type;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library() {\n  if (!(this instanceof Library)) return new Library();\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function(type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function(obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n",
    "/* jshint node: true */\n(function () {\n    \"use strict\";\n\n    function CookieAccessInfo(domain, path, secure, script) {\n        if (this instanceof CookieAccessInfo) {\n            this.domain = domain || undefined;\n            this.path = path || \"/\";\n            this.secure = !!secure;\n            this.script = !!script;\n            return this;\n        }\n        return new CookieAccessInfo(domain, path, secure, script);\n    }\n    CookieAccessInfo.All = Object.freeze(Object.create(null));\n    exports.CookieAccessInfo = CookieAccessInfo;\n\n    function Cookie(cookiestr, request_domain, request_path) {\n        if (cookiestr instanceof Cookie) {\n            return cookiestr;\n        }\n        if (this instanceof Cookie) {\n            this.name = null;\n            this.value = null;\n            this.expiration_date = Infinity;\n            this.path = String(request_path || \"/\");\n            this.explicit_path = false;\n            this.domain = request_domain || null;\n            this.explicit_domain = false;\n            this.secure = false; //how to define default?\n            this.noscript = false; //httponly\n            if (cookiestr) {\n                this.parse(cookiestr, request_domain, request_path);\n            }\n            return this;\n        }\n        return new Cookie(cookiestr, request_domain, request_path);\n    }\n    exports.Cookie = Cookie;\n\n    Cookie.prototype.toString = function toString() {\n        var str = [this.name + \"=\" + this.value];\n        if (this.expiration_date !== Infinity) {\n            str.push(\"expires=\" + (new Date(this.expiration_date)).toGMTString());\n        }\n        if (this.domain) {\n            str.push(\"domain=\" + this.domain);\n        }\n        if (this.path) {\n            str.push(\"path=\" + this.path);\n        }\n        if (this.secure) {\n            str.push(\"secure\");\n        }\n        if (this.noscript) {\n            str.push(\"httponly\");\n        }\n        return str.join(\"; \");\n    };\n\n    Cookie.prototype.toValueString = function toValueString() {\n        return this.name + \"=\" + this.value;\n    };\n\n    var cookie_str_splitter = /[:](?=\\s*[a-zA-Z0-9_\\-]+\\s*[=])/g;\n    Cookie.prototype.parse = function parse(str, request_domain, request_path) {\n        if (this instanceof Cookie) {\n            var parts = str.split(\";\").filter(function (value) {\n                    return !!value;\n                }),\n                pair = parts[0].match(/([^=]+)=([\\s\\S]*)/),\n                key = pair[1],\n                value = pair[2],\n                i;\n            this.name = key;\n            this.value = value;\n\n            for (i = 1; i < parts.length; i += 1) {\n                pair = parts[i].match(/([^=]+)(?:=([\\s\\S]*))?/);\n                key = pair[1].trim().toLowerCase();\n                value = pair[2];\n                switch (key) {\n                case \"httponly\":\n                    this.noscript = true;\n                    break;\n                case \"expires\":\n                    this.expiration_date = value ?\n                            Number(Date.parse(value)) :\n                            Infinity;\n                    break;\n                case \"path\":\n                    this.path = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_path = true;\n                    break;\n                case \"domain\":\n                    this.domain = value ?\n                            value.trim() :\n                            \"\";\n                    this.explicit_domain = !!this.domain;\n                    break;\n                case \"secure\":\n                    this.secure = true;\n                    break;\n                }\n            }\n\n            if (!this.explicit_path) {\n               this.path = request_path || \"/\";\n            }\n            if (!this.explicit_domain) {\n               this.domain = request_domain;\n            }\n\n            return this;\n        }\n        return new Cookie().parse(str, request_domain, request_path);\n    };\n\n    Cookie.prototype.matches = function matches(access_info) {\n        if (access_info === CookieAccessInfo.All) {\n          return true;\n        }\n        if (this.noscript && access_info.script ||\n                this.secure && !access_info.secure ||\n                !this.collidesWith(access_info)) {\n            return false;\n        }\n        return true;\n    };\n\n    Cookie.prototype.collidesWith = function collidesWith(access_info) {\n        if ((this.path && !access_info.path) || (this.domain && !access_info.domain)) {\n            return false;\n        }\n        if (this.path && access_info.path.indexOf(this.path) !== 0) {\n            return false;\n        }\n        if (this.explicit_path && access_info.path.indexOf( this.path ) !== 0) {\n           return false;\n        }\n        var access_domain = access_info.domain && access_info.domain.replace(/^[\\.]/,'');\n        var cookie_domain = this.domain && this.domain.replace(/^[\\.]/,'');\n        if (cookie_domain === access_domain) {\n            return true;\n        }\n        if (cookie_domain) {\n            if (!this.explicit_domain) {\n                return false; // we already checked if the domains were exactly the same\n            }\n            var wildcard = access_domain.indexOf(cookie_domain);\n            if (wildcard === -1 || wildcard !== access_domain.length - cookie_domain.length) {\n                return false;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    function CookieJar() {\n        var cookies, cookies_list, collidable_cookie;\n        if (this instanceof CookieJar) {\n            cookies = Object.create(null); //name: [Cookie]\n\n            this.setCookie = function setCookie(cookie, request_domain, request_path) {\n                var remove, i;\n                cookie = new Cookie(cookie, request_domain, request_path);\n                //Delete the cookie if the set is past the current time\n                remove = cookie.expiration_date <= Date.now();\n                if (cookies[cookie.name] !== undefined) {\n                    cookies_list = cookies[cookie.name];\n                    for (i = 0; i < cookies_list.length; i += 1) {\n                        collidable_cookie = cookies_list[i];\n                        if (collidable_cookie.collidesWith(cookie)) {\n                            if (remove) {\n                                cookies_list.splice(i, 1);\n                                if (cookies_list.length === 0) {\n                                    delete cookies[cookie.name];\n                                }\n                                return false;\n                            }\n                            cookies_list[i] = cookie;\n                            return cookie;\n                        }\n                    }\n                    if (remove) {\n                        return false;\n                    }\n                    cookies_list.push(cookie);\n                    return cookie;\n                }\n                if (remove) {\n                    return false;\n                }\n                cookies[cookie.name] = [cookie];\n                return cookies[cookie.name];\n            };\n            //returns a cookie\n            this.getCookie = function getCookie(cookie_name, access_info) {\n                var cookie, i;\n                cookies_list = cookies[cookie_name];\n                if (!cookies_list) {\n                    return;\n                }\n                for (i = 0; i < cookies_list.length; i += 1) {\n                    cookie = cookies_list[i];\n                    if (cookie.expiration_date <= Date.now()) {\n                        if (cookies_list.length === 0) {\n                            delete cookies[cookie.name];\n                        }\n                        continue;\n                    }\n\n                    if (cookie.matches(access_info)) {\n                        return cookie;\n                    }\n                }\n            };\n            //returns a list of cookies\n            this.getCookies = function getCookies(access_info) {\n                var matches = [], cookie_name, cookie;\n                for (cookie_name in cookies) {\n                    cookie = this.getCookie(cookie_name, access_info);\n                    if (cookie) {\n                        matches.push(cookie);\n                    }\n                }\n                matches.toString = function toString() {\n                    return matches.join(\":\");\n                };\n                matches.toValueString = function toValueString() {\n                    return matches.map(function (c) {\n                        return c.toValueString();\n                    }).join(';');\n                };\n                return matches;\n            };\n\n            return this;\n        }\n        return new CookieJar();\n    }\n    exports.CookieJar = CookieJar;\n\n    //returns list of cookies that were set correctly. Cookies that are expired and removed are not returned.\n    CookieJar.prototype.setCookies = function setCookies(cookies, request_domain, request_path) {\n        cookies = Array.isArray(cookies) ?\n                cookies :\n                cookies.split(cookie_str_splitter);\n        var successful = [],\n            i,\n            cookie;\n        cookies = cookies.map(function(item){\n            return new Cookie(item, request_domain, request_path);\n        });\n        for (i = 0; i < cookies.length; i += 1) {\n            cookie = cookies[i];\n            if (this.setCookie(cookie, request_domain, request_path)) {\n                successful.push(cookie);\n            }\n        }\n        return successful;\n    };\n}());\n",
    "'use strict';\nvar ipRegex = require('ip-regex');\n\nvar ip = module.exports = function (str) {\n\treturn ipRegex({exact: true}).test(str);\n};\n\nip.v4 = function (str) {\n\treturn ipRegex.v4({exact: true}).test(str);\n};\n\nip.v6 = function (str) {\n\treturn ipRegex.v6({exact: true}).test(str);\n};\n",
    "'use strict';\n\nvar v4 = '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}';\nvar v6 = '(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+';\n\nvar ip = module.exports = function (opts) {\n\topts = opts || {};\n\treturn opts.exact ? new RegExp('(?:^' + v4 + '$)|(?:^' + v6 + '$)') :\n\t                    new RegExp('(?:' + v4 + ')|(?:' + v6 + ')', 'g');\n};\n\nip.v4 = function (opts) {\n\topts = opts || {};\n\treturn opts.exact ? new RegExp('^' + v4 + '$') : new RegExp(v4, 'g');\n};\n\nip.v6 = function (opts) {\n\topts = opts || {};\n\treturn opts.exact ? new RegExp('^' + v6 + '$') : new RegExp(v6, 'g');\n};\n",
    "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n",
    "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n",
    "exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",
    "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n",
    "/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n",
    "'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n",
    "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n",
    "'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n"
  ]
}