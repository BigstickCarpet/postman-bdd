{
	"id": "d927055c-b146-518d-c95b-7d899e437553",
	"name": "Postman BDD",
	"description": "",
	"order": [
		"275406a1-ea00-8dd2-9c9c-1a0ca43e8dce",
		"773a4c70-98ed-98dd-4708-df7e8fae8e40"
	],
	"folders": [],
	"timestamp": 1454481160991,
	"owner": "305754",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "275406a1-ea00-8dd2-9c9c-1a0ca43e8dce",
			"headers": "Cache-Control: no-cache\n",
			"url": "http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.js",
			"preRequestScript": null,
			"pathVariables": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "// \"install\" Postman BDD\npostman.setGlobalVariable('postmanBDD', responseBody);\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454537219027,
			"name": "Install Postman BDD",
			"description": "Downloads [Postman BDD](https://github.com/BigstickCarpet/postman-bdd) and then \"installs\" it by setting a global variable\n",
			"collectionId": "d927055c-b146-518d-c95b-7d899e437553",
			"responses": []
		},
		{
			"id": "773a4c70-98ed-98dd-4708-df7e8fae8e40",
			"headers": "",
			"url": "https://httpbin.org/get",
			"preRequestScript": "",
			"pathVariables": [],
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "eval(postman.getGlobalVariable('postmanBDD'));\n\nchai.Assertion.addMethod('dateString', function() {\n  var dateStringPattern = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?Z$/i;\n  var value = chai.util.flag(this, 'object');\n  var negate = chai.util.flag(this, 'negate');\n  if (negate) {\n      value.should.not.match(dateStringPattern);\n  }\n  else {\n      value.should.match(dateStringPattern);\n  }\n});\n\ndescribe('Chai HTTP assertions', function() {\n    it('should detect content type', function() {\n        response.should.be.json;\n        response.should.not.be.text;\n        response.should.not.be.html;\n    });\n    \n    it('should parse the body', function() {\n        response.text.should.be.a('string').with.length.above(100);\n        response.body.should.be.an('object');\n        response.body.url.should.equal('https://httpbin.org/get');\n    });\n    \n    it('should parse headers', function() {\n        response.should.have.header('content-length');\n        response.should.have.header('content-type', 'application/json');\n    });\n    \n    it('should support custom assertions', function() {\n       ('2016-04-22T05:30:00.123Z').should.be.a.dateString();\n       ('hello world').should.not.be.a.dateString();\n    });\n});\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1454537299354,
			"name": "Chai HTTP Assertions",
			"description": "",
			"collectionId": "d927055c-b146-518d-c95b-7d899e437553",
			"responses": []
		}
	]
}